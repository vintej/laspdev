

root@csst-06:/home/ubuntu/laspdev# 
root@csst-06:/home/ubuntu/laspdev# python /home/ubuntu/laspdev/utility/setup_laspp.py d37
d37
ip:13.0.0.17
node:g
root@d37:/# [Kroot@d37:/# service vnstat start
[....] Starting vnStat daemon: vnstatd[?25l7[1G[[32m ok [39;49m8[?12l[?25h.
root@d37:/# sysctl -w net.ipv4.ip_forward=0
net.ipv4.ip_forward = 0
root@d37:/# vnstat -u -i d37-eth0
Error: Unable to read database "/var/lib/vnstat/d37-eth0": No such file or directory
Info: -> A new database has been created.
root@d37:/# vnstat -u
root@d37:/# vnstat

                      rx      /      tx      /     total    /   estimated
 eth0:
       Jul '20      4.00 GiB  /       7 KiB  /    4.00 GiB
       Aug '20         0 KiB  /       0 KiB  /       0 KiB  /       0 KiB
      07/06/20      4.00 GiB  /       0 KiB  /    4.00 GiB
         today         0 KiB  /       0 KiB  /       0 KiB  /      --    

 d37-eth0: Not enough data available yet.
root@d37:/# export PEER_SERVICE=partisan_hyparview_peer_service_manager
root@d37:/# export RATE_CLASS=c1
root@d37:/# export RATE_C1=7000
root@d37:/# export RATE_C2=40000
root@d37:/# export RATE_C3=70000
root@d37:/# export DELTA_INTERVAL=7000
root@d37:/# export PROPAGATE_ON_UPDATE=false
root@d37:/# export MAX_ACTIVE_SIZE=50
root@d37:/# cd /opt/lasp
root@d37:/opt/lasp# epmd -daemon
root@d37:/opt/lasp# rebar3 shell --name g@13.0.0.17
[0;32m===> Verifying dependencies...
[0m[0;32m===> Compiling lasp
[0mErlang/OTP 19 [erts-8.3] [source] [64-bit] [smp:24:24] [ds:24:24:10] [async-threads:0] [hipe] [kernel-poll:false]

Eshell V8.3  (abort with ^G)
(g@13.0.0.17)1> [0;35m===> The rebar3 shell is a development tool; to deploy applications in production, consider using releases (http://www.rebar3.org/docs/releases)
[0m03:54:05.492 [info] Application lager started on node 'g@13.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,sasl_safe_sup}
             started: [{pid,<0.253.0>},
                       {id,alarm_handler},
                       {mfargs,{alarm_handler,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,2000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,sasl_sup}
             started: [{pid,<0.252.0>},
                       {id,sasl_safe_sup},
                       {mfargs,
                           {supervisor,start_link,
                               [{local,sasl_safe_sup},sasl,safe]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,sasl_sup}
             started: [{pid,<0.254.0>},
                       {id,release_handler},
                       {mfargs,{release_handler,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,2000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: sasl
          started_at: 'g@13.0.0.17'
03:54:05.628 [info] Application sasl started on node 'g@13.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: lasp_support
          started_at: 'g@13.0.0.17'
03:54:05.628 [info] Application lasp_support started on node 'g@13.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: acceptor_pool
          started_at: 'g@13.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: quickrand
          started_at: 'g@13.0.0.17'
03:54:05.630 [info] Application acceptor_pool started on node 'g@13.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: uuid
          started_at: 'g@13.0.0.17'
03:54:05.634 [info] Application quickrand started on node 'g@13.0.0.17'
03:54:05.634 [info] Application uuid started on node 'g@13.0.0.17'
03:54:05.662 [info] Using node name: 'g@13.0.0.17'
03:54:05.668 [info] Resolving "13.0.0.17"...

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,kernel_safe_sup}
             started: [{pid,<0.266.0>},
                       {id,timer_server},
                       {mfargs,{timer,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,1000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,inet_gethost_native_sup}
             started: [{pid,<0.268.0>},{mfa,{inet_gethost_native,init,[[]]}}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,kernel_safe_sup}
             started: [{pid,<0.267.0>},
                       {id,inet_gethost_native_sup},
                       {mfargs,{inet_gethost_native,start_link,[]}},
                       {restart_type,temporary},
                       {shutdown,1000},
                       {child_type,worker}]
03:54:05.682 [info] Resolved "g@13.0.0.17" to {13,0,0,17}
03:54:05.682 [info] Resolved "13.0.0.17" to {13,0,0,17}
03:54:06.003 [info] Partisan listening on {13,0,0,17}:38931 listen_addrs: [#{ip => {13,0,0,17},port => 38931}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.313.0>},
                       {id,partisan_rpc_backend},
                       {mfargs,{partisan_rpc_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.314.0>},
                       {id,partisan_acknowledgement_backend},
                       {mfargs,
                           {partisan_acknowledgement_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:06.092 [info] Not using container orchestration; disabling.

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.315.0>},
                       {id,partisan_orchestration_backend},
                       {mfargs,{partisan_orchestration_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:06.239 [info] node 'g@13.0.0.17' choosing random seed: {3262783,-576460745397756331,-576460752303423419}

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.316.0>},
                       {id,partisan_hyparview_peer_service_manager},
                       {mfargs,
                           {partisan_hyparview_peer_service_manager,
                               start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.317.0>},
                       {id,partisan_peer_service_events},
                       {mfargs,{partisan_peer_service_events,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:06.254 [info] node 'g@13.0.0.17' choosing random seed: {3262783,-576460745397756331,-576460752303423419}

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.318.0>},
                       {id,partisan_plumtree_backend},
                       {mfargs,{partisan_plumtree_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.319.0>},
                       {id,partisan_plumtree_broadcast},
                       {mfargs,{partisan_plumtree_broadcast,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.320.0>},
                       {id,partisan_monitor},
                       {mfargs,{partisan_monitor,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_pool_sup}
             started: [{pid,<0.322.0>},
                       {id,partisan_pool},
                       {mfargs,{partisan_pool,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_pool_sup}
             started: [{pid,<0.323.0>},
                       {id,{partisan_socket,{13,0,0,17},38931}},
                       {mfargs,
                           {partisan_socket,start_link,[{13,0,0,17},38931]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.321.0>},
                       {id,partisan_pool_sup},
                       {mfargs,{partisan_pool_sup,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,20000},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
         application: partisan
          started_at: 'g@13.0.0.17'
03:54:06.594 [info] Application partisan started on node 'g@13.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,plumtree_sup}
             started: [{pid,<0.338.0>},
                       {id,plumtree_broadcast},
                       {mfargs,{plumtree_broadcast,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
         application: plumtree
          started_at: 'g@13.0.0.17'
03:54:06.703 [info] Application plumtree started on node 'g@13.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
         application: gen_fsm_compat
          started_at: 'g@13.0.0.17'
03:54:06.704 [info] Application gen_fsm_compat started on node 'g@13.0.0.17'
03:54:06.710 [info] Setting jitter: false
03:54:06.770 [info] Setting jitter percent: 1
03:54:06.792 [info] Setting event interval: 0
03:54:06.804 [info] Setting max events: 1000
03:54:06.809 [info] Setting extended logging: false
03:54:06.831 [info] Setting mailbox logging: false
03:54:06.839 [info] Setting operation mode: delta_based
03:54:06.847 [info] Setting set type: orset
03:54:06.869 [info] Setting broadcast: false
03:54:07.123 [info] Membership: false
03:54:07.130 [info] Workflow: false
03:54:07.137 [info] AdClientEnabled: false
03:54:07.141 [info] AdServerEnabled: false
03:54:07.143 [info] TournClientEnabled: false
03:54:07.144 [info] TournServerEnabled: false
03:54:07.148 [info] ThroughputType: gset
03:54:07.166 [info] ThroughputClientEnabled: false
03:54:07.171 [info] ThroughputServerEnabled: false
03:54:07.183 [info] DivergenceType: gcounter
03:54:07.186 [info] DivergenceClientEnabled: false
03:54:07.205 [info] DivergenceServerEnabled: false

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.385.0>},
                       {id,lasp_unique},
                       {mfargs,{lasp_unique,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.386.0>},
                       {id,lasp_plumtree_backend},
                       {mfargs,{lasp_plumtree_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.387.0>},
                       {id,lasp_plumtree_memory_report},
                       {mfargs,{lasp_plumtree_memory_report,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.388.0>},
                       {id,lasp_memory_utilization_report},
                       {mfargs,{lasp_memory_utilization_report,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:07.489 [info] Backend initialized with pid: <0.393.0>
03:54:07.489 [info] Backend lasp_ets_storage_backend initialized: <0.393.0>

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.389.0>},
                       {id,lasp_distribution_backend},
                       {mfargs,{lasp_distribution_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.395.0>},
                       {id,lasp_process_sup},
                       {mfargs,{lasp_process_sup,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
         application: lasp
          started_at: 'g@13.0.0.17'
[0;32m===> Booted types
[0m[0;32m===> Booted gen_flow
[0m[0;32m===> Booted syntax_tools
[0m[0;32m===> Booted compiler
[0m[0;32m===> Booted goldrush
[0m[0;32m===> Booted lager
[0m[0;32m===> Booted sasl
[0m[0;32m===> Booted lasp_support
[0m[0;32m===> Booted acceptor_pool
[0m[0;32m===> Booted quickrand
[0m[0;32m===> Booted uuid
[0m[0;32m===> Booted partisan
[0m[0;32m===> Booted plumtree
[0m[0;32m===> Booted gen_fsm_compat
[0m[0;32m===> Booted lasp
[0m03:54:07.578 [error] Rate Propagations c1: "7000" c2:"40000" c3:"70000" 
03:54:07.585 [error] C1 propagation "2020-08-06T03:54:07.585" 
03:54:07.585 [error] C2 propagation "2020-08-06T03:54:07.585" 
03:54:07.585 [error] C3 propagation "2020-08-06T03:54:07.585" 
03:54:07.585 [error] batched message propagation "2020-08-06T03:54:07.585" 
03:54:07.589 [info] Application lasp started on node 'g@13.0.0.17'

(g@13.0.0.17)1> erlang:set_cookie(node(),'RPJVCXYDYULBNZFEFPHJ').
true
(g@13.0.0.17)2> application:get_env(partisan, max_active_size).
{ok,50}
(g@13.0.0.17)3> application:get_env(partisan, max_passive_size).
{ok,10}
(g@13.0.0.17)4> application:get_env(partisan, min_active_size).
{ok,9}
(g@13.0.0.17)5> lasp_config:get(delta_interval, 7500).
7000
(g@13.0.0.17)6> partisan_config:set(passive_view_shuffle_period, 1000000000).
ok
(g@13.0.0.17)7> partisan_config:get(passive_view_shuffle_period).
1000000000
(g@13.0.0.17)8> )8> 03:54:12.605 [error] Id is not get_connections(): [] 
03:54:12.605 [error] Requesting c1 sub ~n
03:54:12.606 [error] Forwarding Req Id "g@13.0.0.17c1" to Peers RcvHop:0 IncHop:1 
03:54:14.586 [error] C1 propagation "2020-08-06T03:54:14.586" 
03:54:17.586 [error] Sending find_sub batch [] 
03:54:17.586 [error] Sending find_sub_aq batch [] 
03:54:17.586 [error] batched message propagation "2020-08-06T03:54:17.586" 
03:54:21.587 [error] C1 propagation "2020-08-06T03:54:21.587" 
03:54:27.587 [error] Sending find_sub batch [] 
03:54:27.587 [error] Sending find_sub_aq batch [] 
03:54:27.587 [error] batched message propagation "2020-08-06T03:54:27.587" 
03:54:28.589 [error] C1 propagation "2020-08-06T03:54:28.588" 
03:54:35.590 [error] C1 propagation "2020-08-06T03:54:35.590" 
03:54:37.589 [error] Sending find_sub batch [] 
03:54:37.589 [error] Sending find_sub_aq batch [] 
03:54:37.589 [error] batched message propagation "2020-08-06T03:54:37.589" 
03:54:42.591 [error] C1 propagation "2020-08-06T03:54:42.591" 
03:54:47.586 [error] C2 propagation "2020-08-06T03:54:47.586" 
03:54:47.591 [error] Sending find_sub batch [] 
03:54:47.591 [error] Sending find_sub_aq batch [] 
03:54:47.591 [error] batched message propagation "2020-08-06T03:54:47.591" 
03:54:49.592 [error] C1 propagation "2020-08-06T03:54:49.592" 
03:54:56.594 [error] C1 propagation "2020-08-06T03:54:56.594" 
03:54:57.593 [error] Sending find_sub batch [] 
03:54:57.593 [error] Sending find_sub_aq batch [] 
03:54:57.593 [error] batched message propagation "2020-08-06T03:54:57.593" 
03:55:03.596 [error] C1 propagation "2020-08-06T03:55:03.596" 
03:55:07.594 [error] Sending find_sub batch [] 
03:55:07.594 [error] Sending find_sub_aq batch [] 
03:55:07.594 [error] batched message propagation "2020-08-06T03:55:07.594" 
03:55:10.597 [error] C1 propagation "2020-08-06T03:55:10.597" 
03:55:17.586 [error] C3 propagation "2020-08-06T03:55:17.586" 
03:55:17.618 [error] Sending find_sub batch [] 
03:55:17.618 [error] Sending find_sub_aq batch [] 
03:55:17.619 [error] batched message propagation "2020-08-06T03:55:17.619" 
03:55:17.635 [error] C1 propagation "2020-08-06T03:55:17.635" 
03:55:24.636 [error] C1 propagation "2020-08-06T03:55:24.636" 
03:55:27.588 [error] C2 propagation "2020-08-06T03:55:27.588" 
03:55:27.635 [error] Sending find_sub batch [] 
03:55:27.635 [error] Sending find_sub_aq batch [] 
03:55:27.635 [error] batched message propagation "2020-08-06T03:55:27.635" 
03:55:31.637 [error] C1 propagation "2020-08-06T03:55:31.637" 
03:55:37.636 [error] Sending find_sub batch [] 
03:55:37.636 [error] Sending find_sub_aq batch [] 
03:55:37.636 [error] batched message propagation "2020-08-06T03:55:37.636" 
03:55:38.638 [error] C1 propagation "2020-08-06T03:55:38.638" 
03:55:45.639 [error] C1 propagation "2020-08-06T03:55:45.639" 
03:55:47.638 [error] Sending find_sub batch [] 
03:55:47.638 [error] Sending find_sub_aq batch [] 
03:55:47.638 [error] batched message propagation "2020-08-06T03:55:47.638" 
lasp_peer_service:join('a@13.0.0.11').
ok
(g@13.0.0.17)9> 03:55:52.327 [error] LASPVIN found the peer at "2020-08-06T03:55:52.327" for ID: "g@13.0.0.17c1" ToNode: 'a@13.0.0.11' Via:'g@13.0.0.17' 
lasp_peer_service:members().
{ok,['g@13.0.0.17','a@13.0.0.11']}
(g@13.0.0.17)10> 03:55:53.328 [error] Path ToNode:'a@13.0.0.11' does not exists in find_sub_aq
03:55:53.328 [error] ToNode must be a peer 'a@13.0.0.11' as From is self for Id "g@13.0.0.17c1" 
03:55:53.328 [error] Sending Subscription to 'a@13.0.0.11' case4 
03:55:53.328 [error] C1 propagation "2020-08-06T03:55:53.328" 
03:55:53.331 [error] Sending rate "c1" to 'a@13.0.0.11' 
03:55:53.331 [error] Sending Subscription to 'a@13.0.0.11' case4 
03:55:57.640 [error] Sending find_sub batch [] 
03:55:57.640 [error] Sending find_sub_aq batch [] 
03:55:57.640 [error] batched message propagation "2020-08-06T03:55:57.640" 
03:55:58.333 [error] Sending rate "c1" to 'a@13.0.0.11' 
03:55:58.333 [error] Sending Subscription to 'a@13.0.0.11' case4 
03:55:58.365 [error] Rate_subscribe_ack received from 'a@13.0.0.11' for rate "c1" 
03:55:58.366 [error] Rate_subscribe_ack received from 'a@13.0.0.11' for rate "c1" 
03:55:58.368 [error] Rate_subscribe_ack received from 'a@13.0.0.11' for rate "c1" 
03:56:00.330 [error] C1 propagation "2020-08-06T03:56:00.330" 
03:56:07.332 [error] C1 propagation "2020-08-06T03:56:07.332" 
03:56:07.589 [error] C2 propagation "2020-08-06T03:56:07.589" 
03:56:07.641 [error] Sending find_sub batch [] 
03:56:07.641 [error] Sending find_sub_aq batch [] 
03:56:07.641 [error] batched message propagation "2020-08-06T03:56:07.641" 
lasp_delta_based_synchronization_backend:get_members(peer_rates).
[{'a@13.0.0.11',"c1"},
 {"self_rate","c1"},
 {"subscription",'a@13.0.0.11'}]
(g@13.0.0.17)11> 03:56:14.333 [error] C1 propagation "2020-08-06T03:56:14.333" 
03:56:17.643 [error] Sending find_sub batch [] 
03:56:17.643 [error] Sending find_sub_aq batch [] 
03:56:17.643 [error] batched message propagation "2020-08-06T03:56:17.643" 
03:56:21.335 [error] C1 propagation "2020-08-06T03:56:21.335" 
03:56:27.588 [error] C3 propagation "2020-08-06T03:56:27.588" 
03:56:27.644 [error] Sending find_sub batch [] 
03:56:27.644 [error] Sending find_sub_aq batch [] 
03:56:27.644 [error] batched message propagation "2020-08-06T03:56:27.644" 
03:56:28.336 [error] C1 propagation "2020-08-06T03:56:28.336" 
03:56:35.337 [error] C1 propagation "2020-08-06T03:56:35.337" 
03:56:37.646 [error] Sending find_sub batch [] 
03:56:37.646 [error] Sending find_sub_aq batch [] 
03:56:37.646 [error] batched message propagation "2020-08-06T03:56:37.646" 
03:56:42.338 [error] C1 propagation "2020-08-06T03:56:42.338" 
03:56:47.590 [error] C2 propagation "2020-08-06T03:56:47.590" 
03:56:47.647 [error] Sending find_sub batch [] 
03:56:47.647 [error] Sending find_sub_aq batch [] 
03:56:47.647 [error] batched message propagation "2020-08-06T03:56:47.647" 
03:56:49.339 [error] C1 propagation "2020-08-06T03:56:49.339" 
03:56:56.340 [error] C1 propagation "2020-08-06T03:56:56.340" 
03:56:57.649 [error] Sending find_sub batch [] 
03:56:57.649 [error] Sending find_sub_aq batch [] 
03:56:57.649 [error] batched message propagation "2020-08-06T03:56:57.649" 
03:57:03.341 [error] C1 propagation "2020-08-06T03:57:03.341" 
03:57:07.650 [error] Sending find_sub batch [] 
03:57:07.650 [error] Sending find_sub_aq batch [] 
03:57:07.650 [error] batched message propagation "2020-08-06T03:57:07.650" 
03:57:10.342 [error] C1 propagation "2020-08-06T03:57:10.342" 
03:57:17.343 [error] C1 propagation "2020-08-06T03:57:17.343" 
03:57:17.652 [error] Sending find_sub batch [] 
03:57:17.652 [error] Sending find_sub_aq batch [] 
03:57:17.652 [error] batched message propagation "2020-08-06T03:57:17.652" 
03:57:24.345 [error] C1 propagation "2020-08-06T03:57:24.345" 
03:57:27.592 [error] C2 propagation "2020-08-06T03:57:27.592" 
03:57:27.654 [error] Sending find_sub batch [] 
03:57:27.654 [error] Sending find_sub_aq batch [] 
03:57:27.654 [error] batched message propagation "2020-08-06T03:57:27.654" 
03:57:31.347 [error] C1 propagation "2020-08-06T03:57:31.347" 
03:57:37.590 [error] C3 propagation "2020-08-06T03:57:37.590" 
03:57:37.655 [error] Sending find_sub batch [] 
03:57:37.655 [error] Sending find_sub_aq batch [] 
03:57:37.655 [error] batched message propagation "2020-08-06T03:57:37.655" 
03:57:38.348 [error] C1 propagation "2020-08-06T03:57:38.348" 
03:57:45.350 [error] C1 propagation "2020-08-06T03:57:45.350" 
03:57:47.657 [error] Sending find_sub batch [] 
03:57:47.657 [error] Sending find_sub_aq batch [] 
03:57:47.657 [error] batched message propagation "2020-08-06T03:57:47.657" 
03:57:52.352 [error] C1 propagation "2020-08-06T03:57:52.352" 
03:57:57.659 [error] Sending find_sub batch [] 
03:57:57.659 [error] Sending find_sub_aq batch [] 
03:57:57.659 [error] batched message propagation "2020-08-06T03:57:57.659" 
03:57:59.354 [error] C1 propagation "2020-08-06T03:57:59.354" 
03:58:06.355 [error] C1 propagation "2020-08-06T03:58:06.355" 
03:58:07.594 [error] C2 propagation "2020-08-06T03:58:07.594" 
03:58:07.661 [error] Sending find_sub batch [] 
03:58:07.661 [error] Sending find_sub_aq batch [] 
03:58:07.661 [error] batched message propagation "2020-08-06T03:58:07.661" 
03:58:13.357 [error] C1 propagation "2020-08-06T03:58:13.357" 
03:58:17.663 [error] Sending find_sub batch [] 
03:58:17.663 [error] Sending find_sub_aq batch [] 
03:58:17.663 [error] batched message propagation "2020-08-06T03:58:17.663" 
03:58:20.359 [error] C1 propagation "2020-08-06T03:58:20.359" 
03:58:27.360 [error] C1 propagation "2020-08-06T03:58:27.360" 
03:58:27.665 [error] Sending find_sub batch [] 
03:58:27.665 [error] Sending find_sub_aq batch [] 
03:58:27.665 [error] batched message propagation "2020-08-06T03:58:27.665" 
03:58:34.361 [error] C1 propagation "2020-08-06T03:58:34.361" 
03:58:37.667 [error] Sending find_sub batch [] 
03:58:37.667 [error] Sending find_sub_aq batch [] 
03:58:37.667 [error] batched message propagation "2020-08-06T03:58:37.667" 
03:58:41.363 [error] C1 propagation "2020-08-06T03:58:41.363" 
03:58:47.592 [error] C3 propagation "2020-08-06T03:58:47.592" 
03:58:47.601 [error] C2 propagation "2020-08-06T03:58:47.601" 
03:58:47.669 [error] Sending find_sub batch [] 
03:58:47.669 [error] Sending find_sub_aq batch [] 
03:58:47.669 [error] batched message propagation "2020-08-06T03:58:47.669" 
03:58:48.365 [error] C1 propagation "2020-08-06T03:58:48.364" 
03:58:55.366 [error] C1 propagation "2020-08-06T03:58:55.366" 
03:58:57.671 [error] Sending find_sub batch [] 
03:58:57.671 [error] Sending find_sub_aq batch [] 
03:58:57.671 [error] batched message propagation "2020-08-06T03:58:57.671" 
03:59:02.367 [error] C1 propagation "2020-08-06T03:59:02.367" 
03:59:07.689 [error] Sending find_sub batch [] 
03:59:07.689 [error] Sending find_sub_aq batch [] 
03:59:07.689 [error] batched message propagation "2020-08-06T03:59:07.689" 
03:59:09.368 [error] C1 propagation "2020-08-06T03:59:09.368" 
03:59:16.369 [error] C1 propagation "2020-08-06T03:59:16.369" 
03:59:17.691 [error] Sending find_sub batch [] 
03:59:17.691 [error] Sending find_sub_aq batch [] 
03:59:17.691 [error] batched message propagation "2020-08-06T03:59:17.691" 
03:59:23.371 [error] C1 propagation "2020-08-06T03:59:23.371" 
03:59:27.603 [error] C2 propagation "2020-08-06T03:59:27.603" 
03:59:27.692 [error] Sending find_sub batch [] 
03:59:27.692 [error] Sending find_sub_aq batch [] 
03:59:27.692 [error] batched message propagation "2020-08-06T03:59:27.692" 
03:59:30.372 [error] C1 propagation "2020-08-06T03:59:30.372" 
03:59:37.373 [error] C1 propagation "2020-08-06T03:59:37.373" 
03:59:37.694 [error] Sending find_sub batch [] 
03:59:37.694 [error] Sending find_sub_aq batch [] 
03:59:37.694 [error] batched message propagation "2020-08-06T03:59:37.694" 
03:59:44.374 [error] C1 propagation "2020-08-06T03:59:44.374" 
03:59:47.696 [error] Sending find_sub batch [] 
03:59:47.696 [error] Sending find_sub_aq batch [] 
03:59:47.696 [error] batched message propagation "2020-08-06T03:59:47.696" 
03:59:51.375 [error] C1 propagation "2020-08-06T03:59:51.375" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)12> AwMapRes.
[]
(g@13.0.0.17)13> f(AwMapRes).
ok
(g@13.0.0.17)14> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T03:59:55.811"
(g@13.0.0.17)15> 03:59:57.593 [error] C3 propagation "2020-08-06T03:59:57.593" 
03:59:57.698 [error] Sending find_sub batch [] 
03:59:57.698 [error] Sending find_sub_aq batch [] 
03:59:57.698 [error] batched message propagation "2020-08-06T03:59:57.698" 
03:59:58.376 [error] C1 propagation "2020-08-06T03:59:58.376" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)16> AwMapRes.
[]
(g@13.0.0.17)17> f(AwMapRes).
ok
(g@13.0.0.17)18> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:03.103"
(g@13.0.0.17)19> 04:00:05.378 [error] C1 propagation "2020-08-06T04:00:05.378" 
04:00:07.605 [error] C2 propagation "2020-08-06T04:00:07.605" 
04:00:07.700 [error] Sending find_sub batch [] 
04:00:07.700 [error] Sending find_sub_aq batch [] 
04:00:07.700 [error] batched message propagation "2020-08-06T04:00:07.700" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)20> AwMapRes.
[]
(g@13.0.0.17)21> f(AwMapRes).
ok
(g@13.0.0.17)22> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:11.502"
(g@13.0.0.17)23> 04:00:12.379 [error] C1 propagation "2020-08-06T04:00:12.379" 
04:00:17.702 [error] Sending find_sub batch [] 
04:00:17.702 [error] Sending find_sub_aq batch [] 
04:00:17.702 [error] batched message propagation "2020-08-06T04:00:17.702" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)24> AwMapRes.
[]
(g@13.0.0.17)25> f(AwMapRes).
ok
(g@13.0.0.17)26> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:19.875"
(g@13.0.0.17)27> 04:00:19.381 [error] C1 propagation "2020-08-06T04:00:19.381" 
04:00:26.383 [error] C1 propagation "2020-08-06T04:00:26.383" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)28> AwMapRes.
[]
(g@13.0.0.17)29> f(AwMapRes).
ok
(g@13.0.0.17)30> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:27.122"
(g@13.0.0.17)31> 04:00:27.704 [error] Sending find_sub batch [] 
04:00:27.704 [error] Sending find_sub_aq batch [] 
04:00:27.704 [error] batched message propagation "2020-08-06T04:00:27.704" 
04:00:33.384 [error] C1 propagation "2020-08-06T04:00:33.384" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)32> AwMapRes.
[]
(g@13.0.0.17)33> f(AwMapRes).
ok
(g@13.0.0.17)34> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:35.161"
(g@13.0.0.17)35> 04:00:37.706 [error] Sending find_sub batch [] 
04:00:37.706 [error] Sending find_sub_aq batch [] 
04:00:37.706 [error] batched message propagation "2020-08-06T04:00:37.706" 
04:00:40.385 [error] C1 propagation "2020-08-06T04:00:40.385" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)36> AwMapRes.
[]
(g@13.0.0.17)37> f(AwMapRes).
ok
(g@13.0.0.17)38> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:43.198"
(g@13.0.0.17)39> 04:00:47.386 [error] C1 propagation "2020-08-06T04:00:47.386" 
04:00:47.606 [error] C2 propagation "2020-08-06T04:00:47.606" 
04:00:47.708 [error] Sending find_sub batch [] 
04:00:47.708 [error] Sending find_sub_aq batch [] 
04:00:47.708 [error] batched message propagation "2020-08-06T04:00:47.708" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)40> AwMapRes.
[]
(g@13.0.0.17)41> f(AwMapRes).
ok
(g@13.0.0.17)42> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:51.237"
(g@13.0.0.17)43> 04:00:54.387 [error] C1 propagation "2020-08-06T04:00:54.387" 
04:00:57.709 [error] Sending find_sub batch [] 
04:00:57.709 [error] Sending find_sub_aq batch [] 
04:00:57.709 [error] batched message propagation "2020-08-06T04:00:57.709" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)44> AwMapRes.
[]
(g@13.0.0.17)45> f(AwMapRes).
ok
(g@13.0.0.17)46> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:59.275"
(g@13.0.0.17)47> 04:01:01.388 [error] C1 propagation "2020-08-06T04:01:01.388" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)48> AwMapRes.
[]
(g@13.0.0.17)49> f(AwMapRes).
ok
(g@13.0.0.17)50> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:07.314"
(g@13.0.0.17)51> 04:01:07.595 [error] C3 propagation "2020-08-06T04:01:07.595" 
04:01:07.711 [error] Sending find_sub batch [] 
04:01:07.711 [error] Sending find_sub_aq batch [] 
04:01:07.711 [error] batched message propagation "2020-08-06T04:01:07.711" 
04:01:08.389 [error] C1 propagation "2020-08-06T04:01:08.389" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)52> AwMapRes.
[]
(g@13.0.0.17)53> f(AwMapRes).
ok
(g@13.0.0.17)54> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:15.350"
(g@13.0.0.17)55> 04:01:15.390 [error] C1 propagation "2020-08-06T04:01:15.390" 
04:01:17.713 [error] Sending find_sub batch [] 
04:01:17.713 [error] Sending find_sub_aq batch [] 
04:01:17.713 [error] batched message propagation "2020-08-06T04:01:17.713" 
04:01:22.391 [error] C1 propagation "2020-08-06T04:01:22.391" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)56> AwMapRes.
[]
(g@13.0.0.17)57> f(AwMapRes).
ok
(g@13.0.0.17)58> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:23.391"
(g@13.0.0.17)59> 04:01:27.607 [error] C2 propagation "2020-08-06T04:01:27.607" 
04:01:27.715 [error] Sending find_sub batch [] 
04:01:27.715 [error] Sending find_sub_aq batch [] 
04:01:27.715 [error] batched message propagation "2020-08-06T04:01:27.715" 
04:01:29.393 [error] C1 propagation "2020-08-06T04:01:29.393" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)60> AwMapRes.
[]
(g@13.0.0.17)61> f(AwMapRes).
ok
(g@13.0.0.17)62> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:31.427"
(g@13.0.0.17)63> 04:01:36.395 [error] C1 propagation "2020-08-06T04:01:36.395" 
04:01:37.717 [error] Sending find_sub batch [] 
04:01:37.717 [error] Sending find_sub_aq batch [] 
04:01:37.717 [error] batched message propagation "2020-08-06T04:01:37.717" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)64> AwMapRes.
[]
(g@13.0.0.17)65> f(AwMapRes).
ok
(g@13.0.0.17)66> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:39.464"
(g@13.0.0.17)67> 04:01:43.396 [error] C1 propagation "2020-08-06T04:01:43.396" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)68> AwMapRes.
[]
(g@13.0.0.17)69> f(AwMapRes).
ok
(g@13.0.0.17)70> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:47.505"
(g@13.0.0.17)71> 04:01:47.719 [error] Sending find_sub batch [] 
04:01:47.719 [error] Sending find_sub_aq batch [] 
04:01:47.719 [error] batched message propagation "2020-08-06T04:01:47.719" 
04:01:50.397 [error] C1 propagation "2020-08-06T04:01:50.397" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)72> AwMapRes.
[]
(g@13.0.0.17)73> f(AwMapRes).
ok
(g@13.0.0.17)74> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:55.556"
(g@13.0.0.17)75> 04:01:57.398 [error] C1 propagation "2020-08-06T04:01:57.398" 
04:01:57.721 [error] Sending find_sub batch [] 
04:01:57.721 [error] Sending find_sub_aq batch [] 
04:01:57.721 [error] batched message propagation "2020-08-06T04:01:57.721" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)76> AwMapRes.
[]
(g@13.0.0.17)77> f(AwMapRes).
ok
(g@13.0.0.17)78> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:03.593"
(g@13.0.0.17)79> 04:02:04.399 [error] C1 propagation "2020-08-06T04:02:04.399" 
04:02:07.609 [error] C2 propagation "2020-08-06T04:02:07.609" 
04:02:07.723 [error] Sending find_sub batch [] 
04:02:07.723 [error] Sending find_sub_aq batch [] 
04:02:07.723 [error] batched message propagation "2020-08-06T04:02:07.723" 
04:02:11.401 [error] C1 propagation "2020-08-06T04:02:11.401" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)80> AwMapRes.
[]
(g@13.0.0.17)81> f(AwMapRes).
ok
(g@13.0.0.17)82> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:11.638"
(g@13.0.0.17)83> 04:02:17.597 [error] C3 propagation "2020-08-06T04:02:17.597" 
04:02:17.724 [error] Sending find_sub batch [] 
04:02:17.724 [error] Sending find_sub_aq batch [] 
04:02:17.724 [error] batched message propagation "2020-08-06T04:02:17.724" 
04:02:18.403 [error] C1 propagation "2020-08-06T04:02:18.403" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@13.0.0.17)84> AwMapRes.
[]
(g@13.0.0.17)85> f(AwMapRes).
ok
(g@13.0.0.17)86> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:19.681"
(g@13.0.0.17)87> 04:02:24.698 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:02:24.698" Took=35316 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_01_50_311}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:02:24.698 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",0,0},{"delta_send",0,1},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",6,0},{"sub_cancel",0,0}] 
04:02:25.404 [error] C1 propagation "2020-08-06T04:02:25.404" 
04:02:25.405 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:02:25.406 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,2}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:1 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_01_50_311}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)88> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_01_50_311}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)89> f(AwMapRes).
ok
(g@13.0.0.17)90> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:27.721"
(g@13.0.0.17)91> 04:02:27.726 [error] Sending find_sub batch [] 
04:02:27.726 [error] Sending find_sub_aq batch [] 
04:02:27.726 [error] batched message propagation "2020-08-06T04:02:27.726" 
04:02:32.405 [error] C1 propagation "2020-08-06T04:02:32.405" 
04:02:32.413 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:02:32.413 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,2}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:1 
04:02:32.887 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:02:32.887" Took=27596 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_16_427}],[],[],[],[],[],[]}}}}] 
04:02:32.998 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",1,0},{"delta_send",2,2},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",9,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_02_16_427}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)92> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_02_16_427}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)93> f(AwMapRes).
ok
(g@13.0.0.17)94> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:35.760"
(g@13.0.0.17)95> 04:02:37.547 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:02:37.547" Took=33202 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_02_22_447}],[],[],[],[],[],[],[],[],[]}}}}] 
04:02:37.548 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",2,1},{"delta_send",2,3},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",10,0},{"sub_cancel",0,0}] 
04:02:37.728 [error] Sending find_sub batch [] 
04:02:37.728 [error] Sending find_sub_aq batch [] 
04:02:37.728 [error] batched message propagation "2020-08-06T04:02:37.728" 
04:02:39.407 [error] C1 propagation "2020-08-06T04:02:39.407" 
04:02:39.430 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:02:39.430 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,4}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:3 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_02_22_447}],
             [],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)96> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_02_22_447}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)97> f(AwMapRes).
ok
(g@13.0.0.17)98> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:43.811"
(g@13.0.0.17)99> 04:02:44.550 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:02:44.550" Took=33374 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_28_471}],[],[],[],[],[],[]}}}}] 
04:02:44.550 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",3,1},{"delta_send",3,4},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",12,0},{"sub_cancel",0,0}] 
04:02:46.408 [error] C1 propagation "2020-08-06T04:02:46.408" 
04:02:46.415 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:02:46.415 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,5}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:4 
04:02:47.610 [error] C2 propagation "2020-08-06T04:02:47.610" 
04:02:47.730 [error] Sending find_sub batch [] 
04:02:47.730 [error] Sending find_sub_aq batch [] 
04:02:47.730 [error] batched message propagation "2020-08-06T04:02:47.730" 
04:02:51.544 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:02:51.544" Took=26409 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_40_511}],[],[]}}}}] 
04:02:51.545 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",4,4},{"delta_send",4,5},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",14,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)100> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_02_40_511}],
         [],[]}}}}]
(g@13.0.0.17)101> f(AwMapRes).
ok
(g@13.0.0.17)102> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:51.843"
(g@13.0.0.17)103> 04:02:53.409 [error] C1 propagation "2020-08-06T04:02:53.409"  
04:02:53.409 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:02:53.409 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,6}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:5 
04:02:57.732 [error] Sending find_sub batch [] 
04:02:57.732 [error] Sending find_sub_aq batch [] 
04:02:57.732 [error] batched message propagation "2020-08-06T04:02:57.732" 
04:02:58.563 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:02:58.563" Took=34386 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_02_46_534}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:02:58.615 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",5,5},{"delta_send",5,6},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",16,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_02_46_534}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)104> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_02_46_534}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)105> f(AwMapRes).
ok
(g@13.0.0.17)106> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:59.883"
(g@13.0.0.17)107> 04:03:00.410 [error] C1 propagation "2020-08-06T04:03:00.410"  
04:03:00.410 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:03:00.410 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,7}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:6 
04:03:05.549 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:03:05.549" Took=29787 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_52_558}],[]}}}}] 
04:03:05.549 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",6,6},{"delta_send",6,7},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",18,0},{"sub_cancel",0,0}] 
04:03:07.411 [error] C1 propagation "2020-08-06T04:03:07.411" 
04:03:07.411 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:03:07.411 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,8}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:7 
04:03:07.734 [error] Sending find_sub batch [] 
04:03:07.734 [error] Sending find_sub_aq batch [] 
04:03:07.734 [error] batched message propagation "2020-08-06T04:03:07.734" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)108> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)109> f(AwMapRes).
ok
(g@13.0.0.17)110> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:07.961"
(g@13.0.0.17)111> 04:03:12.551 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:03:12.551" Took=25799 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_58_579}],[],[],[],[],[],[]}}}}] 
04:03:12.552 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",7,7},{"delta_send",7,8},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",20,0},{"sub_cancel",0,0}] 
04:03:14.412 [error] C1 propagation "2020-08-06T04:03:14.412" 
04:03:14.412 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:03:14.413 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,9}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:8 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_02_58_579}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)112> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_02_58_579}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)113> f(AwMapRes).
ok
(g@13.0.0.17)114> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:16.172"
(g@13.0.0.17)115> 04:03:17.736 [error] Sending find_sub batch [] 
04:03:17.736 [error] Sending find_sub_aq batch [] 
04:03:17.736 [error] batched message propagation "2020-08-06T04:03:17.736" 
04:03:19.551 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:03:19.550" Took=28637 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_03_04_599}],[],[],[],[],[],[]}}}}] 
04:03:19.553 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",8,8},{"delta_send",8,9},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",22,0},{"sub_cancel",0,0}] 
04:03:21.413 [error] C1 propagation "2020-08-06T04:03:21.413" 
04:03:21.430 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:03:21.430 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,10}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:9 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_03_04_599}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)116> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_03_04_599}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)117> f(AwMapRes).
ok
(g@13.0.0.17)118> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:24.440"
(g@13.0.0.17)119> 04:03:26.563 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:03:26.562" Took=35425 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_03_10_621}],[],[],[],[],[],[],[],[]}}}}] 
04:03:26.563 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",9,9},{"delta_send",9,10},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",24,0},{"sub_cancel",0,0}] 
04:03:27.598 [error] C3 propagation "2020-08-06T04:03:27.598" 
04:03:27.663 [error] C2 propagation "2020-08-06T04:03:27.663" 
04:03:27.737 [error] Sending find_sub batch [] 
04:03:27.737 [error] Sending find_sub_aq batch [] 
04:03:27.737 [error] batched message propagation "2020-08-06T04:03:27.737" 
04:03:28.414 [error] C1 propagation "2020-08-06T04:03:28.414" 
04:03:28.456 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:03:28.456 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,11}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:10 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_03_10_621}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)120> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_03_10_621}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)121> f(AwMapRes).
ok
(g@13.0.0.17)122> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:32.808"
(g@13.0.0.17)123> 04:03:33.563 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:03:33.563" Took=35257 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_03_22_675}]}}}}] 
04:03:33.563 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",10,10},{"delta_send",10,11},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",26,0},{"sub_cancel",0,0}] 
04:03:35.416 [error] C1 propagation "2020-08-06T04:03:35.416" 
04:03:35.462 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:03:35.462 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,12}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:11 
04:03:37.739 [error] Sending find_sub batch [] 
04:03:37.739 [error] Sending find_sub_aq batch [] 
04:03:37.739 [error] batched message propagation "2020-08-06T04:03:37.739" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)124> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)125> f(AwMapRes).
ok
(g@13.0.0.17)126> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:40.129"
(g@13.0.0.17)127> 04:03:40.583 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:03:40.583" Took=54540 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_03_28_697}],[],[],[],[],[],[],[],[]}}}}] 
04:03:40.584 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",11,11},{"delta_send",11,12},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",28,0},{"sub_cancel",0,0}] 
04:03:42.417 [error] C1 propagation "2020-08-06T04:03:42.417" 
04:03:42.433 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:03:42.433 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,13}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:12 
04:03:47.625 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:03:47.625" Took=29300 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_03_34_718}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:03:47.625 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",12,12},{"delta_send",12,13},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",30,0},{"sub_cancel",0,0}] 
04:03:47.778 [error] Sending find_sub batch [] 
04:03:47.779 [error] Sending find_sub_aq batch [] 
04:03:47.779 [error] batched message propagation "2020-08-06T04:03:47.779" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_03_34_718}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)128> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_03_34_718}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)129> f(AwMapRes).
ok
(g@13.0.0.17)130> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:48.168"
(g@13.0.0.17)131> 04:03:49.418 [error] C1 propagation "2020-08-06T04:03:49.418"  
04:03:49.418 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:03:49.418 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,14}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:13 
04:03:54.564 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:03:54.564" Took=30334 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_03_40_736}],[],[],[],[],[],[]}}}}] 
04:03:54.565 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",13,13},{"delta_send",13,14},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",32,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_03_40_736}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)132> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_03_40_736}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)133> f(AwMapRes).
ok
(g@13.0.0.17)134> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:56.213"
(g@13.0.0.17)135> 04:03:56.420 [error] C1 propagation "2020-08-06T04:03:56.420"  
04:03:56.420 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:03:56.420 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,15}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:14 
04:03:57.780 [error] Sending find_sub batch [] 
04:03:57.780 [error] Sending find_sub_aq batch [] 
04:03:57.780 [error] batched message propagation "2020-08-06T04:03:57.780" 
04:04:01.588 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:04:01.588" Took=55405 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_03_46_759}],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:01.588 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",14,14},{"delta_send",14,15},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",34,0},{"sub_cancel",0,0}] 
04:04:03.421 [error] C1 propagation "2020-08-06T04:04:03.421" 
04:04:03.441 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:04:03.441 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,16}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:15 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_03_46_759}],
             [],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)136> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_03_46_759}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)137> f(AwMapRes).
ok
(g@13.0.0.17)138> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:04.254"
(g@13.0.0.17)139> 04:04:07.665 [error] C2 propagation "2020-08-06T04:04:07.665"  
04:04:07.782 [error] Sending find_sub batch [] 
04:04:07.782 [error] Sending find_sub_aq batch [] 
04:04:07.782 [error] batched message propagation "2020-08-06T04:04:07.782" 
04:04:08.572 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:04:08.571" Took=36184 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_03_52_779}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:08.588 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",15,15},{"delta_send",15,16},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",36,0},{"sub_cancel",0,0}] 
04:04:10.422 [error] C1 propagation "2020-08-06T04:04:10.422" 
04:04:10.423 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:04:10.423 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,17}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:16 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_03_52_779}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)140> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_03_52_779}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)141> f(AwMapRes).
ok
(g@13.0.0.17)142> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:12.295"
(g@13.0.0.17)143> 04:04:15.570 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:04:15.569" Took=35112 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_04_04_823}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:15.570 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",16,16},{"delta_send",16,17},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",38,0},{"sub_cancel",0,0}] 
04:04:17.424 [error] C1 propagation "2020-08-06T04:04:17.424" 
04:04:17.424 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:04:17.424 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,18}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:17 
04:04:17.784 [error] Sending find_sub batch [] 
04:04:17.784 [error] Sending find_sub_aq batch [] 
04:04:17.784 [error] batched message propagation "2020-08-06T04:04:17.784" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_04_04_823}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)144> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_04_04_823}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)145> f(AwMapRes).
ok
(g@13.0.0.17)146> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:20.333"
(g@13.0.0.17)147> 04:04:22.574 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:04:22.574" Took=39021 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_04_10_847}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:22.574 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",17,17},{"delta_send",17,18},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",40,0},{"sub_cancel",0,0}] 
04:04:24.425 [error] C1 propagation "2020-08-06T04:04:24.425" 
04:04:24.425 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:04:24.425 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,19}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:18 
04:04:27.786 [error] Sending find_sub batch [] 
04:04:27.786 [error] Sending find_sub_aq batch [] 
04:04:27.786 [error] batched message propagation "2020-08-06T04:04:27.786" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_04_10_847}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)148> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_04_10_847}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)149> f(AwMapRes).
ok
(g@13.0.0.17)150> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:28.376"
(g@13.0.0.17)151> 04:04:29.574 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:04:29.574" Took=35573 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_04_16_867}],[],[],[],[],[]}}}}] 
04:04:29.574 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",18,18},{"delta_send",18,19},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",42,0},{"sub_cancel",0,0}] 
04:04:31.427 [error] C1 propagation "2020-08-06T04:04:31.427" 
04:04:31.439 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:04:31.464 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,20}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:19 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_04_16_867}],
             [],[],[],...}}}}]}
(g@13.0.0.17)152> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_04_16_867}],
         [],[],[],[],[]}}}}]
(g@13.0.0.17)153> f(AwMapRes).
ok
(g@13.0.0.17)154> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:36.418"
(g@13.0.0.17)155> 04:04:36.568 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:04:36.568" Took=31049 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_04_22_887}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:36.569 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",19,19},{"delta_send",19,20},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",44,0},{"sub_cancel",0,0}] 
04:04:37.599 [error] C3 propagation "2020-08-06T04:04:37.599" 
04:04:37.788 [error] Sending find_sub batch [] 
04:04:37.788 [error] Sending find_sub_aq batch [] 
04:04:37.788 [error] batched message propagation "2020-08-06T04:04:37.788" 
04:04:38.428 [error] C1 propagation "2020-08-06T04:04:38.428" 
04:04:38.485 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:04:38.485 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,21}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:20 
04:04:43.579 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:04:43.579" Took=37547 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_04_28_907}],[],[],[],[],[],[],[],[]}}}}] 
04:04:43.579 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",20,20},{"delta_send",20,21},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",46,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_04_28_907}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)156> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_04_28_907}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)157> f(AwMapRes).
ok
(g@13.0.0.17)158> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:44.461"
(g@13.0.0.17)159> 04:04:45.430 [error] C1 propagation "2020-08-06T04:04:45.430"  
04:04:45.460 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:04:45.460 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,22}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:21 
04:04:47.666 [error] C2 propagation "2020-08-06T04:04:47.666" 
04:04:47.789 [error] Sending find_sub batch [] 
04:04:47.789 [error] Sending find_sub_aq batch [] 
04:04:47.789 [error] batched message propagation "2020-08-06T04:04:47.789" 
04:04:50.573 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:04:50.572" Took=30939 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_04_34_924}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:50.573 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",21,21},{"delta_send",21,22},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",48,0},{"sub_cancel",0,0}] 
04:04:52.432 [error] C1 propagation "2020-08-06T04:04:52.432" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_04_34_924}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)160> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_04_34_924}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)161> f(AwMapRes).
ok
(g@13.0.0.17)162> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:52.500"
(g@13.0.0.17)163> 04:04:52.480 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:04:52.496 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,23}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:22 
04:04:57.580 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:04:57.580" Took=33260 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_04_46_963}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:57.580 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",22,22},{"delta_send",22,23},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",50,0},{"sub_cancel",0,0}] 
04:04:57.790 [error] Sending find_sub batch [] 
04:04:57.790 [error] Sending find_sub_aq batch [] 
04:04:57.790 [error] batched message propagation "2020-08-06T04:04:57.790" 
04:04:59.434 [error] C1 propagation "2020-08-06T04:04:59.434" 
04:04:59.434 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:04:59.434 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,24}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:23 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_04_46_963}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)164> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_04_46_963}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)165> f(AwMapRes).
ok
(g@13.0.0.17)166> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:00.527"
(g@13.0.0.17)167> 04:05:04.591 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:05:04.590" Took=42383 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_04_52_983}],[],[]}}}}] 
04:05:04.591 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",23,23},{"delta_send",23,24},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",52,0},{"sub_cancel",0,0}] 
04:05:06.435 [error] C1 propagation "2020-08-06T04:05:06.435" 
04:05:06.435 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:05:06.435 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,25}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:24 
04:05:07.792 [error] Sending find_sub batch [] 
04:05:07.792 [error] Sending find_sub_aq batch [] 
04:05:07.792 [error] batched message propagation "2020-08-06T04:05:07.792" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)168> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_04_52_983}],
         [],[]}}}}]
(g@13.0.0.17)169> f(AwMapRes).
ok
(g@13.0.0.17)170> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:08.567"
(g@13.0.0.17)171> 04:05:11.568 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:05:11.568" Took=24029 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_04_59_005}],[],[],[],[],[],[]}}}}] 
04:05:11.569 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",24,24},{"delta_send",24,25},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",54,0},{"sub_cancel",0,0}] 
04:05:13.436 [error] C1 propagation "2020-08-06T04:05:13.436" 
04:05:13.444 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:05:13.444 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,26}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:25 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_04_59_005}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)172> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_04_59_005}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)173> f(AwMapRes).
ok
(g@13.0.0.17)174> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:16.605"
(g@13.0.0.17)175> 04:05:17.794 [error] Sending find_sub batch [] 
04:05:17.794 [error] Sending find_sub_aq batch [] 
04:05:17.794 [error] batched message propagation "2020-08-06T04:05:17.794" 
04:05:18.569 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:05:18.569" Took=21876 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_05_027}],[],[]}}}}] 
04:05:18.678 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",25,25},{"delta_send",25,26},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",56,0},{"sub_cancel",0,0}] 
04:05:20.438 [error] C1 propagation "2020-08-06T04:05:20.438" 
04:05:20.459 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:05:20.459 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,27}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:26 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)176> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_05_027}],
         [],[]}}}}]
(g@13.0.0.17)177> f(AwMapRes).
ok
(g@13.0.0.17)178> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:24.643"
(g@13.0.0.17)179> 04:05:25.570 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:05:25.570" Took=22643 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_11_051}],[],[],[],[],[]}}}}] 
04:05:25.571 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",26,26},{"delta_send",26,27},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",58,0},{"sub_cancel",0,0}] 
04:05:27.439 [error] C1 propagation "2020-08-06T04:05:27.439" 
04:05:27.440 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:05:27.440 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,28}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:27 
04:05:27.668 [error] C2 propagation "2020-08-06T04:05:27.668" 
04:05:27.796 [error] Sending find_sub batch [] 
04:05:27.796 [error] Sending find_sub_aq batch [] 
04:05:27.796 [error] batched message propagation "2020-08-06T04:05:27.796" 
04:05:32.588 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:05:32.588" Took=37978 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_17_074}],[],[],[],[]}}}}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
04:05:32.589 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",27,27},{"delta_send",27,28},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",60,0},{"sub_cancel",0,0}] 
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_05_17_074}],
             [],[],...}}}}]}
(g@13.0.0.17)180> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_17_074}],
         [],[],[],[]}}}}]
(g@13.0.0.17)181> f(AwMapRes).
ok
(g@13.0.0.17)182> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:32.768"
(g@13.0.0.17)183> 04:05:34.440 [error] C1 propagation "2020-08-06T04:05:34.440"  
04:05:34.441 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:05:34.441 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,29}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:28 
04:05:37.798 [error] Sending find_sub batch [] 
04:05:37.798 [error] Sending find_sub_aq batch [] 
04:05:37.798 [error] batched message propagation "2020-08-06T04:05:37.798" 
04:05:39.594 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:05:39.594" Took=42618 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_29_118}]}}}}] 
04:05:39.594 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",28,28},{"delta_send",28,29},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",62,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)184> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)185> f(AwMapRes).
ok
(g@13.0.0.17)186> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:40.722"
(g@13.0.0.17)187> 04:05:41.442 [error] C1 propagation "2020-08-06T04:05:41.442"  
04:05:41.442 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:05:41.442 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,30}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:29 
04:05:46.577 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:05:46.576" Took=22961 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_05_35_139}],[],[],[],[],[],[],[],[],[]}}}}] 
04:05:46.577 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",29,29},{"delta_send",29,30},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",64,0},{"sub_cancel",0,0}] 
04:05:47.601 [error] C3 propagation "2020-08-06T04:05:47.601" 
04:05:47.800 [error] Sending find_sub batch [] 
04:05:47.800 [error] Sending find_sub_aq batch [] 
04:05:47.800 [error] batched message propagation "2020-08-06T04:05:47.800" 
04:05:48.443 [error] C1 propagation "2020-08-06T04:05:48.443" 
04:05:48.443 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:05:48.443 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,31}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:30 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_05_35_139}],
             [],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)188> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_05_35_139}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)189> f(AwMapRes).
ok
(g@13.0.0.17)190> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:48.771"
(g@13.0.0.17)191> 04:05:53.585 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:05:53.585" Took=28637 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_05_41_158}],[],[],[],[],[],[],[]}}}}] 
04:05:53.585 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",30,30},{"delta_send",30,31},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",66,0},{"sub_cancel",0,0}] 
04:05:55.444 [error] C1 propagation "2020-08-06T04:05:55.444" 
04:05:55.460 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:05:55.460 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,32}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:31 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_05_41_158}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)192> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_41_158}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)193> f(AwMapRes).
ok
(g@13.0.0.17)194> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:56.805"
(g@13.0.0.17)195> 04:05:57.802 [error] Sending find_sub batch [] 
04:05:57.802 [error] Sending find_sub_aq batch [] 
04:05:57.802 [error] batched message propagation "2020-08-06T04:05:57.802" 
04:06:00.591 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:06:00.591" Took=34580 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_05_47_179}],[],[],[],[],[],[],[],[],[]}}}}] 
04:06:00.592 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",31,31},{"delta_send",31,32},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",68,0},{"sub_cancel",0,0}] 
04:06:02.446 [error] C1 propagation "2020-08-06T04:06:02.446" 
04:06:02.485 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:06:02.485 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,33}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:32 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_05_47_179}],
             [],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)196> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_05_47_179}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)197> f(AwMapRes).
ok
(g@13.0.0.17)198> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:04.850"
(g@13.0.0.17)199> 04:06:07.664 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:06:07.664" Took=40362 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_53_199}],[],[],[],[],[],[]}}}}] 
04:06:07.664 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",32,32},{"delta_send",32,33},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",70,0},{"sub_cancel",0,0}] 
04:06:07.766 [error] C2 propagation "2020-08-06T04:06:07.766" 
04:06:07.873 [error] Sending find_sub batch [] 
04:06:07.873 [error] Sending find_sub_aq batch [] 
04:06:07.873 [error] batched message propagation "2020-08-06T04:06:07.873" 
04:06:09.447 [error] C1 propagation "2020-08-06T04:06:09.447" 
04:06:09.448 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:06:09.448 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,34}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:33 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_05_53_199}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)200> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_53_199}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)201> f(AwMapRes).
ok
(g@13.0.0.17)202> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:12.885"
(g@13.0.0.17)203> 04:06:14.590 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:06:14.589" Took=29781 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_05_59_218}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:06:14.590 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",33,33},{"delta_send",33,34},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",72,0},{"sub_cancel",0,0}] 
04:06:16.448 [error] C1 propagation "2020-08-06T04:06:16.448" 
04:06:16.448 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:06:16.448 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,35}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:34 
04:06:17.874 [error] Sending find_sub batch [] 
04:06:17.874 [error] Sending find_sub_aq batch [] 
04:06:17.874 [error] batched message propagation "2020-08-06T04:06:17.874" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_05_59_218}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)204> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_05_59_218}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)205> f(AwMapRes).
ok
(g@13.0.0.17)206> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:20.919"
(g@13.0.0.17)207> 04:06:21.590 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:06:21.590" Took=31098 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_06_05_239}],[],[],[],[],[],[],[],[],[]}}}}] 
04:06:21.590 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",34,34},{"delta_send",34,35},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",74,0},{"sub_cancel",0,0}] 
04:06:23.449 [error] C1 propagation "2020-08-06T04:06:23.449" 
04:06:23.449 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:06:23.449 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,36}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:35 
04:06:27.876 [error] Sending find_sub batch [] 
04:06:27.876 [error] Sending find_sub_aq batch [] 
04:06:27.876 [error] batched message propagation "2020-08-06T04:06:27.876" 
04:06:28.593 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:06:28.593" Took=29387 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_06_17_283}]}}}}] 
04:06:28.596 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",35,35},{"delta_send",35,36},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",76,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)208> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)209> f(AwMapRes).
ok
(g@13.0.0.17)210> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:28.951"
(g@13.0.0.17)211> 04:06:30.450 [error] C1 propagation "2020-08-06T04:06:30.450"  
04:06:30.454 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:06:30.454 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,37}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:36 
04:06:35.598 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:06:35.597" Took=33790 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_06_23_306}],[],[],[],[],[],[],[],[]}}}}] 
04:06:35.598 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",36,36},{"delta_send",36,37},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",78,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_06_23_306}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)212> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_06_23_306}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)213> f(AwMapRes).
ok
(g@13.0.0.17)214> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:36.991"
(g@13.0.0.17)215> 04:06:37.451 [error] C1 propagation "2020-08-06T04:06:37.451"  
04:06:37.493 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:06:37.493 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,38}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:37 
04:06:37.878 [error] Sending find_sub batch [] 
04:06:37.878 [error] Sending find_sub_aq batch [] 
04:06:37.878 [error] batched message propagation "2020-08-06T04:06:37.878" 
04:06:42.601 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:06:42.600" Took=35074 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_06_29_327}],[],[],[],[]}}}}] 
04:06:42.602 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",37,37},{"delta_send",37,38},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",80,0},{"sub_cancel",0,0}] 
04:06:44.453 [error] C1 propagation "2020-08-06T04:06:44.453" 
04:06:44.475 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:06:44.475 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,39}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:38 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_06_29_327}],
             [],[],...}}}}]}
(g@13.0.0.17)216> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_06_29_327}],
         [],[],[],[]}}}}]
(g@13.0.0.17)217> f(AwMapRes).
ok
(g@13.0.0.17)218> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:45.337"
(g@13.0.0.17)219> 04:06:47.767 [error] C2 propagation "2020-08-06T04:06:47.767"  
04:06:47.879 [error] Sending find_sub batch [] 
04:06:47.879 [error] Sending find_sub_aq batch [] 
04:06:47.879 [error] batched message propagation "2020-08-06T04:06:47.879" 
04:06:49.602 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:06:49.602" Took=37321 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_06_35_351}],[],[],[],[],[],[],[]}}}}] 
04:06:49.602 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",38,38},{"delta_send",38,39},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",82,0},{"sub_cancel",0,0}] 
04:06:51.454 [error] C1 propagation "2020-08-06T04:06:51.454" 
04:06:51.454 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:06:51.455 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,40}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:39 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_06_35_351}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)220> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_06_35_351}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)221> f(AwMapRes).
ok
(g@13.0.0.17)222> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:53.769"
(g@13.0.0.17)223> 04:06:56.600 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:06:56.600" Took=32104 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_06_41_371}],[]}}}}] 
04:06:56.601 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",39,39},{"delta_send",39,40},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",84,0},{"sub_cancel",0,0}] 
04:06:57.603 [error] C3 propagation "2020-08-06T04:06:57.603" 
04:06:57.881 [error] Sending find_sub batch [] 
04:06:57.881 [error] Sending find_sub_aq batch [] 
04:06:57.881 [error] batched message propagation "2020-08-06T04:06:57.881" 
04:06:58.455 [error] C1 propagation "2020-08-06T04:06:58.455" 
04:06:58.455 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:06:58.455 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,41}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:40 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)224> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)225> f(AwMapRes).
ok
(g@13.0.0.17)226> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:01.119"
(g@13.0.0.17)227> 04:07:03.610 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:07:03.610" Took=40388 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_06_47_391}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:07:03.611 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",40,40},{"delta_send",40,41},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",86,0},{"sub_cancel",0,0}] 
04:07:05.456 [error] C1 propagation "2020-08-06T04:07:05.456" 
04:07:05.456 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:07:05.456 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,42}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:41 
04:07:07.883 [error] Sending find_sub batch [] 
04:07:07.883 [error] Sending find_sub_aq batch [] 
04:07:07.883 [error] batched message propagation "2020-08-06T04:07:07.883" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_06_47_391}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)228> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_06_47_391}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)229> f(AwMapRes).
ok
(g@13.0.0.17)230> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:09.157"
(g@13.0.0.17)231> 04:07:10.600 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:07:10.600" Took=22414 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_06_59_430}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:07:10.600 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",41,41},{"delta_send",41,42},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",88,0},{"sub_cancel",0,0}] 
04:07:12.457 [error] C1 propagation "2020-08-06T04:07:12.457" 
04:07:12.457 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:07:12.457 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,43}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:42 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_06_59_430}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)232> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_06_59_430}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)233> f(AwMapRes).
ok
(g@13.0.0.17)234> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:17.193"
(g@13.0.0.17)235> 04:07:17.885 [error] Sending find_sub batch [] 
04:07:17.885 [error] Sending find_sub_aq batch [] 
04:07:17.885 [error] batched message propagation "2020-08-06T04:07:17.885" 
04:07:19.458 [error] C1 propagation "2020-08-06T04:07:19.458" 
04:07:24.606 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:07:24.606" Took=34084 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_07_11_033}],[],[],[],[],[],[],[]}}}}] 
04:07:24.606 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",42,42},{"delta_send",42,43},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",90,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_07_11_033}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)236> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_07_11_033}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)237> f(AwMapRes).
ok
(g@13.0.0.17)238> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:25.229"
(g@13.0.0.17)239> 04:07:26.459 [error] C1 propagation "2020-08-06T04:07:26.459"  
04:07:26.462 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:07:26.462 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,44}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:43 
04:07:27.769 [error] C2 propagation "2020-08-06T04:07:27.769" 
04:07:27.887 [error] Sending find_sub batch [] 
04:07:27.887 [error] Sending find_sub_aq batch [] 
04:07:27.887 [error] batched message propagation "2020-08-06T04:07:27.887" 
04:07:31.602 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:07:31.602" Took=29006 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_07_17_053}],[],[],[],[],[],[],[],[],[]}}}}] 
04:07:31.602 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",43,43},{"delta_send",43,44},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",92,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_07_17_053}],
             [],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)240> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_07_17_053}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)241> f(AwMapRes).
ok
(g@13.0.0.17)242> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:33.267"
(g@13.0.0.17)243> 04:07:33.460 [error] C1 propagation "2020-08-06T04:07:33.460"  
04:07:33.473 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:07:33.473 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,45}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:44 
04:07:37.889 [error] Sending find_sub batch [] 
04:07:37.889 [error] Sending find_sub_aq batch [] 
04:07:37.890 [error] batched message propagation "2020-08-06T04:07:37.889" 
04:07:38.620 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:07:38.619" Took=32941 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_07_23_077}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:07:38.620 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",44,44},{"delta_send",44,45},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",94,0},{"sub_cancel",0,0}] 
04:07:40.461 [error] C1 propagation "2020-08-06T04:07:40.461" 
04:07:40.484 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:07:40.484 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,46}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:45 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_07_23_077}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)244> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_07_23_077}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)245> f(AwMapRes).
ok
(g@13.0.0.17)246> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:41.302"
(g@13.0.0.17)247> 04:07:45.602 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:07:45.602" Took=25134 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_07_35_119}],[],[],[],[],[],[],[],[]}}}}] 
04:07:45.604 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",45,45},{"delta_send",45,46},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",96,0},{"sub_cancel",0,0}] 
04:07:47.462 [error] C1 propagation "2020-08-06T04:07:47.462" 
04:07:47.478 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:07:47.478 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,47}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:46 
04:07:47.891 [error] Sending find_sub batch [] 
04:07:47.891 [error] Sending find_sub_aq batch [] 
04:07:47.891 [error] batched message propagation "2020-08-06T04:07:47.891" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_07_35_119}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)248> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_07_35_119}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)249> f(AwMapRes).
ok
(g@13.0.0.17)250> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:49.337"
(g@13.0.0.17)251> 04:07:52.608 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:07:52.608" Took=30101 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_07_41_143}],[],[]}}}}] 
04:07:52.609 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",46,46},{"delta_send",46,47},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",98,0},{"sub_cancel",0,0}] 
04:07:54.464 [error] C1 propagation "2020-08-06T04:07:54.464" 
04:07:54.484 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:07:54.485 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,48}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:47 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)252> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_07_41_143}],
         [],[]}}}}]
(g@13.0.0.17)253> f(AwMapRes).
ok
(g@13.0.0.17)254> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:57.371"
(g@13.0.0.17)255> 04:07:57.893 [error] Sending find_sub batch [] 
04:07:57.893 [error] Sending find_sub_aq batch [] 
04:07:57.893 [error] batched message propagation "2020-08-06T04:07:57.893" 
04:07:59.614 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:07:59.614" Took=22745 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_07_47_163}],[],[],[],[],[],[],[]}}}}] 
04:07:59.615 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",47,47},{"delta_send",47,48},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",100,0},{"sub_cancel",0,0}] 
04:08:01.465 [error] C1 propagation "2020-08-06T04:08:01.465" 
04:08:01.490 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:08:01.490 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,49}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:48 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_07_47_163}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)256> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_07_47_163}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)257> f(AwMapRes).
ok
(g@13.0.0.17)258> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:05.415"
(g@13.0.0.17)259> 04:08:06.613 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:08:06.613" Took=34720 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_07_53_183}],[],[],[],[]}}}}] 
04:08:06.614 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",48,48},{"delta_send",48,49},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",102,0},{"sub_cancel",0,0}] 
04:08:07.605 [error] C3 propagation "2020-08-06T04:08:07.605" 
04:08:07.771 [error] C2 propagation "2020-08-06T04:08:07.771" 
04:08:07.895 [error] Sending find_sub batch [] 
04:08:07.895 [error] Sending find_sub_aq batch [] 
04:08:07.895 [error] batched message propagation "2020-08-06T04:08:07.895" 
04:08:08.466 [error] C1 propagation "2020-08-06T04:08:08.466" 
04:08:08.497 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:08:08.497 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,50}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:49 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_07_53_183}],
             [],[],...}}}}]}
(g@13.0.0.17)260> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_07_53_183}],
         [],[],[],[]}}}}]
(g@13.0.0.17)261> f(AwMapRes).
ok
(g@13.0.0.17)262> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:13.450"
(g@13.0.0.17)263> 04:08:13.615 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:08:13.615" Took=28293 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_07_59_203}],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:13.617 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",49,49},{"delta_send",49,50},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",104,0},{"sub_cancel",0,0}] 
04:08:15.467 [error] C1 propagation "2020-08-06T04:08:15.467" 
04:08:15.490 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:08:15.490 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,51}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:50 
04:08:17.896 [error] Sending find_sub batch [] 
04:08:17.896 [error] Sending find_sub_aq batch [] 
04:08:17.896 [error] batched message propagation "2020-08-06T04:08:17.896" 
04:08:20.612 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:08:20.612" Took=33163 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_08_05_226}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:20.612 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",50,50},{"delta_send",50,51},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",106,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_08_05_226}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)264> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_08_05_226}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)265> f(AwMapRes).
ok
(g@13.0.0.17)266> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:21.486"
(g@13.0.0.17)267> 04:08:22.468 [error] C1 propagation "2020-08-06T04:08:22.468"  
04:08:22.468 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:08:22.468 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,52}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:51 
04:08:27.619 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:08:27.619" Took=33731 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_08_11_250}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:27.619 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",51,51},{"delta_send",51,52},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",108,0},{"sub_cancel",0,0}] 
04:08:27.897 [error] Sending find_sub batch [] 
04:08:27.897 [error] Sending find_sub_aq batch [] 
04:08:27.897 [error] batched message propagation "2020-08-06T04:08:27.897" 
04:08:29.469 [error] C1 propagation "2020-08-06T04:08:29.469" 
04:08:29.469 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:08:29.470 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,53}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:52 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_08_11_250}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)268> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_08_11_250}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)269> f(AwMapRes).
ok
(g@13.0.0.17)270> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:29.611"
(g@13.0.0.17)271> 04:08:34.661 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:08:34.661" Took=32823 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_23_293}],[],[],[]}}}}] 
04:08:34.661 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",52,52},{"delta_send",52,53},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",110,0},{"sub_cancel",0,0}] 
04:08:36.471 [error] C1 propagation "2020-08-06T04:08:36.471" 
04:08:36.483 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:08:36.484 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,54}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:53 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(g@13.0.0.17)272> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_08_23_293}],
         [],[],[]}}}}]
(g@13.0.0.17)273> f(AwMapRes).
ok
(g@13.0.0.17)274> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:37.650"
(g@13.0.0.17)275> 04:08:37.899 [error] Sending find_sub batch [] 
04:08:37.899 [error] Sending find_sub_aq batch [] 
04:08:37.899 [error] batched message propagation "2020-08-06T04:08:37.899" 
04:08:41.608 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:08:41.608" Took=22373 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_08_29_315}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:41.608 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",53,53},{"delta_send",53,54},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",112,0},{"sub_cancel",0,0}] 
04:08:43.473 [error] C1 propagation "2020-08-06T04:08:43.473" 
04:08:43.507 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:08:43.531 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,55}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:54 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_08_29_315}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)276> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_08_29_315}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)277> f(AwMapRes).
ok
(g@13.0.0.17)278> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:45.686"
(g@13.0.0.17)279> 04:08:47.772 [error] C2 propagation "2020-08-06T04:08:47.772"  
04:08:47.901 [error] Sending find_sub batch [] 
04:08:47.901 [error] Sending find_sub_aq batch [] 
04:08:47.901 [error] batched message propagation "2020-08-06T04:08:47.901" 
04:08:48.623 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:08:48.623" Took=33358 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_35_340}],[],[],[]}}}}] 
04:08:48.674 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",54,54},{"delta_send",54,55},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",114,0},{"sub_cancel",0,0}] 
04:08:50.475 [error] C1 propagation "2020-08-06T04:08:50.475" 
04:08:50.491 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:08:50.492 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,56}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:55 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(g@13.0.0.17)280> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_08_35_340}],
         [],[],[]}}}}]
(g@13.0.0.17)281> f(AwMapRes).
ok
(g@13.0.0.17)282> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:53.731"
(g@13.0.0.17)283> 04:08:55.612 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:08:55.612" Took=25116 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_08_41_359}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:55.613 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",55,55},{"delta_send",55,56},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",116,0},{"sub_cancel",0,0}] 
04:08:57.477 [error] C1 propagation "2020-08-06T04:08:57.477" 
04:08:57.506 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:08:57.506 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,57}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:56 
04:08:57.903 [error] Sending find_sub batch [] 
04:08:57.903 [error] Sending find_sub_aq batch [] 
04:08:57.903 [error] batched message propagation "2020-08-06T04:08:57.903" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_08_41_359}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)284> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_08_41_359}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)285> f(AwMapRes).
ok
(g@13.0.0.17)286> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:01.767"
(g@13.0.0.17)287> 04:09:02.629 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:09:02.629" Took=37775 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_47_378}],[],[]}}}}] 
04:09:02.629 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",56,56},{"delta_send",56,57},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",118,0},{"sub_cancel",0,0}] 
04:09:04.479 [error] C1 propagation "2020-08-06T04:09:04.479" 
04:09:04.504 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:09:04.505 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,58}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:57 
04:09:07.904 [error] Sending find_sub batch [] 
04:09:07.904 [error] Sending find_sub_aq batch [] 
04:09:07.904 [error] batched message propagation "2020-08-06T04:09:07.904" 
04:09:09.656 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:09:09.655" Took=29853 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_53_399}]}}}}] 
04:09:09.657 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",57,57},{"delta_send",57,58},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",120,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)288> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)289> f(AwMapRes).
ok
(g@13.0.0.17)290> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:09.805"
(g@13.0.0.17)291> 04:09:11.481 [error] C1 propagation "2020-08-06T04:09:11.481"  
04:09:11.495 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:09:11.495 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,59}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:58 
04:09:16.655 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:09:16.655" Took=34741 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_09_05_439}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:16.655 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",58,58},{"delta_send",58,59},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",122,0},{"sub_cancel",0,0}] 
04:09:17.607 [error] C3 propagation "2020-08-06T04:09:17.607" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_09_05_439}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)292> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_09_05_439}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)293> f(AwMapRes).
ok
(g@13.0.0.17)294> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:17.839"
(g@13.0.0.17)295> 04:09:17.905 [error] Sending find_sub batch [] 
04:09:17.905 [error] Sending find_sub_aq batch [] 
04:09:17.905 [error] batched message propagation "2020-08-06T04:09:17.905" 
04:09:18.483 [error] C1 propagation "2020-08-06T04:09:18.483" 
04:09:18.542 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:09:18.542 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,60}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:59 
04:09:25.484 [error] C1 propagation "2020-08-06T04:09:25.484" 
04:09:25.562 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:09:25.561" Took=30891 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_09_11_460}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:25.582 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",59,59},{"delta_send",59,60},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",124,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_09_11_460}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)296> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_09_11_460}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)297> f(AwMapRes).
ok
(g@13.0.0.17)298> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:25.876"
(g@13.0.0.17)299> 04:09:27.774 [error] C2 propagation "2020-08-06T04:09:27.774"  
04:09:27.923 [error] Sending find_sub batch [] 
04:09:27.923 [error] Sending find_sub_aq batch [] 
04:09:27.923 [error] batched message propagation "2020-08-06T04:09:27.923" 
04:09:30.626 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:09:30.626" Took=29546 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_09_17_481}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:30.626 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",60,59},{"delta_send",59,61},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",125,0},{"sub_cancel",0,0}] 
04:09:32.486 [error] C1 propagation "2020-08-06T04:09:32.486" 
04:09:32.510 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:09:32.511 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,62}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:61 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_09_17_481}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)300> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_09_17_481}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)301> f(AwMapRes).
ok
(g@13.0.0.17)302> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:33.920"
(g@13.0.0.17)303> 04:09:37.627 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:09:37.627" Took=27101 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_09_23_503}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:37.627 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",61,60},{"delta_send",60,62},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",127,0},{"sub_cancel",0,0}] 
04:09:37.925 [error] Sending find_sub batch [] 
04:09:37.925 [error] Sending find_sub_aq batch [] 
04:09:37.925 [error] batched message propagation "2020-08-06T04:09:37.925" 
04:09:39.487 [error] C1 propagation "2020-08-06T04:09:39.487" 
04:09:39.509 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:09:39.509 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,63}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:62 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_09_23_503}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)304> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_09_23_503}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)305> f(AwMapRes).
ok
(g@13.0.0.17)306> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:41.961"
(g@13.0.0.17)307> 04:09:44.636 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:09:44.636" Took=35497 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_09_29_523}],[],[],[],[],[],[],[],[]}}}}] 
04:09:44.637 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",62,61},{"delta_send",61,63},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",129,0},{"sub_cancel",0,0}] 
04:09:46.489 [error] C1 propagation "2020-08-06T04:09:46.489" 
04:09:46.498 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:09:46.498 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,64}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:63 
04:09:47.927 [error] Sending find_sub batch [] 
04:09:47.927 [error] Sending find_sub_aq batch [] 
04:09:47.927 [error] batched message propagation "2020-08-06T04:09:47.927" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_09_29_523}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)308> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_09_29_523}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)309> f(AwMapRes).
ok
(g@13.0.0.17)310> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:49.999"
(g@13.0.0.17)311> 04:09:51.627 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:09:51.627" Took=28682 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_09_35_543}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:51.628 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",63,62},{"delta_send",62,64},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",131,0},{"sub_cancel",0,0}] 
04:09:53.490 [error] C1 propagation "2020-08-06T04:09:53.490" 
04:09:53.507 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:09:53.507 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,65}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:64 
04:09:57.929 [error] Sending find_sub batch [] 
04:09:57.929 [error] Sending find_sub_aq batch [] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
04:09:57.929 [error] batched message propagation "2020-08-06T04:09:57.929" 
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_09_35_543}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)312> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_09_35_543}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)313> f(AwMapRes).
ok
(g@13.0.0.17)314> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:58.117"
(g@13.0.0.17)315> 04:09:58.640 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:09:58.640" Took=28903 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_09_47_592}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:58.722 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",64,63},{"delta_send",63,65},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",133,0},{"sub_cancel",0,0}] 
04:10:00.491 [error] C1 propagation "2020-08-06T04:10:00.491" 
04:10:00.516 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:10:00.517 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,66}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:65 
04:10:05.643 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:10:05.643" Took=41457 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_09_53_611}],[],[],[],[],[],[]}}}}] 
04:10:05.644 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",65,64},{"delta_send",64,66},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",135,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_09_53_611}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)316> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_09_53_611}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)317> f(AwMapRes).
ok
(g@13.0.0.17)318> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:06.759"
(g@13.0.0.17)319> 04:10:07.492 [error] C1 propagation "2020-08-06T04:10:07.492"  
04:10:07.495 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:10:07.495 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,67}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:66 
04:10:07.775 [error] C2 propagation "2020-08-06T04:10:07.775" 
04:10:07.930 [error] Sending find_sub batch [] 
04:10:07.930 [error] Sending find_sub_aq batch [] 
04:10:07.930 [error] batched message propagation "2020-08-06T04:10:07.930" 
04:10:12.638 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:10:12.638" Took=34656 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_09_59_631}],[],[],[],[],[],[],[],[]}}}}] 
04:10:12.639 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",66,65},{"delta_send",65,67},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",137,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_09_59_631}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)320> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_09_59_631}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)321> f(AwMapRes).
ok
(g@13.0.0.17)322> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:14.115"
(g@13.0.0.17)323> 04:10:14.493 [error] C1 propagation "2020-08-06T04:10:14.493"  
04:10:14.524 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:10:14.524 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,68}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:67 
04:10:17.932 [error] Sending find_sub batch [] 
04:10:17.932 [error] Sending find_sub_aq batch [] 
04:10:17.932 [error] batched message propagation "2020-08-06T04:10:17.932" 
04:10:19.674 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:10:19.674" Took=55583 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_05_655}]}}}}] 
04:10:19.675 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",67,66},{"delta_send",66,68},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",139,0},{"sub_cancel",0,0}] 
04:10:21.495 [error] C1 propagation "2020-08-06T04:10:21.495" 
04:10:21.516 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:10:21.516 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,69}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:68 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)324> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)325> f(AwMapRes).
ok
(g@13.0.0.17)326> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:22.162"
(g@13.0.0.17)327> 04:10:26.630 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:10:26.629" Took=23404 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_11_677}],[]}}}}] 
04:10:26.630 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",68,67},{"delta_send",67,69},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",141,0},{"sub_cancel",0,0}] 
04:10:27.608 [error] C3 propagation "2020-08-06T04:10:27.608" 
04:10:27.934 [error] Sending find_sub batch [] 
04:10:27.934 [error] Sending find_sub_aq batch [] 
04:10:27.934 [error] batched message propagation "2020-08-06T04:10:27.934" 
04:10:28.497 [error] C1 propagation "2020-08-06T04:10:28.497" 
04:10:28.497 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:10:28.497 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,70}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:69 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)328> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)329> f(AwMapRes).
ok
(g@13.0.0.17)330> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:30.196"
(g@13.0.0.17)331> 04:10:33.630 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:10:33.630" Took=21951 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_10_17_699}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:10:33.630 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",69,68},{"delta_send",68,70},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",143,0},{"sub_cancel",0,0}] 
04:10:35.498 [error] C1 propagation "2020-08-06T04:10:35.498" 
04:10:35.524 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:10:35.548 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,71}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:70 
04:10:37.936 [error] Sending find_sub batch [] 
04:10:37.936 [error] Sending find_sub_aq batch [] 
04:10:37.936 [error] batched message propagation "2020-08-06T04:10:37.936" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_10_17_699}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)332> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_10_17_699}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)333> f(AwMapRes).
ok
(g@13.0.0.17)334> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:38.237"
(g@13.0.0.17)335> 04:10:40.658 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:10:40.657" Took=42532 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_10_29_743}],[],[],[],[],[],[],[],[]}}}}] 
04:10:40.658 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",70,69},{"delta_send",69,71},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",145,0},{"sub_cancel",0,0}] 
04:10:42.499 [error] C1 propagation "2020-08-06T04:10:42.499" 
04:10:42.509 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:10:42.509 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,72}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:71 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_10_29_743}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)336> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_10_29_743}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)337> f(AwMapRes).
ok
(g@13.0.0.17)338> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:46.296"
(g@13.0.0.17)339> 04:10:47.651 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:10:47.651" Took=40101 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_35_767}],[],[],[],[],[]}}}}] 
04:10:47.651 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",71,70},{"delta_send",70,72},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",147,0},{"sub_cancel",0,0}] 
04:10:47.776 [error] C2 propagation "2020-08-06T04:10:47.776" 
04:10:47.938 [error] Sending find_sub batch [] 
04:10:47.938 [error] Sending find_sub_aq batch [] 
04:10:47.938 [error] batched message propagation "2020-08-06T04:10:47.938" 
04:10:49.501 [error] C1 propagation "2020-08-06T04:10:49.501" 
04:10:49.532 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:10:49.532 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,73}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:72 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_10_35_767}],
             [],[],[],...}}}}]}
(g@13.0.0.17)340> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_10_35_767}],
         [],[],[],[],[]}}}}]
(g@13.0.0.17)341> f(AwMapRes).
ok
(g@13.0.0.17)342> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:54.342"
(g@13.0.0.17)343> 04:10:54.637 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:10:54.636" Took=25079 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_41_788}],[],[],[],[],[]}}}}] 
04:10:54.638 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",72,71},{"delta_send",71,73},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",149,0},{"sub_cancel",0,0}] 
04:10:56.503 [error] C1 propagation "2020-08-06T04:10:56.503" 
04:10:56.508 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:10:56.509 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,74}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:73 
04:10:57.940 [error] Sending find_sub batch [] 
04:10:57.940 [error] Sending find_sub_aq batch [] 
04:10:57.940 [error] batched message propagation "2020-08-06T04:10:57.940" 
04:11:01.637 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:11:01.636" Took=23401 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_10_47_811}],[],[],[],[],[],[],[],[]}}}}] 
04:11:01.637 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",73,72},{"delta_send",72,74},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",151,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_10_47_811}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)344> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_10_47_811}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)345> f(AwMapRes).
ok
(g@13.0.0.17)346> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:02.378"
(g@13.0.0.17)347> 04:11:03.504 [error] C1 propagation "2020-08-06T04:11:03.504"  
04:11:03.509 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:11:03.509 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,75}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:74 
04:11:07.942 [error] Sending find_sub batch [] 
04:11:07.942 [error] Sending find_sub_aq batch [] 
04:11:07.942 [error] batched message propagation "2020-08-06T04:11:07.942" 
04:11:08.671 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:11:08.671" Took=29092 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_10_53_831}],[],[],[],[],[],[],[]}}}}] 
04:11:08.708 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",74,73},{"delta_send",73,75},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",153,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_10_53_831}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)348> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_10_53_831}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)349> f(AwMapRes).
ok
(g@13.0.0.17)350> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:10.416"
(g@13.0.0.17)351> 04:11:10.505 [error] C1 propagation "2020-08-06T04:11:10.505"  
04:11:10.505 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:11:10.505 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,76}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:75 
04:11:15.652 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:11:15.652" Took=35955 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_59_855}],[]}}}}] 
04:11:15.652 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",75,74},{"delta_send",74,76},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",155,0},{"sub_cancel",0,0}] 
04:11:17.506 [error] C1 propagation "2020-08-06T04:11:17.506" 
04:11:17.515 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:11:17.515 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,77}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:76 
04:11:17.944 [error] Sending find_sub batch [] 
04:11:17.944 [error] Sending find_sub_aq batch [] 
04:11:17.944 [error] batched message propagation "2020-08-06T04:11:17.944" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)352> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)353> f(AwMapRes).
ok
(g@13.0.0.17)354> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:18.458"
(g@13.0.0.17)355> 04:11:22.652 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:11:22.652" Took=32972 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_11_11_899}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:11:22.652 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",76,75},{"delta_send",75,77},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",157,0},{"sub_cancel",0,0}] 
04:11:24.507 [error] C1 propagation "2020-08-06T04:11:24.507" 
04:11:24.544 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:11:24.544 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,78}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:77 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_11_11_899}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)356> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_11_11_899}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)357> f(AwMapRes).
ok
(g@13.0.0.17)358> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:26.493"
(g@13.0.0.17)359> 04:11:27.777 [error] C2 propagation "2020-08-06T04:11:27.777"  
04:11:27.946 [error] Sending find_sub batch [] 
04:11:27.946 [error] Sending find_sub_aq batch [] 
04:11:27.946 [error] batched message propagation "2020-08-06T04:11:27.946" 
04:11:29.658 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:11:29.658" Took=33746 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_11_17_919}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:11:29.658 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",77,76},{"delta_send",76,78},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",159,0},{"sub_cancel",0,0}] 
04:11:31.509 [error] C1 propagation "2020-08-06T04:11:31.509" 
04:11:31.535 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:11:31.535 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,79}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:78 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_11_17_919}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)360> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_11_17_919}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)361> f(AwMapRes).
ok
(g@13.0.0.17)362> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:34.530"
(g@13.0.0.17)363> 04:11:36.656 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:11:36.656" Took=32163 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_11_23_943}]}}}}] 
04:11:36.657 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",78,77},{"delta_send",77,79},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",161,0},{"sub_cancel",0,0}] 
04:11:37.609 [error] C3 propagation "2020-08-06T04:11:37.609" 
04:11:37.948 [error] Sending find_sub batch [] 
04:11:37.948 [error] Sending find_sub_aq batch [] 
04:11:37.948 [error] batched message propagation "2020-08-06T04:11:37.948" 
04:11:38.510 [error] C1 propagation "2020-08-06T04:11:38.510" 
04:11:38.520 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:11:38.520 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,80}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:79 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)364> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)365> f(AwMapRes).
ok
(g@13.0.0.17)366> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:42.572"
(g@13.0.0.17)367> 04:11:43.697 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:11:43.697" Took=33116 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_11_29_965}],[],[],[]}}}}] 
04:11:43.704 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",79,78},{"delta_send",78,80},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",163,0},{"sub_cancel",0,0}] 
04:11:45.512 [error] C1 propagation "2020-08-06T04:11:45.512" 
04:11:45.519 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:11:45.519 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,81}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:80 
04:11:47.950 [error] Sending find_sub batch [] 
04:11:47.950 [error] Sending find_sub_aq batch [] 
04:11:47.950 [error] batched message propagation "2020-08-06T04:11:47.950" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(g@13.0.0.17)368> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_11_29_965}],
         [],[],[]}}}}]
(g@13.0.0.17)369> f(AwMapRes).
ok
(g@13.0.0.17)370> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:50.611"
(g@13.0.0.17)371> 04:11:50.667 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:11:50.667" Took=37638 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_11_35_986}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:11:50.668 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",80,79},{"delta_send",79,81},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",165,0},{"sub_cancel",0,0}] 
04:11:52.513 [error] C1 propagation "2020-08-06T04:11:52.513" 
04:11:52.548 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:11:52.549 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,82}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:81 
04:11:57.650 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:11:57.650" Took=21364 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_11_42_007}],[],[],[],[],[],[]}}}}] 
04:11:57.650 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",81,80},{"delta_send",80,82},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",167,0},{"sub_cancel",0,0}] 
04:11:57.952 [error] Sending find_sub batch [] 
04:11:57.952 [error] Sending find_sub_aq batch [] 
04:11:57.952 [error] batched message propagation "2020-08-06T04:11:57.952" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_11_42_007}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)372> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_11_42_007}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)373> f(AwMapRes).
ok
(g@13.0.0.17)374> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:58.651"
(g@13.0.0.17)375> 04:11:59.515 [error] C1 propagation "2020-08-06T04:11:59.515"  
04:11:59.527 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:11:59.527 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,83}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:82 
04:12:04.664 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:12:04.664" Took=32592 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_11_54_070}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:04.665 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",82,81},{"delta_send",81,83},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",169,0},{"sub_cancel",0,0}] 
04:12:06.516 [error] C1 propagation "2020-08-06T04:12:06.516" 
04:12:06.540 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:12:06.540 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,84}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:83 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_11_54_070}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)376> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_11_54_070}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)377> f(AwMapRes).
ok
(g@13.0.0.17)378> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:06.686"
(g@13.0.0.17)379> 04:12:07.779 [error] C2 propagation "2020-08-06T04:12:07.779"  
04:12:07.953 [error] Sending find_sub batch [] 
04:12:07.953 [error] Sending find_sub_aq batch [] 
04:12:07.953 [error] batched message propagation "2020-08-06T04:12:07.953" 
04:12:11.663 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:12:11.663" Took=34113 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_12_00_092}],[],[],[],[],[],[],[]}}}}] 
04:12:11.663 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",83,82},{"delta_send",82,84},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",171,0},{"sub_cancel",0,0}] 
04:12:13.517 [error] C1 propagation "2020-08-06T04:12:13.517" 
04:12:13.557 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:12:13.557 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,85}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:84 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_12_00_092}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)380> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_12_00_092}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)381> f(AwMapRes).
ok
(g@13.0.0.17)382> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:14.750"
(g@13.0.0.17)383> 04:12:17.955 [error] Sending find_sub batch [] 
04:12:17.955 [error] Sending find_sub_aq batch [] 
04:12:17.956 [error] batched message propagation "2020-08-06T04:12:17.956" 
04:12:18.668 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:12:18.668" Took=35533 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_12_06_115}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:18.668 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",84,83},{"delta_send",83,85},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",173,0},{"sub_cancel",0,0}] 
04:12:20.518 [error] C1 propagation "2020-08-06T04:12:20.518" 
04:12:20.518 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:12:20.518 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,86}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:85 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_12_06_115}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)384> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_12_06_115}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)385> f(AwMapRes).
ok
(g@13.0.0.17)386> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:22.794"
(g@13.0.0.17)387> 04:12:27.519 [error] C1 propagation "2020-08-06T04:12:27.519"  
04:12:27.957 [error] Sending find_sub batch [] 
04:12:27.957 [error] Sending find_sub_aq batch [] 
04:12:27.957 [error] batched message propagation "2020-08-06T04:12:27.957" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_12_06_115}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)388> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_12_06_115}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)389> f(AwMapRes).
ok
(g@13.0.0.17)390> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:30.836"
(g@13.0.0.17)391> 04:12:32.672 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:12:32.672" Took=33554 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_12_17_763}],[]}}}}] 
04:12:32.672 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",85,84},{"delta_send",84,86},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",175,0},{"sub_cancel",0,0}] 
04:12:34.521 [error] C1 propagation "2020-08-06T04:12:34.521" 
04:12:34.531 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:12:34.531 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,87}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:86 
04:12:37.959 [error] Sending find_sub batch [] 
04:12:37.959 [error] Sending find_sub_aq batch [] 
04:12:37.959 [error] batched message propagation "2020-08-06T04:12:37.959" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)392> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)393> f(AwMapRes).
ok
(g@13.0.0.17)394> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:38.878"
(g@13.0.0.17)395> 04:12:39.668 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:12:39.668" Took=30998 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_12_23_784}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:39.669 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",86,85},{"delta_send",85,87},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",177,0},{"sub_cancel",0,0}] 
04:12:41.522 [error] C1 propagation "2020-08-06T04:12:41.522" 
04:12:41.548 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:12:41.548 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,88}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:87 
04:12:46.673 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:12:46.673" Took=34953 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_12_35_827}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:46.673 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",87,86},{"delta_send",86,88},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",179,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_12_35_827}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)396> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_12_35_827}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)397> f(AwMapRes).
ok
(g@13.0.0.17)398> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:46.916"
(g@13.0.0.17)399> 04:12:47.611 [error] C3 propagation "2020-08-06T04:12:47.611"  
04:12:47.781 [error] C2 propagation "2020-08-06T04:12:47.781" 
04:12:47.961 [error] Sending find_sub batch [] 
04:12:47.961 [error] Sending find_sub_aq batch [] 
04:12:47.961 [error] batched message propagation "2020-08-06T04:12:47.961" 
04:12:48.523 [error] C1 propagation "2020-08-06T04:12:48.523" 
04:12:48.571 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:12:48.571 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,89}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:88 
04:12:53.677 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:12:53.677" Took=36809 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_12_41_849}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:53.677 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",88,87},{"delta_send",87,89},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",181,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_12_41_849}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)400> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_12_41_849}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)401> f(AwMapRes).
ok
(g@13.0.0.17)402> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:54.952"
(g@13.0.0.17)403> 04:12:55.524 [error] C1 propagation "2020-08-06T04:12:55.524"  
04:12:55.545 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:12:55.545 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,90}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:89 
04:12:57.963 [error] Sending find_sub batch [] 
04:12:57.963 [error] Sending find_sub_aq batch [] 
04:12:57.963 [error] batched message propagation "2020-08-06T04:12:57.963" 
04:13:00.673 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:13:00.673" Took=30673 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_12_47_868}]}}}}] 
04:13:00.674 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",89,88},{"delta_send",88,90},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",183,0},{"sub_cancel",0,0}] 
04:13:02.525 [error] C1 propagation "2020-08-06T04:13:02.525" 
04:13:02.558 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:13:02.558 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,91}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:90 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)404> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)405> f(AwMapRes).
ok
(g@13.0.0.17)406> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:02.994"
(g@13.0.0.17)407> 04:13:07.677 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:13:07.676" Took=32643 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_12_53_891}],[],[],[],[],[],[],[],[]}}}}] 
04:13:07.677 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",90,89},{"delta_send",89,91},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",185,0},{"sub_cancel",0,0}] 
04:13:07.965 [error] Sending find_sub batch [] 
04:13:07.965 [error] Sending find_sub_aq batch [] 
04:13:07.965 [error] batched message propagation "2020-08-06T04:13:07.965" 
04:13:09.527 [error] C1 propagation "2020-08-06T04:13:09.527" 
04:13:09.527 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:13:09.527 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,92}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:91 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_12_53_891}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)408> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_12_53_891}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)409> f(AwMapRes).
ok
(g@13.0.0.17)410> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:11.778"
(g@13.0.0.17)411> 04:13:14.682 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:13:14.682" Took=24042 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_12_59_911}],[],[],[],[],[],[]}}}}] 
04:13:14.682 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",91,90},{"delta_send",90,92},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",187,0},{"sub_cancel",0,0}] 
04:13:16.529 [error] C1 propagation "2020-08-06T04:13:16.529" 
04:13:16.573 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:13:16.574 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,93}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:92 
04:13:17.967 [error] Sending find_sub batch [] 
04:13:17.967 [error] Sending find_sub_aq batch [] 
04:13:17.967 [error] batched message propagation "2020-08-06T04:13:17.967" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_12_59_911}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)412> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_12_59_911}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)413> f(AwMapRes).
ok
(g@13.0.0.17)414> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:19.140"
(g@13.0.0.17)415> 04:13:21.677 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:13:21.677" Took=31961 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_13_05_930}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:13:21.678 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",92,91},{"delta_send",91,93},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",189,0},{"sub_cancel",0,0}] 
04:13:23.530 [error] C1 propagation "2020-08-06T04:13:23.530" 
04:13:23.541 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:13:23.542 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,94}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:93 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_13_05_930}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)416> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_13_05_930}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)417> f(AwMapRes).
ok
(g@13.0.0.17)418> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:27.178"
(g@13.0.0.17)419> 04:13:27.782 [error] C2 propagation "2020-08-06T04:13:27.782"  
04:13:27.968 [error] Sending find_sub batch [] 
04:13:27.968 [error] Sending find_sub_aq batch [] 
04:13:27.968 [error] batched message propagation "2020-08-06T04:13:27.968" 
04:13:28.680 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:13:28.680" Took=31113 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_13_17_972}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:13:28.701 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",93,92},{"delta_send",92,94},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",191,0},{"sub_cancel",0,0}] 
04:13:30.531 [error] C1 propagation "2020-08-06T04:13:30.531" 
04:13:30.582 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:13:30.582 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,95}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:94 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_13_17_972}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)420> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_13_17_972}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)421> f(AwMapRes).
ok
(g@13.0.0.17)422> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:35.212"
(g@13.0.0.17)423> 04:13:35.689 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:13:35.688" Took=38356 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_13_24_010}],[],[],[],[]}}}}] 
04:13:35.689 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",94,93},{"delta_send",93,95},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",193,0},{"sub_cancel",0,0}] 
04:13:37.533 [error] C1 propagation "2020-08-06T04:13:37.533" 
04:13:37.547 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:13:37.547 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,96}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:95 
04:13:37.970 [error] Sending find_sub batch [] 
04:13:37.970 [error] Sending find_sub_aq batch [] 
04:13:37.970 [error] batched message propagation "2020-08-06T04:13:37.970" 
04:13:42.687 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:13:42.687" Took=34598 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_13_30_035}],[],[]}}}}] 
04:13:42.688 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",95,94},{"delta_send",94,96},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",195,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)424> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_13_30_035}],
         [],[]}}}}]
(g@13.0.0.17)425> f(AwMapRes).
ok
(g@13.0.0.17)426> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:43.251"
(g@13.0.0.17)427> 04:13:44.534 [error] C1 propagation "2020-08-06T04:13:44.534"  
04:13:44.558 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:13:44.559 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,97}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:96 
04:13:47.972 [error] Sending find_sub batch [] 
04:13:47.972 [error] Sending find_sub_aq batch [] 
04:13:47.972 [error] batched message propagation "2020-08-06T04:13:47.972" 
04:13:49.686 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:13:49.686" Took=26925 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_13_36_052}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:13:49.686 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",96,95},{"delta_send",95,97},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",197,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_13_36_052}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)428> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_13_36_052}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)429> f(AwMapRes).
ok
(g@13.0.0.17)430> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:51.284"
(g@13.0.0.17)431> 04:13:51.535 [error] C1 propagation "2020-08-06T04:13:51.535"  
04:13:51.535 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:13:51.535 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,98}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:97 
04:13:56.681 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:13:56.681" Took=25631 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_13_42_071}],[],[],[],[],[],[]}}}}] 
04:13:56.681 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",97,96},{"delta_send",96,98},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",199,0},{"sub_cancel",0,0}] 
04:13:57.612 [error] C3 propagation "2020-08-06T04:13:57.612" 
04:13:57.974 [error] Sending find_sub batch [] 
04:13:57.974 [error] Sending find_sub_aq batch [] 
04:13:57.974 [error] batched message propagation "2020-08-06T04:13:57.974" 
04:13:58.536 [error] C1 propagation "2020-08-06T04:13:58.536" 
04:13:58.536 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:13:58.536 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,99}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:98 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_13_42_071}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)432> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_13_42_071}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)433> f(AwMapRes).
ok
(g@13.0.0.17)434> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:59.325"
(g@13.0.0.17)435> 04:14:03.708 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:14:03.707" Took=33900 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_13_48_095}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:03.708 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",98,97},{"delta_send",97,99},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",201,0},{"sub_cancel",0,0}] 
04:14:05.537 [error] C1 propagation "2020-08-06T04:14:05.537" 
04:14:05.537 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:14:05.537 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,100}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:99 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_13_48_095}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)436> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_13_48_095}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)437> f(AwMapRes).
ok
(g@13.0.0.17)438> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:07.374"
(g@13.0.0.17)439> 04:14:07.783 [error] C2 propagation "2020-08-06T04:14:07.783"  
04:14:07.975 [error] Sending find_sub batch [] 
04:14:07.975 [error] Sending find_sub_aq batch [] 
04:14:07.975 [error] batched message propagation "2020-08-06T04:14:07.975" 
04:14:10.689 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:14:10.688" Took=25693 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_14_00_141}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:10.689 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",99,98},{"delta_send",98,100},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",203,0},{"sub_cancel",0,0}] 
04:14:12.538 [error] C1 propagation "2020-08-06T04:14:12.538" 
04:14:12.568 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:14:12.568 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,101}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:100 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_14_00_141}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)440> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_14_00_141}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)441> f(AwMapRes).
ok
(g@13.0.0.17)442> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:15.411"
(g@13.0.0.17)443> 04:14:17.691 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:14:17.691" Took=31018 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_14_06_163}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:17.691 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",100,99},{"delta_send",99,101},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",205,0},{"sub_cancel",0,0}] 
04:14:17.977 [error] Sending find_sub batch [] 
04:14:17.977 [error] Sending find_sub_aq batch [] 
04:14:17.977 [error] batched message propagation "2020-08-06T04:14:17.977" 
04:14:19.540 [error] C1 propagation "2020-08-06T04:14:19.540" 
04:14:19.565 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:14:19.565 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,102}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:101 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_14_06_163}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)444> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_14_06_163}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)445> f(AwMapRes).
ok
(g@13.0.0.17)446> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:23.454"
(g@13.0.0.17)447> 04:14:24.693 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:14:24.693" Took=29766 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_14_12_187}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:24.693 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",101,100},{"delta_send",100,102},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",207,0},{"sub_cancel",0,0}] 
04:14:26.541 [error] C1 propagation "2020-08-06T04:14:26.541" 
04:14:26.541 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:14:26.541 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,103}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:102 
04:14:27.979 [error] Sending find_sub batch [] 
04:14:27.979 [error] Sending find_sub_aq batch [] 
04:14:27.979 [error] batched message propagation "2020-08-06T04:14:27.979" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_14_12_187}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)448> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_14_12_187}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)449> f(AwMapRes).
ok
(g@13.0.0.17)450> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:31.501"
(g@13.0.0.17)451> 04:14:31.700 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:14:31.700" Took=35034 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_14_18_207}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:31.701 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",102,101},{"delta_send",101,103},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",209,0},{"sub_cancel",0,0}] 
04:14:33.542 [error] C1 propagation "2020-08-06T04:14:33.542" 
04:14:33.542 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:14:33.542 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,104}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:103 
04:14:37.981 [error] Sending find_sub batch [] 
04:14:37.981 [error] Sending find_sub_aq batch [] 
04:14:37.981 [error] batched message propagation "2020-08-06T04:14:37.981" 
04:14:38.748 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:14:38.747" Took=32269 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_24_227}],[],[]}}}}] 
04:14:38.810 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",103,102},{"delta_send",102,104},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",211,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)452> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_14_24_227}],
         [],[]}}}}]
(g@13.0.0.17)453> f(AwMapRes).
ok
(g@13.0.0.17)454> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:39.541"
(g@13.0.0.17)455> 04:14:40.543 [error] C1 propagation "2020-08-06T04:14:40.543"  
04:14:40.570 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:14:40.570 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,105}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:104 
04:14:45.700 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:14:45.699" Took=33439 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_30_247}],[],[],[],[],[]}}}}] 
04:14:45.700 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",104,103},{"delta_send",103,105},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",213,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_14_30_247}],
             [],[],[],...}}}}]}
(g@13.0.0.17)456> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_14_30_247}],
         [],[],[],[],[]}}}}]
(g@13.0.0.17)457> f(AwMapRes).
ok
(g@13.0.0.17)458> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:47.587"
(g@13.0.0.17)459> 04:14:47.544 [error] C1 propagation "2020-08-06T04:14:47.544"  
04:14:47.561 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:14:47.562 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,106}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:105 
04:14:47.784 [error] C2 propagation "2020-08-06T04:14:47.784" 
04:14:47.983 [error] Sending find_sub batch [] 
04:14:47.983 [error] Sending find_sub_aq batch [] 
04:14:47.983 [error] batched message propagation "2020-08-06T04:14:47.983" 
04:14:52.703 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:14:52.703" Took=29887 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_42_291}]}}}}] 
04:14:52.703 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",105,104},{"delta_send",104,106},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",215,0},{"sub_cancel",0,0}] 
04:14:54.545 [error] C1 propagation "2020-08-06T04:14:54.545" 
04:14:54.546 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:14:54.546 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,107}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:106 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)460> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)461> f(AwMapRes).
ok
(g@13.0.0.17)462> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:55.617"
(g@13.0.0.17)463> 04:14:57.984 [error] Sending find_sub batch [] 
04:14:57.984 [error] Sending find_sub_aq batch [] 
04:14:57.984 [error] batched message propagation "2020-08-06T04:14:57.984" 
04:14:59.711 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:14:59.710" Took=39228 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_48_307}],[],[],[],[],[]}}}}] 
04:14:59.711 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",106,105},{"delta_send",105,107},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",217,0},{"sub_cancel",0,0}] 
04:15:01.546 [error] C1 propagation "2020-08-06T04:15:01.546" 
04:15:01.546 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:15:01.546 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,108}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:107 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_14_48_307}],
             [],[],[],...}}}}]}
(g@13.0.0.17)464> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_14_48_307}],
         [],[],[],[],[]}}}}]
(g@13.0.0.17)465> f(AwMapRes).
ok
(g@13.0.0.17)466> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:03.669"
(g@13.0.0.17)467> 04:15:06.707 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:15:06.707" Took=36471 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_54_327}]}}}}] 
04:15:06.708 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",107,106},{"delta_send",106,108},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",219,0},{"sub_cancel",0,0}] 
04:15:07.614 [error] C3 propagation "2020-08-06T04:15:07.614" 
04:15:07.986 [error] Sending find_sub batch [] 
04:15:07.986 [error] Sending find_sub_aq batch [] 
04:15:07.986 [error] batched message propagation "2020-08-06T04:15:07.986" 
04:15:08.547 [error] C1 propagation "2020-08-06T04:15:08.547" 
04:15:08.583 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:15:08.583 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,109}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:108 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)468> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)469> f(AwMapRes).
ok
(g@13.0.0.17)470> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:11.709"
(g@13.0.0.17)471> 04:15:13.698 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:15:13.698" Took=24704 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_00_346}]}}}}] 
04:15:13.699 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",108,107},{"delta_send",107,109},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",221,0},{"sub_cancel",0,0}] 
04:15:15.548 [error] C1 propagation "2020-08-06T04:15:15.548" 
04:15:15.573 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:15:15.573 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,110}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:109 
04:15:17.988 [error] Sending find_sub batch [] 
04:15:17.988 [error] Sending find_sub_aq batch [] 
04:15:17.988 [error] batched message propagation "2020-08-06T04:15:17.988" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)472> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)473> f(AwMapRes).
ok
(g@13.0.0.17)474> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:19.752"
(g@13.0.0.17)475> 04:15:20.711 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:15:20.711" Took=35741 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_15_06_367}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:15:20.712 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",109,108},{"delta_send",108,110},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",223,0},{"sub_cancel",0,0}] 
04:15:22.549 [error] C1 propagation "2020-08-06T04:15:22.549" 
04:15:22.552 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:15:22.552 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,111}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:110 
04:15:27.700 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:15:27.700" Took=24592 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_15_12_391}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:15:27.701 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",110,109},{"delta_send",109,111},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",225,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
04:15:27.809 [error] C2 propagation "2020-08-06T04:15:27.809" 
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_15_12_391}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)476> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_15_12_391}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)477> f(AwMapRes).
ok
(g@13.0.0.17)478> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:27.835"
(g@13.0.0.17)479> 04:15:27.990 [error] Sending find_sub batch [] 
04:15:27.990 [error] Sending find_sub_aq batch [] 
04:15:27.990 [error] batched message propagation "2020-08-06T04:15:27.990" 
04:15:29.551 [error] C1 propagation "2020-08-06T04:15:29.551" 
04:15:29.551 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:15:29.551 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,112}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:111 
04:15:34.709 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:15:34.709" Took=32766 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_18_415}],[],[],[],[],[],[]}}}}] 
04:15:34.709 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",111,110},{"delta_send",110,112},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",227,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_15_18_415}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)480> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_15_18_415}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)481> f(AwMapRes).
ok
(g@13.0.0.17)482> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:35.825"
(g@13.0.0.17)483> 04:15:36.552 [error] C1 propagation "2020-08-06T04:15:36.552"  
04:15:36.552 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:15:36.553 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,113}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:112 
04:15:37.992 [error] Sending find_sub batch [] 
04:15:37.992 [error] Sending find_sub_aq batch [] 
04:15:37.992 [error] batched message propagation "2020-08-06T04:15:37.992" 
04:15:41.718 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:15:41.717" Took=38873 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_15_30_458}],[],[],[],[],[],[],[],[],[]}}}}] 
04:15:41.718 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",112,111},{"delta_send",111,113},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",229,0},{"sub_cancel",0,0}] 
04:15:43.553 [error] C1 propagation "2020-08-06T04:15:43.553" 
04:15:43.553 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:15:43.553 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,114}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:113 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_15_30_458}],
             [],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)484> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_15_30_458}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)485> f(AwMapRes).
ok
(g@13.0.0.17)486> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:43.861"
(g@13.0.0.17)487> 04:15:47.994 [error] Sending find_sub batch [] 
04:15:47.994 [error] Sending find_sub_aq batch [] 
04:15:47.994 [error] batched message propagation "2020-08-06T04:15:47.994" 
04:15:48.714 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:15:48.714" Took=32890 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_36_478}],[],[]}}}}] 
04:15:48.714 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",113,112},{"delta_send",112,114},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",231,0},{"sub_cancel",0,0}] 
04:15:50.554 [error] C1 propagation "2020-08-06T04:15:50.554" 
04:15:50.555 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:15:50.555 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,115}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:114 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)488> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_15_36_478}],
         [],[]}}}}]
(g@13.0.0.17)489> f(AwMapRes).
ok
(g@13.0.0.17)490> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:51.910"
(g@13.0.0.17)491> 04:15:55.717 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:15:55.717" Took=33222 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_42_499}]}}}}] 
04:15:55.718 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",114,113},{"delta_send",113,115},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",233,0},{"sub_cancel",0,0}] 
04:15:57.556 [error] C1 propagation "2020-08-06T04:15:57.556" 
04:15:57.556 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:15:57.556 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,116}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:115 
04:15:57.996 [error] Sending find_sub batch [] 
04:15:57.996 [error] Sending find_sub_aq batch [] 
04:15:57.996 [error] batched message propagation "2020-08-06T04:15:57.996" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)492> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)493> f(AwMapRes).
ok
(g@13.0.0.17)494> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:59.952"
(g@13.0.0.17)495> 04:16:02.708 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:16:02.708" Took=23305 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_15_48_519}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:02.708 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",115,114},{"delta_send",114,116},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",235,0},{"sub_cancel",0,0}] 
04:16:04.557 [error] C1 propagation "2020-08-06T04:16:04.557" 
04:16:04.557 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:16:04.557 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,117}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:116 
04:16:07.810 [error] C2 propagation "2020-08-06T04:16:07.810" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_15_48_519}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)496> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_15_48_519}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)497> f(AwMapRes).
ok
(g@13.0.0.17)498> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:07.992"
(g@13.0.0.17)499> 04:16:07.998 [error] Sending find_sub batch [] 
04:16:07.998 [error] Sending find_sub_aq batch [] 
04:16:07.998 [error] batched message propagation "2020-08-06T04:16:07.998" 
04:16:09.751 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:16:09.751" Took=34464 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_15_54_539}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:09.752 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",116,115},{"delta_send",115,117},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",237,0},{"sub_cancel",0,0}] 
04:16:11.559 [error] C1 propagation "2020-08-06T04:16:11.559" 
04:16:11.559 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:16:11.559 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,118}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:117 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_15_54_539}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)500> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_15_54_539}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)501> f(AwMapRes).
ok
(g@13.0.0.17)502> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:16.301"
(g@13.0.0.17)503> 04:16:16.718 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:16:16.718" Took=31317 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_16_00_559}],[],[],[],[],[]}}}}] 
04:16:16.718 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",117,116},{"delta_send",116,118},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",239,0},{"sub_cancel",0,0}] 
04:16:17.616 [error] C3 propagation "2020-08-06T04:16:17.616" 
04:16:17.999 [error] Sending find_sub batch [] 
04:16:17.999 [error] Sending find_sub_aq batch [] 
04:16:17.999 [error] batched message propagation "2020-08-06T04:16:17.999" 
04:16:18.560 [error] C1 propagation "2020-08-06T04:16:18.560" 
04:16:18.601 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:16:18.601 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,119}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:118 
04:16:23.717 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:16:23.717" Took=28630 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_16_12_602}],[],[],[],[],[],[],[],[]}}}}] 
04:16:23.717 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",118,117},{"delta_send",117,119},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",241,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_16_12_602}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)504> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_16_12_602}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)505> f(AwMapRes).
ok
(g@13.0.0.17)506> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:24.648"
(g@13.0.0.17)507> 04:16:25.562 [error] C1 propagation "2020-08-06T04:16:25.562"  
04:16:25.562 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:16:25.562 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,120}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:119 
04:16:28.001 [error] Sending find_sub batch [] 
04:16:28.001 [error] Sending find_sub_aq batch [] 
04:16:28.001 [error] batched message propagation "2020-08-06T04:16:28.153" 
04:16:30.718 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:16:30.718" Took=25579 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_16_18_623}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:30.719 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",119,118},{"delta_send",118,120},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",243,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_16_18_623}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)508> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_16_18_623}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)509> f(AwMapRes).
ok
(g@13.0.0.17)510> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:32.100"
(g@13.0.0.17)511> 04:16:32.563 [error] C1 propagation "2020-08-06T04:16:32.563"  
04:16:32.566 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:16:32.566 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,121}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:120 
04:16:37.728 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:16:37.728" Took=33550 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_16_24_642}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:37.728 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",120,119},{"delta_send",119,121},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",245,0},{"sub_cancel",0,0}] 
04:16:38.003 [error] Sending find_sub batch [] 
04:16:38.003 [error] Sending find_sub_aq batch [] 
04:16:38.003 [error] batched message propagation "2020-08-06T04:16:38.342" 
04:16:39.565 [error] C1 propagation "2020-08-06T04:16:39.565" 
04:16:39.579 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:16:39.579 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,122}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:121 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_16_24_642}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)512> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_16_24_642}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)513> f(AwMapRes).
ok
(g@13.0.0.17)514> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:40.141"
(g@13.0.0.17)515> 04:16:44.731 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:16:44.731" Took=34912 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_16_30_665}],[],[],[],[]}}}}] 
04:16:44.731 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",121,120},{"delta_send",120,122},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",247,0},{"sub_cancel",0,0}] 
04:16:46.567 [error] C1 propagation "2020-08-06T04:16:46.567" 
04:16:46.587 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:16:46.587 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,123}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:122 
04:16:47.812 [error] C2 propagation "2020-08-06T04:16:47.812" 
04:16:48.004 [error] Sending find_sub batch [] 
04:16:48.004 [error] Sending find_sub_aq batch [] 
04:16:48.004 [error] batched message propagation "2020-08-06T04:16:48.449" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_16_30_665}],
             [],[],...}}}}]}
(g@13.0.0.17)516> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_16_30_665}],
         [],[],[],[]}}}}]
(g@13.0.0.17)517> f(AwMapRes).
ok
(g@13.0.0.17)518> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:48.178"
(g@13.0.0.17)519> 04:16:51.724 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:16:51.724" Took=28904 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_16_36_687}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:51.725 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",122,121},{"delta_send",121,123},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",249,0},{"sub_cancel",0,0}] 
04:16:53.569 [error] C1 propagation "2020-08-06T04:16:53.569" 
04:16:53.575 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:16:53.576 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,124}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:123 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_16_36_687}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)520> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_16_36_687}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)521> f(AwMapRes).
ok
(g@13.0.0.17)522> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:56.214"
(g@13.0.0.17)523> 04:16:58.005 [error] Sending find_sub batch [] 
04:16:58.005 [error] Sending find_sub_aq batch [] 
04:16:58.005 [error] batched message propagation "2020-08-06T04:16:58.547" 
04:16:58.731 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:16:58.731" Took=32259 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_16_42_707}],[],[],[],[],[],[],[]}}}}] 
04:16:58.836 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",123,122},{"delta_send",122,124},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",251,0},{"sub_cancel",0,0}] 
04:17:00.571 [error] C1 propagation "2020-08-06T04:17:00.571" 
04:17:00.577 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:17:00.577 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,125}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:124 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_16_42_707}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)524> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_16_42_707}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)525> f(AwMapRes).
ok
(g@13.0.0.17)526> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:04.255"
(g@13.0.0.17)527> 04:17:05.719 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:17:05.719" Took=22902 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_16_54_751}],[],[],[],[]}}}}] 
04:17:05.719 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",124,123},{"delta_send",123,125},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",253,0},{"sub_cancel",0,0}] 
04:17:07.572 [error] C1 propagation "2020-08-06T04:17:07.572" 
04:17:07.599 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:17:07.599 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,126}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:125 
04:17:08.007 [error] Sending find_sub batch [] 
04:17:08.007 [error] Sending find_sub_aq batch [] 
04:17:08.007 [error] batched message propagation "2020-08-06T04:17:08.748" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_16_54_751}],
             [],[],...}}}}]}
(g@13.0.0.17)528> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_16_54_751}],
         [],[],[],[]}}}}]
(g@13.0.0.17)529> f(AwMapRes).
ok
(g@13.0.0.17)530> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:12.295"
(g@13.0.0.17)531> 04:17:12.730 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:17:12.730" Took=26313 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_00_768}],[],[],[],[],[]}}}}] 
04:17:12.730 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",125,124},{"delta_send",124,126},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",255,0},{"sub_cancel",0,0}] 
04:17:14.574 [error] C1 propagation "2020-08-06T04:17:14.574" 
04:17:14.575 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:17:14.575 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,127}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:126 
04:17:18.009 [error] Sending find_sub batch [] 
04:17:18.009 [error] Sending find_sub_aq batch [] 
04:17:18.009 [error] batched message propagation "2020-08-06T04:17:18.952" 
04:17:19.737 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:17:19.737" Took=35361 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_06_799}],[],[],[]}}}}] 
04:17:19.738 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",126,125},{"delta_send",125,127},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",257,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(g@13.0.0.17)532> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_17_06_799}],
         [],[],[]}}}}]
(g@13.0.0.17)533> f(AwMapRes).
ok
(g@13.0.0.17)534> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:20.334"
(g@13.0.0.17)535> 04:17:21.576 [error] C1 propagation "2020-08-06T04:17:21.576"  
04:17:21.576 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:17:21.576 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,128}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:127 
04:17:26.741 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:17:26.741" Took=36930 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_12_820}],[]}}}}] 
04:17:26.741 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",127,126},{"delta_send",126,128},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",259,0},{"sub_cancel",0,0}] 
04:17:27.617 [error] C3 propagation "2020-08-06T04:17:27.617" 
04:17:27.814 [error] C2 propagation "2020-08-06T04:17:27.814" 
04:17:28.011 [error] Sending find_sub batch [] 
04:17:28.011 [error] Sending find_sub_aq batch [] 
04:17:28.011 [error] batched message propagation "2020-08-06T04:17:28.115" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)536> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)537> f(AwMapRes).
ok
(g@13.0.0.17)538> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:28.369"
(g@13.0.0.17)539> 04:17:28.577 [error] C1 propagation "2020-08-06T04:17:28.577"  
04:17:28.640 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:17:28.640 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,129}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:128 
04:17:35.578 [error] C1 propagation "2020-08-06T04:17:35.578" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)540> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)541> f(AwMapRes).
ok
(g@13.0.0.17)542> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:36.404"
(g@13.0.0.17)543> 04:17:38.013 [error] Sending find_sub batch [] 
04:17:38.013 [error] Sending find_sub_aq batch [] 
04:17:38.013 [error] batched message propagation "2020-08-06T04:17:38.134" 
04:17:40.839 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:17:40.839" Took=25280 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_17_24_422}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:17:40.839 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",128,127},{"delta_send",127,129},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",261,0},{"sub_cancel",0,0}] 
04:17:42.579 [error] C1 propagation "2020-08-06T04:17:42.579" 
04:17:42.613 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:17:42.613 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,130}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:129 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_17_24_422}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)544> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_17_24_422}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)545> f(AwMapRes).
ok
(g@13.0.0.17)546> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:44.441"
(g@13.0.0.17)547> 04:17:47.746 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:17:47.746" Took=35992 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_36_467}],[],[],[],[],[]}}}}] 
04:17:47.747 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",129,128},{"delta_send",128,130},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",263,0},{"sub_cancel",0,0}] 
04:17:48.015 [error] Sending find_sub batch [] 
04:17:48.015 [error] Sending find_sub_aq batch [] 
04:17:48.015 [error] batched message propagation "2020-08-06T04:17:48.155" 
04:17:49.580 [error] C1 propagation "2020-08-06T04:17:49.580" 
04:17:49.580 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:17:49.580 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,131}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:130 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_17_36_467}],
             [],[],[],...}}}}]}
(g@13.0.0.17)548> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_17_36_467}],
         [],[],[],[],[]}}}}]
(g@13.0.0.17)549> f(AwMapRes).
ok
(g@13.0.0.17)550> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:52.491"
(g@13.0.0.17)551> 04:17:54.748 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:17:54.748" Took=34078 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_42_490}]}}}}] 
04:17:54.749 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",130,129},{"delta_send",129,131},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",265,0},{"sub_cancel",0,0}] 
04:17:56.581 [error] C1 propagation "2020-08-06T04:17:56.581" 
04:17:56.582 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:17:56.582 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,132}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:131 
04:17:58.017 [error] Sending find_sub batch [] 
04:17:58.017 [error] Sending find_sub_aq batch [] 
04:17:58.017 [error] batched message propagation "2020-08-06T04:17:58.174" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)552> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)553> f(AwMapRes).
ok
(g@13.0.0.17)554> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:00.524"
(g@13.0.0.17)555> 04:18:01.749 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:18:01.748" Took=31067 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_17_48_512}],[],[],[],[],[],[],[]}}}}] 
04:18:01.749 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",131,130},{"delta_send",130,132},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",267,0},{"sub_cancel",0,0}] 
04:18:03.583 [error] C1 propagation "2020-08-06T04:18:03.583" 
04:18:03.583 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:18:03.583 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,133}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:132 
04:18:07.816 [error] C2 propagation "2020-08-06T04:18:07.816" 
04:18:08.019 [error] Sending find_sub batch [] 
04:18:08.019 [error] Sending find_sub_aq batch [] 
04:18:08.019 [error] batched message propagation "2020-08-06T04:18:08.195" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_17_48_512}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)556> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_17_48_512}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)557> f(AwMapRes).
ok
(g@13.0.0.17)558> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:08.559"
(g@13.0.0.17)559> 04:18:08.745 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:18:08.745" Took=34098 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_54_535}],[],[]}}}}] 
04:18:08.746 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",132,131},{"delta_send",131,133},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",269,0},{"sub_cancel",0,0}] 
04:18:10.584 [error] C1 propagation "2020-08-06T04:18:10.584" 
04:18:10.585 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:18:10.585 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,134}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:133 
04:18:15.773 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:18:15.772" Took=34288 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_18_00_554}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:15.773 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",133,132},{"delta_send",132,134},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",271,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_18_00_554}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)560> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_18_00_554}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)561> f(AwMapRes).
ok
(g@13.0.0.17)562> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:16.593"
(g@13.0.0.17)563> 04:18:17.585 [error] C1 propagation "2020-08-06T04:18:17.585"  
04:18:17.585 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:18:17.585 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,135}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:134 
04:18:18.021 [error] Sending find_sub batch [] 
04:18:18.021 [error] Sending find_sub_aq batch [] 
04:18:18.021 [error] batched message propagation "2020-08-06T04:18:18.215" 
04:18:22.737 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:18:22.737" Took=23774 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_18_06_579}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:22.738 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",134,133},{"delta_send",133,135},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",273,0},{"sub_cancel",0,0}] 
04:18:24.586 [error] C1 propagation "2020-08-06T04:18:24.586" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_18_06_579}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)564> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_18_06_579}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)565> f(AwMapRes).
ok
(g@13.0.0.17)566> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:24.658"
(g@13.0.0.17)567> 04:18:24.588 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:18:24.588 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,136}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:135 
04:18:28.023 [error] Sending find_sub batch [] 
04:18:28.023 [error] Sending find_sub_aq batch [] 
04:18:28.023 [error] batched message propagation "2020-08-06T04:18:28.235" 
04:18:29.759 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:18:29.759" Took=27528 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_18_18_626}],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:29.760 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",135,134},{"delta_send",134,136},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",275,0},{"sub_cancel",0,0}] 
04:18:31.587 [error] C1 propagation "2020-08-06T04:18:31.587" 
04:18:31.610 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:18:31.610 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,137}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:136 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_18_18_626}],
             [],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)568> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_18_18_626}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)569> f(AwMapRes).
ok
(g@13.0.0.17)570> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:32.688"
(g@13.0.0.17)571> 04:18:36.788 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:18:36.788" Took=32821 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_18_24_647}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:36.789 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",136,135},{"delta_send",135,137},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",277,0},{"sub_cancel",0,0}] 
04:18:37.619 [error] C3 propagation "2020-08-06T04:18:37.619" 
04:18:38.025 [error] Sending find_sub batch [] 
04:18:38.025 [error] Sending find_sub_aq batch [] 
04:18:38.025 [error] batched message propagation "2020-08-06T04:18:38.254" 
04:18:38.589 [error] C1 propagation "2020-08-06T04:18:38.589" 
04:18:38.589 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:18:38.589 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,138}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:137 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_18_24_647}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)572> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_18_24_647}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)573> f(AwMapRes).
ok
(g@13.0.0.17)574> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:40.731"
(g@13.0.0.17)575> 04:18:43.754 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:18:43.754" Took=32572 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_18_30_671}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:43.755 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",137,136},{"delta_send",136,138},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",279,0},{"sub_cancel",0,0}] 
04:18:45.590 [error] C1 propagation "2020-08-06T04:18:45.590" 
04:18:45.590 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:18:45.591 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,139}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:138 
04:18:47.817 [error] C2 propagation "2020-08-06T04:18:47.817" 
04:18:48.026 [error] Sending find_sub batch [] 
04:18:48.026 [error] Sending find_sub_aq batch [] 
04:18:48.026 [error] batched message propagation "2020-08-06T04:18:48.264" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_18_30_671}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)576> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_18_30_671}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)577> f(AwMapRes).
ok
(g@13.0.0.17)578> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:48.769"
(g@13.0.0.17)579> 04:18:50.761 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:18:50.761" Took=26229 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_18_36_691}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:50.761 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",138,137},{"delta_send",137,139},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",281,0},{"sub_cancel",0,0}] 
04:18:52.592 [error] C1 propagation "2020-08-06T04:18:52.592" 
04:18:52.629 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:18:52.629 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,140}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:139 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_18_36_691}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)580> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_18_36_691}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)581> f(AwMapRes).
ok
(g@13.0.0.17)582> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:56.805"
(g@13.0.0.17)583> 04:18:57.747 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:18:57.747" Took=24512 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_18_42_711}],[],[],[],[],[],[],[],[]}}}}] 
04:18:57.748 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",139,138},{"delta_send",138,140},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",283,0},{"sub_cancel",0,0}] 
04:18:58.028 [error] Sending find_sub batch [] 
04:18:58.028 [error] Sending find_sub_aq batch [] 
04:18:58.028 [error] batched message propagation "2020-08-06T04:18:58.284" 
04:18:59.593 [error] C1 propagation "2020-08-06T04:18:59.593" 
04:18:59.627 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:18:59.627 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,141}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:140 
04:19:04.764 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:19:04.764" Took=40024 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_18_48_737}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:19:04.764 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",140,139},{"delta_send",139,141},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",285,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_18_48_737}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)584> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_18_48_737}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)585> f(AwMapRes).
ok
(g@13.0.0.17)586> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:04.913"
(g@13.0.0.17)587> 04:19:06.594 [error] C1 propagation "2020-08-06T04:19:06.594"  
04:19:06.594 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:19:06.595 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,142}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:141 
04:19:08.030 [error] Sending find_sub batch [] 
04:19:08.030 [error] Sending find_sub_aq batch [] 
04:19:08.030 [error] batched message propagation "2020-08-06T04:19:08.305" 
04:19:11.749 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:19:11.748" Took=24517 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_19_00_782}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:19:11.749 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",141,140},{"delta_send",140,142},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",287,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_19_00_782}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)588> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_19_00_782}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)589> f(AwMapRes).
ok
(g@13.0.0.17)590> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:12.882"
(g@13.0.0.17)591> 04:19:13.596 [error] C1 propagation "2020-08-06T04:19:13.596"  
04:19:13.632 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:19:13.632 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,143}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:142 
04:19:18.032 [error] Sending find_sub batch [] 
04:19:18.032 [error] Sending find_sub_aq batch [] 
04:19:18.032 [error] batched message propagation "2020-08-06T04:19:18.325" 
04:19:18.749 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:19:18.749" Took=23216 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_06_806}],[],[],[],[],[]}}}}] 
04:19:18.749 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",142,141},{"delta_send",141,143},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",289,0},{"sub_cancel",0,0}] 
04:19:20.598 [error] C1 propagation "2020-08-06T04:19:20.598" 
04:19:20.598 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:19:20.598 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,144}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:143 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_19_06_806}],
             [],[],[],...}}}}]}
(g@13.0.0.17)592> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_19_06_806}],
         [],[],[],[],[]}}}}]
(g@13.0.0.17)593> f(AwMapRes).
ok
(g@13.0.0.17)594> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:20.921"
(g@13.0.0.17)595> 04:19:25.761 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:19:25.761" Took=33586 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_19_12_827}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:19:25.761 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",143,142},{"delta_send",142,144},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",291,0},{"sub_cancel",0,0}] 
04:19:27.599 [error] C1 propagation "2020-08-06T04:19:27.599" 
04:19:27.599 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:19:27.599 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,145}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:144 
04:19:27.818 [error] C2 propagation "2020-08-06T04:19:27.818" 
04:19:28.033 [error] Sending find_sub batch [] 
04:19:28.033 [error] Sending find_sub_aq batch [] 
04:19:28.033 [error] batched message propagation "2020-08-06T04:19:28.334" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_19_12_827}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)596> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_19_12_827}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)597> f(AwMapRes).
ok
(g@13.0.0.17)598> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:28.959"
(g@13.0.0.17)599> 04:19:34.475 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:19:34.475" Took=46623 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_18_848}],[],[],[],[]}}}}] 
04:19:34.475 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",144,143},{"delta_send",143,145},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",293,0},{"sub_cancel",0,0}] 
04:19:34.600 [error] C1 propagation "2020-08-06T04:19:34.600" 
04:19:34.630 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:19:34.630 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,146}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:145 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_19_18_848}],
             [],[],...}}}}]}
(g@13.0.0.17)600> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_19_18_848}],
         [],[],[],[]}}}}]
(g@13.0.0.17)601> f(AwMapRes).
ok
(g@13.0.0.17)602> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:36.995"
(g@13.0.0.17)603> 04:19:38.035 [error] Sending find_sub batch [] 
04:19:38.035 [error] Sending find_sub_aq batch [] 
04:19:38.035 [error] batched message propagation "2020-08-06T04:19:38.354" 
04:19:39.780 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:19:39.780" Took=33788 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_24_870}],[],[],[],[]}}}}] 
04:19:39.781 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",145,144},{"delta_send",144,146},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",295,0},{"sub_cancel",0,0}] 
04:19:41.601 [error] C1 propagation "2020-08-06T04:19:41.601" 
04:19:41.601 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:19:41.601 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,147}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:146 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_19_24_870}],
             [],[],...}}}}]}
(g@13.0.0.17)604> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_19_24_870}],
         [],[],[],[]}}}}]
(g@13.0.0.17)605> f(AwMapRes).
ok
(g@13.0.0.17)606> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:45.370"
(g@13.0.0.17)607> 04:19:46.762 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:19:46.762" Took=27643 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_30_891}],[],[],[],[]}}}}] 
04:19:46.763 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",146,145},{"delta_send",145,147},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",297,0},{"sub_cancel",0,0}] 
04:19:47.621 [error] C3 propagation "2020-08-06T04:19:47.621" 
04:19:48.036 [error] Sending find_sub batch [] 
04:19:48.036 [error] Sending find_sub_aq batch [] 
04:19:48.036 [error] batched message propagation "2020-08-06T04:19:48.364" 
04:19:48.603 [error] C1 propagation "2020-08-06T04:19:48.603" 
04:19:48.677 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:19:48.677 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,148}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:147 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_19_30_891}],
             [],[],...}}}}]}
(g@13.0.0.17)608> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_19_30_891}],
         [],[],[],[]}}}}]
(g@13.0.0.17)609> f(AwMapRes).
ok
(g@13.0.0.17)610> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:53.771"
(g@13.0.0.17)611> 04:19:53.796 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:19:53.796" Took=37296 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_19_42_935}],[],[],[],[],[],[],[],[]}}}}] 
04:19:53.797 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",147,146},{"delta_send",146,148},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",299,0},{"sub_cancel",0,0}] 
04:19:55.605 [error] C1 propagation "2020-08-06T04:19:55.605" 
04:19:55.628 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:19:55.628 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,149}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:148 
04:19:58.038 [error] Sending find_sub batch [] 
04:19:58.038 [error] Sending find_sub_aq batch [] 
04:19:58.038 [error] batched message propagation "2020-08-06T04:19:58.385" 
04:20:00.763 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:20:00.762" Took=24848 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_19_48_958}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:20:00.764 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",148,147},{"delta_send",147,149},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",301,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_19_48_958}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)612> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_19_48_958}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)613> f(AwMapRes).
ok
(g@13.0.0.17)614> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:01.114"
(g@13.0.0.17)615> 04:20:02.606 [error] C1 propagation "2020-08-06T04:20:02.606"  
04:20:02.678 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:20:02.678 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,150}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:149 
04:20:07.772 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:20:07.772" Took=32926 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_19_54_980}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:20:07.772 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",149,148},{"delta_send",148,150},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",303,0},{"sub_cancel",0,0}] 
04:20:07.863 [error] C2 propagation "2020-08-06T04:20:07.863" 
04:20:08.040 [error] Sending find_sub batch [] 
04:20:08.040 [error] Sending find_sub_aq batch [] 
04:20:08.040 [error] batched message propagation "2020-08-06T04:20:08.404" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_19_54_980}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)616> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_19_54_980}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)617> f(AwMapRes).
ok
(g@13.0.0.17)618> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:09.147"
(g@13.0.0.17)619> 04:20:09.608 [error] C1 propagation "2020-08-06T04:20:09.608"  
04:20:09.618 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:20:09.619 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,151}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:150 
04:20:14.771 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:20:14.771" Took=30083 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_20_01_004}],[],[],[],[],[],[],[]}}}}] 
04:20:14.772 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",150,149},{"delta_send",149,151},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",305,0},{"sub_cancel",0,0}] 
04:20:16.609 [error] C1 propagation "2020-08-06T04:20:16.609" 
04:20:16.657 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:20:16.657 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,152}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:151 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_01_004}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)620> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_01_004}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)621> f(AwMapRes).
ok
(g@13.0.0.17)622> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:17.187"
(g@13.0.0.17)623> 04:20:18.042 [error] Sending find_sub batch [] 
04:20:18.042 [error] Sending find_sub_aq batch [] 
04:20:18.042 [error] batched message propagation "2020-08-06T04:20:18.425" 
04:20:21.774 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:20:21.774" Took=33252 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_07_023}],[],[],[],[],[],[]}}}}] 
04:20:21.774 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",151,150},{"delta_send",150,152},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",307,0},{"sub_cancel",0,0}] 
04:20:23.610 [error] C1 propagation "2020-08-06T04:20:23.610" 
04:20:23.610 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:20:23.610 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,153}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:152 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_07_023}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)624> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_07_023}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)625> f(AwMapRes).
ok
(g@13.0.0.17)626> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:25.236"
(g@13.0.0.17)627> 04:20:28.044 [error] Sending find_sub batch [] 
04:20:28.044 [error] Sending find_sub_aq batch [] 
04:20:28.044 [error] batched message propagation "2020-08-06T04:20:28.445" 
04:20:28.766 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:20:28.766" Took=23349 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_20_13_042}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:20:28.767 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",152,151},{"delta_send",151,153},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",309,0},{"sub_cancel",0,0}] 
04:20:30.611 [error] C1 propagation "2020-08-06T04:20:30.611" 
04:20:30.611 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:20:30.611 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,154}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:153 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_20_13_042}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)628> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_20_13_042}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)629> f(AwMapRes).
ok
(g@13.0.0.17)630> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:33.276"
(g@13.0.0.17)631> 04:20:35.771 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:20:35.771" Took=27244 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_20_25_093}],[],[],[],[],[],[],[]}}}}] 
04:20:35.771 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",153,152},{"delta_send",152,154},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",311,0},{"sub_cancel",0,0}] 
04:20:37.612 [error] C1 propagation "2020-08-06T04:20:37.612" 
04:20:37.625 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:20:37.625 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,155}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:154 
04:20:38.046 [error] Sending find_sub batch [] 
04:20:38.046 [error] Sending find_sub_aq batch [] 
04:20:38.046 [error] batched message propagation "2020-08-06T04:20:38.464" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_25_093}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)632> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_25_093}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)633> f(AwMapRes).
ok
(g@13.0.0.17)634> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:41.317"
(g@13.0.0.17)635> 04:20:42.784 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:20:42.784" Took=40030 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_31_127}],[],[]}}}}] 
04:20:42.785 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",154,153},{"delta_send",153,155},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",313,0},{"sub_cancel",0,0}] 
04:20:44.613 [error] C1 propagation "2020-08-06T04:20:44.613" 
04:20:44.658 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:20:44.658 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,156}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:155 
04:20:47.864 [error] C2 propagation "2020-08-06T04:20:47.864" 
04:20:48.048 [error] Sending find_sub batch [] 
04:20:48.048 [error] Sending find_sub_aq batch [] 
04:20:48.048 [error] batched message propagation "2020-08-06T04:20:48.484" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)636> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_31_127}],
         [],[]}}}}]
(g@13.0.0.17)637> f(AwMapRes).
ok
(g@13.0.0.17)638> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:49.351"
(g@13.0.0.17)639> 04:20:49.782 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:20:49.782" Took=33598 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_20_37_147}],[],[],[],[],[],[],[],[]}}}}] 
04:20:49.782 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",155,154},{"delta_send",154,156},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",315,0},{"sub_cancel",0,0}] 
04:20:51.614 [error] C1 propagation "2020-08-06T04:20:51.614" 
04:20:51.627 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:20:51.628 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,157}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:156 
04:20:56.782 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:20:56.782" Took=31220 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_43_168}],[]}}}}] 
04:20:56.783 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",156,155},{"delta_send",155,157},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",317,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)640> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)641> f(AwMapRes).
ok
(g@13.0.0.17)642> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:57.388"
(g@13.0.0.17)643> 04:20:57.623 [error] C3 propagation "2020-08-06T04:20:57.623"  
04:20:58.049 [error] Sending find_sub batch [] 
04:20:58.049 [error] Sending find_sub_aq batch [] 
04:20:58.049 [error] batched message propagation "2020-08-06T04:20:58.494" 
04:20:58.615 [error] C1 propagation "2020-08-06T04:20:58.615" 
04:20:58.668 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:20:58.669 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,158}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:157 
04:21:03.793 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:21:03.793" Took=40370 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_49_189}],[],[],[],[],[]}}}}] 
04:21:03.793 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",157,156},{"delta_send",156,158},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",319,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_49_189}],
             [],[],[],...}}}}]}
(g@13.0.0.17)644> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_49_189}],
         [],[],[],[],[]}}}}]
(g@13.0.0.17)645> f(AwMapRes).
ok
(g@13.0.0.17)646> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:05.422"
(g@13.0.0.17)647> 04:21:05.617 [error] C1 propagation "2020-08-06T04:21:05.617"  
04:21:05.617 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:21:05.617 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,159}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:158 
04:21:08.051 [error] Sending find_sub batch [] 
04:21:08.051 [error] Sending find_sub_aq batch [] 
04:21:08.051 [error] batched message propagation "2020-08-06T04:21:08.514" 
04:21:10.866 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:21:10.865" Took=21239 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_20_55_212}],[],[],[],[],[],[],[]}}}}] 
04:21:10.867 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",158,157},{"delta_send",157,159},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",321,0},{"sub_cancel",0,0}] 
04:21:12.618 [error] C1 propagation "2020-08-06T04:21:12.618" 
04:21:12.618 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:21:12.618 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,160}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:159 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_55_212}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)648> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_55_212}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)649> f(AwMapRes).
ok
(g@13.0.0.17)650> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:13.458"
(g@13.0.0.17)651> 04:21:17.865 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:21:17.865" Took=22751 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_07_253}],[]}}}}] 
04:21:17.868 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",159,158},{"delta_send",158,160},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",323,0},{"sub_cancel",0,0}] 
04:21:18.053 [error] Sending find_sub batch [] 
04:21:18.053 [error] Sending find_sub_aq batch [] 
04:21:18.053 [error] batched message propagation "2020-08-06T04:21:18.534" 
04:21:19.620 [error] C1 propagation "2020-08-06T04:21:19.620" 
04:21:19.621 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:21:19.621 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,161}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:160 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)652> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)653> f(AwMapRes).
ok
(g@13.0.0.17)654> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:21.500"
(g@13.0.0.17)655> 04:21:24.878 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:21:24.877" Took=34485 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_13_271}]}}}}] 
04:21:24.878 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",160,159},{"delta_send",159,161},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",325,0},{"sub_cancel",0,0}] 
04:21:26.622 [error] C1 propagation "2020-08-06T04:21:26.622" 
04:21:26.622 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:21:26.622 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,162}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:161 
04:21:27.866 [error] C2 propagation "2020-08-06T04:21:27.866" 
04:21:28.055 [error] Sending find_sub batch [] 
04:21:28.055 [error] Sending find_sub_aq batch [] 
04:21:28.055 [error] batched message propagation "2020-08-06T04:21:28.555" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)656> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)657> f(AwMapRes).
ok
(g@13.0.0.17)658> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:29.536"
(g@13.0.0.17)659> 04:21:31.897 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:21:31.897" Took=32472 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_21_19_295}],[],[],[],[],[],[],[]}}}}] 
04:21:31.897 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",161,160},{"delta_send",160,162},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",327,0},{"sub_cancel",0,0}] 
04:21:33.623 [error] C1 propagation "2020-08-06T04:21:33.623" 
04:21:33.636 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:21:33.637 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,163}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:162 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_21_19_295}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)660> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_19_295}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)661> f(AwMapRes).
ok
(g@13.0.0.17)662> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:37.572"
(g@13.0.0.17)663> 04:21:38.057 [error] Sending find_sub batch [] 
04:21:38.057 [error] Sending find_sub_aq batch [] 
04:21:38.057 [error] batched message propagation "2020-08-06T04:21:38.574" 
04:21:38.884 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:21:38.884" Took=31658 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_25_319}],[],[]}}}}] 
04:21:38.884 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",162,161},{"delta_send",161,163},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",329,0},{"sub_cancel",0,0}] 
04:21:40.624 [error] C1 propagation "2020-08-06T04:21:40.624" 
04:21:40.624 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:21:40.625 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,164}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:163 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)664> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_25_319}],
         [],[]}}}}]
(g@13.0.0.17)665> f(AwMapRes).
ok
(g@13.0.0.17)666> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:45.619"
(g@13.0.0.17)667> 04:21:45.887 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:21:45.887" Took=39403 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_31_340}],[],[],[],[],[],[]}}}}] 
04:21:45.888 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",163,162},{"delta_send",162,164},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",331,0},{"sub_cancel",0,0}] 
04:21:47.625 [error] C1 propagation "2020-08-06T04:21:47.625" 
04:21:47.625 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:21:47.625 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,165}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:164 
04:21:48.059 [error] Sending find_sub batch [] 
04:21:48.059 [error] Sending find_sub_aq batch [] 
04:21:48.059 [error] batched message propagation "2020-08-06T04:21:48.594" 
04:21:52.889 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:21:52.888" Took=39036 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_37_359}],[],[],[],[],[],[]}}}}] 
04:21:52.889 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",164,163},{"delta_send",163,165},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",333,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_21_37_359}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)668> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_37_359}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)669> f(AwMapRes).
ok
(g@13.0.0.17)670> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:53.664"
(g@13.0.0.17)671> 04:21:54.626 [error] C1 propagation "2020-08-06T04:21:54.626"  
04:21:54.627 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:21:54.627 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,166}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:165 
04:21:58.061 [error] Sending find_sub batch [] 
04:21:58.061 [error] Sending find_sub_aq batch [] 
04:21:58.061 [error] batched message propagation "2020-08-06T04:21:58.614" 
04:21:59.884 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:21:59.884" Took=31267 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_21_49_399}],[],[],[],[],[],[],[],[],[]}}}}] 
04:21:59.885 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",165,164},{"delta_send",164,166},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",335,0},{"sub_cancel",0,0}] 
04:22:01.628 [error] C1 propagation "2020-08-06T04:22:01.628" 
04:22:01.629 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:22:01.629 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,167}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:166 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_21_49_399}],
             [],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)672> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_21_49_399}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)673> f(AwMapRes).
ok
(g@13.0.0.17)674> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:01.766"
(g@13.0.0.17)675> 04:22:06.885 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:22:06.885" Took=32044 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_21_55_419}],[],[],[],[],[],[],[]}}}}] 
04:22:06.885 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",166,165},{"delta_send",165,167},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",337,0},{"sub_cancel",0,0}] 
04:22:07.624 [error] C3 propagation "2020-08-06T04:22:07.624" 
04:22:07.867 [error] C2 propagation "2020-08-06T04:22:07.867" 
04:22:08.063 [error] Sending find_sub batch [] 
04:22:08.063 [error] Sending find_sub_aq batch [] 
04:22:08.063 [error] batched message propagation "2020-08-06T04:22:08.634" 
04:22:08.629 [error] C1 propagation "2020-08-06T04:22:08.629" 
04:22:08.674 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:22:08.674 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,168}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:167 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_21_55_419}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)676> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_55_419}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)677> f(AwMapRes).
ok
(g@13.0.0.17)678> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:09.778"
(g@13.0.0.17)679> 04:22:13.886 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:22:13.886" Took=21623 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_22_01_442}],[],[],[]}}}}] 
04:22:13.887 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",167,166},{"delta_send",166,168},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",339,0},{"sub_cancel",0,0}] 
04:22:15.630 [error] C1 propagation "2020-08-06T04:22:15.630" 
04:22:15.630 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:22:15.631 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,169}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:168 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(g@13.0.0.17)680> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_22_01_442}],
         [],[],[]}}}}]
(g@13.0.0.17)681> f(AwMapRes).
ok
(g@13.0.0.17)682> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:17.815"
(g@13.0.0.17)683> 04:22:18.065 [error] Sending find_sub batch [] 
04:22:18.065 [error] Sending find_sub_aq batch [] 
04:22:18.065 [error] batched message propagation "2020-08-06T04:22:18.654" 
04:22:20.881 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:22:20.881" Took=25021 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_22_07_458}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:20.881 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",168,167},{"delta_send",167,169},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",341,0},{"sub_cancel",0,0}] 
04:22:22.631 [error] C1 propagation "2020-08-06T04:22:22.631" 
04:22:22.631 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:22:22.631 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,170}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:169 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_22_07_458}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)684> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_22_07_458}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)685> f(AwMapRes).
ok
(g@13.0.0.17)686> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:25.863"
(g@13.0.0.17)687> 04:22:27.926 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:22:27.926" Took=22985 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_22_13_479}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:27.926 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",169,168},{"delta_send",168,170},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",343,0},{"sub_cancel",0,0}] 
04:22:28.067 [error] Sending find_sub batch [] 
04:22:28.067 [error] Sending find_sub_aq batch [] 
04:22:28.067 [error] batched message propagation "2020-08-06T04:22:28.677" 
04:22:29.632 [error] C1 propagation "2020-08-06T04:22:29.632" 
04:22:29.633 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:22:29.633 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,171}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:170 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_22_13_479}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)688> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_22_13_479}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)689> f(AwMapRes).
ok
(g@13.0.0.17)690> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:33.931"
(g@13.0.0.17)691> 04:22:34.885 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:22:34.885" Took=26611 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_22_19_499}],[],[],[],[],[]}}}}] 
04:22:34.886 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",170,169},{"delta_send",169,171},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",345,0},{"sub_cancel",0,0}] 
04:22:36.634 [error] C1 propagation "2020-08-06T04:22:36.634" 
04:22:36.634 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:22:36.634 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,172}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:171 
04:22:38.069 [error] Sending find_sub batch [] 
04:22:38.069 [error] Sending find_sub_aq batch [] 
04:22:38.069 [error] batched message propagation "2020-08-06T04:22:38.695" 
04:22:41.895 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:22:41.895" Took=34901 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_22_31_098}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_22_31_098}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)692> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_22_31_098}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)693> f(AwMapRes).
ok
(g@13.0.0.17)694> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:41.982"
(g@13.0.0.17)695> 04:22:41.896 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",171,170},{"delta_send",170,172},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",347,0},{"sub_cancel",0,0}] 
04:22:43.635 [error] C1 propagation "2020-08-06T04:22:43.635" 
04:22:43.635 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:22:43.636 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,173}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:172 
04:22:47.868 [error] C2 propagation "2020-08-06T04:22:47.868" 
04:22:48.071 [error] Sending find_sub batch [] 
04:22:48.071 [error] Sending find_sub_aq batch [] 
04:22:48.071 [error] batched message propagation "2020-08-06T04:22:48.715" 
04:22:48.896 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:22:48.896" Took=32486 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_22_37_115}],[]}}}}] 
04:22:48.896 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",172,171},{"delta_send",171,173},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",349,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)696> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)697> f(AwMapRes).
ok
(g@13.0.0.17)698> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:50.140"
(g@13.0.0.17)699> 04:22:50.637 [error] C1 propagation "2020-08-06T04:22:50.637"  
04:22:50.640 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:22:50.640 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,174}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:173 
04:22:51.390 [warning] global: 'g@13.0.0.17' failed to connect to 'a@14.0.0.11'
04:22:51.395 [warning] global: 'g@13.0.0.17' failed to connect to 'a@12.0.0.11'
04:22:51.395 [warning] global: 'g@13.0.0.17' failed to connect to 'a@11.0.0.11'
04:22:51.395 [warning] global: 'g@13.0.0.17' failed to connect to 'a@15.0.0.11'
04:22:51.398 [warning] global: 'g@13.0.0.17' failed to connect to 'a@17.0.0.11'
04:22:51.398 [warning] global: 'g@13.0.0.17' failed to connect to 'a@16.0.0.11'
04:22:51.398 [warning] global: 'g@13.0.0.17' failed to connect to 'a@18.0.0.11'
04:22:51.399 [warning] global: 'g@13.0.0.17' failed to connect to 'a@10.0.0.11'
04:22:51.399 [warning] global: 'g@13.0.0.17' failed to connect to 'a@19.0.0.11'
04:22:55.901 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:22:55.901" Took=35955 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_22_43_136}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:55.901 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",173,172},{"delta_send",172,174},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",351,0},{"sub_cancel",0,0}] 
04:22:57.638 [error] C1 propagation "2020-08-06T04:22:57.638" 
04:22:57.638 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:22:57.638 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,175}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:174 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_22_43_136}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)700> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_22_43_136}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)701> f(AwMapRes).
ok
(g@13.0.0.17)702> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:58.492"
(g@13.0.0.17)703> 04:22:58.073 [error] Sending find_sub batch [] 
04:22:58.073 [error] Sending find_sub_aq batch [] 
04:22:58.073 [error] batched message propagation "2020-08-06T04:22:58.735" 
04:23:02.944 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:23:02.943" Took=54344 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_22_49_159}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:23:02.944 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",174,173},{"delta_send",173,175},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",353,0},{"sub_cancel",0,0}] 
04:23:04.640 [error] C1 propagation "2020-08-06T04:23:04.640" 
04:23:04.641 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:23:04.641 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,176}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:175 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_22_49_159}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)704> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_22_49_159}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)705> f(AwMapRes).
ok
(g@13.0.0.17)706> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:06.892"
(g@13.0.0.17)707> 04:23:08.075 [error] Sending find_sub batch [] 
04:23:08.075 [error] Sending find_sub_aq batch [] 
04:23:08.075 [error] batched message propagation "2020-08-06T04:23:08.754" 
04:23:09.911 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:23:09.911" Took=23273 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_22_55_179}],[],[],[],[],[],[],[],[]}}}}] 
04:23:09.911 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",175,174},{"delta_send",174,176},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",355,0},{"sub_cancel",0,0}] 
04:23:11.641 [error] C1 propagation "2020-08-06T04:23:11.641" 
04:23:11.662 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:23:11.662 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,177}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:176 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_22_55_179}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)708> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_22_55_179}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)709> f(AwMapRes).
ok
(g@13.0.0.17)710> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:14.142"
(g@13.0.0.17)711> 04:23:16.907 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:23:16.907" Took=39116 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_23_01_208}],[],[],[],[],[],[],[]}}}}] 
04:23:16.908 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",176,175},{"delta_send",175,177},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",357,0},{"sub_cancel",0,0}] 
04:23:17.626 [error] C3 propagation "2020-08-06T04:23:17.626" 
04:23:18.077 [error] Sending find_sub batch [] 
04:23:18.077 [error] Sending find_sub_aq batch [] 
04:23:18.077 [error] batched message propagation "2020-08-06T04:23:18.774" 
04:23:18.642 [error] C1 propagation "2020-08-06T04:23:18.642" 
04:23:18.733 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:23:18.733 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,178}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:177 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_23_01_208}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)712> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_01_208}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)713> f(AwMapRes).
ok
(g@13.0.0.17)714> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:22.177"
(g@13.0.0.17)715> 04:23:23.907 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:23:23.906" Took=35507 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_23_13_250}],[],[],[],[],[]}}}}] 
04:23:23.907 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",177,176},{"delta_send",176,178},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",359,0},{"sub_cancel",0,0}] 
04:23:25.643 [error] C1 propagation "2020-08-06T04:23:25.643" 
04:23:25.647 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:23:25.647 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,179}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:178 
04:23:27.869 [error] C2 propagation "2020-08-06T04:23:27.869" 
04:23:28.079 [error] Sending find_sub batch [] 
04:23:28.079 [error] Sending find_sub_aq batch [] 
04:23:28.079 [error] batched message propagation "2020-08-06T04:23:28.796" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_23_13_250}],
             [],[],[],...}}}}]}
(g@13.0.0.17)716> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_13_250}],
         [],[],[],[],[]}}}}]
(g@13.0.0.17)717> f(AwMapRes).
ok
(g@13.0.0.17)718> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:30.216"
(g@13.0.0.17)719> 04:23:30.916 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:23:30.916" Took=34511 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_23_19_275}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:23:30.917 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",178,177},{"delta_send",177,179},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",361,0},{"sub_cancel",0,0}] 
04:23:32.645 [error] C1 propagation "2020-08-06T04:23:32.645" 
04:23:32.666 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:23:32.667 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,180}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:179 
04:23:37.905 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:23:37.905" Took=35081 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_23_25_295}],[],[]}}}}] 
04:23:37.906 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",179,178},{"delta_send",178,180},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",363,0},{"sub_cancel",0,0}] 
04:23:38.101 [error] Sending find_sub batch [] 
04:23:38.101 [error] Sending find_sub_aq batch [] 
04:23:38.102 [error] batched message propagation "2020-08-06T04:23:38.102" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)720> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_25_295}],
         [],[]}}}}]
(g@13.0.0.17)721> f(AwMapRes).
ok
(g@13.0.0.17)722> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:38.257"
(g@13.0.0.17)723> 04:23:39.647 [error] C1 propagation "2020-08-06T04:23:39.647"  
04:23:39.667 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:23:39.668 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,181}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:180 
04:23:44.951 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:23:44.951" Took=25767 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_23_31_312}],[],[],[],[],[],[],[]}}}}] 
04:23:44.952 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",180,179},{"delta_send",179,181},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",365,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_23_31_312}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)724> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_31_312}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)725> f(AwMapRes).
ok
(g@13.0.0.17)726> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:46.294"
(g@13.0.0.17)727> 04:23:46.648 [error] C1 propagation "2020-08-06T04:23:46.648"  
04:23:46.678 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:23:46.678 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,182}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:181 
04:23:48.103 [error] Sending find_sub batch [] 
04:23:48.103 [error] Sending find_sub_aq batch [] 
04:23:48.103 [error] batched message propagation "2020-08-06T04:23:48.103" 
04:23:51.915 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:23:51.915" Took=32315 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_23_37_335}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:23:51.916 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",181,180},{"delta_send",180,182},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",367,0},{"sub_cancel",0,0}] 
04:23:53.651 [error] C1 propagation "2020-08-06T04:23:53.651" 
04:23:53.651 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:23:53.651 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,183}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:182 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_23_37_335}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)728> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_23_37_335}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)729> f(AwMapRes).
ok
(g@13.0.0.17)730> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:54.350"
(g@13.0.0.17)731> 04:23:58.105 [error] Sending find_sub batch [] 
04:23:58.105 [error] Sending find_sub_aq batch [] 
04:23:58.105 [error] batched message propagation "2020-08-06T04:23:58.105" 
04:23:58.900 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:23:58.900" Took=23247 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_23_43_354}],[],[],[],[],[],[]}}}}] 
04:23:58.901 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",182,181},{"delta_send",181,183},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",369,0},{"sub_cancel",0,0}] 
04:24:00.653 [error] C1 propagation "2020-08-06T04:24:00.653" 
04:24:00.653 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:24:00.653 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,184}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:183 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_23_43_354}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)732> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_43_354}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)733> f(AwMapRes).
ok
(g@13.0.0.17)734> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:02.384"
(g@13.0.0.17)735> 04:24:06.002 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:24:06.249" Took=38717 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_23_55_395}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:06.002 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",183,182},{"delta_send",182,184},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",371,0},{"sub_cancel",0,0}] 
04:24:07.655 [error] C1 propagation "2020-08-06T04:24:07.655" 
04:24:07.664 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:24:07.664 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,185}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:184 
04:24:07.871 [error] C2 propagation "2020-08-06T04:24:07.871" 
04:24:08.107 [error] Sending find_sub batch [] 
04:24:08.107 [error] Sending find_sub_aq batch [] 
04:24:08.107 [error] batched message propagation "2020-08-06T04:24:08.107" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_23_55_395}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)736> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_23_55_395}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)737> f(AwMapRes).
ok
(g@13.0.0.17)738> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:10.423"
(g@13.0.0.17)739> 04:24:12.979 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:24:12.979" Took=23604 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_24_01_415}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:12.980 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",184,183},{"delta_send",183,185},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",373,0},{"sub_cancel",0,0}] 
04:24:14.656 [error] C1 propagation "2020-08-06T04:24:14.656" 
04:24:14.713 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:24:14.714 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,186}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:185 
04:24:18.108 [error] Sending find_sub batch [] 
04:24:18.108 [error] Sending find_sub_aq batch [] 
04:24:18.108 [error] batched message propagation "2020-08-06T04:24:18.108" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_24_01_415}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)740> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_24_01_415}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)741> f(AwMapRes).
ok
(g@13.0.0.17)742> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:18.458"
(g@13.0.0.17)743> 04:24:19.994 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:24:19.994" Took=33437 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_24_07_434}],[],[],[],[]}}}}] 
04:24:19.995 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",185,184},{"delta_send",184,186},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",375,0},{"sub_cancel",0,0}] 
04:24:21.657 [error] C1 propagation "2020-08-06T04:24:21.657" 
04:24:21.672 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:24:21.672 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,187}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:186 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_24_07_434}],
             [],[],...}}}}]}
(g@13.0.0.17)744> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_24_07_434}],
         [],[],[],[]}}}}]
(g@13.0.0.17)745> f(AwMapRes).
ok
(g@13.0.0.17)746> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:26.492"
(g@13.0.0.17)747> 04:24:26.982 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:24:26.982" Took=22921 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_24_13_457}],[],[],[],[],[],[],[],[]}}}}] 
04:24:26.986 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",186,185},{"delta_send",185,187},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",377,0},{"sub_cancel",0,0}] 
04:24:27.627 [error] C3 propagation "2020-08-06T04:24:27.627" 
04:24:28.109 [error] Sending find_sub batch [] 
04:24:28.109 [error] Sending find_sub_aq batch [] 
04:24:28.109 [error] batched message propagation "2020-08-06T04:24:28.109" 
04:24:28.658 [error] C1 propagation "2020-08-06T04:24:28.658" 
04:24:28.706 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:24:28.706 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,188}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:187 
04:24:33.995 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:24:33.995" Took=34420 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_24_19_479}],[],[]}}}}] 
04:24:33.996 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",187,186},{"delta_send",186,188},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",379,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)748> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_24_19_479}],
         [],[]}}}}]
(g@13.0.0.17)749> f(AwMapRes).
ok
(g@13.0.0.17)750> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:34.526"
(g@13.0.0.17)751> 04:24:35.659 [error] C1 propagation "2020-08-06T04:24:35.659"  
04:24:35.674 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:24:35.674 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,189}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:188 
04:24:38.111 [error] Sending find_sub batch [] 
04:24:38.111 [error] Sending find_sub_aq batch [] 
04:24:38.112 [error] batched message propagation "2020-08-06T04:24:38.111" 
04:24:41.001 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:24:41.131" Took=34485 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_24_25_499}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:41.002 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",188,187},{"delta_send",187,189},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",381,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_24_25_499}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)752> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_24_25_499}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)753> f(AwMapRes).
ok
(g@13.0.0.17)754> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:42.563"
(g@13.0.0.17)755> 04:24:42.661 [error] C1 propagation "2020-08-06T04:24:42.661"  
04:24:42.693 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:24:42.693 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,190}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:189 
04:24:47.873 [error] C2 propagation "2020-08-06T04:24:47.873" 
04:24:48.023 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:24:48.236" Took=56060 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_24_37_543}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:48.024 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",189,188},{"delta_send",188,190},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",383,0},{"sub_cancel",0,0}] 
04:24:48.113 [error] Sending find_sub batch [] 
04:24:48.113 [error] Sending find_sub_aq batch [] 
04:24:48.113 [error] batched message propagation "2020-08-06T04:24:48.113" 
04:24:49.663 [error] C1 propagation "2020-08-06T04:24:49.663" 
04:24:49.665 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:24:49.665 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,191}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:190 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_24_37_543}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)756> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_24_37_543}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)757> f(AwMapRes).
ok
(g@13.0.0.17)758> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:50.603"
(g@13.0.0.17)759> 04:24:55.009 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:24:55.986" Took=39788 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_24_43_563}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:55.010 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",190,189},{"delta_send",189,191},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",385,0},{"sub_cancel",0,0}] 
04:24:56.665 [error] C1 propagation "2020-08-06T04:24:56.665" 
04:24:56.665 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:24:56.665 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,192}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:191 
04:24:58.115 [error] Sending find_sub batch [] 
04:24:58.115 [error] Sending find_sub_aq batch [] 
04:24:58.115 [error] batched message propagation "2020-08-06T04:24:58.115" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_24_43_563}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)760> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_24_43_563}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)761> f(AwMapRes).
ok
(g@13.0.0.17)762> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:58.642"
(g@13.0.0.17)763> 04:25:02.004 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:25:02.452" Took=33546 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_24_49_586}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:25:02.004 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",191,190},{"delta_send",190,192},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",387,0},{"sub_cancel",0,0}] 
04:25:03.666 [error] C1 propagation "2020-08-06T04:25:03.666" 
04:25:03.666 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:25:03.666 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,193}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:192 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_24_49_586}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)764> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_24_49_586}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)765> f(AwMapRes).
ok
(g@13.0.0.17)766> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:06.680"
(g@13.0.0.17)767> 04:25:08.117 [error] Sending find_sub batch [] 
04:25:08.117 [error] Sending find_sub_aq batch [] 
04:25:08.117 [error] batched message propagation "2020-08-06T04:25:08.117" 
04:25:08.993 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:25:08.993" Took=23899 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_24_55_609}],[],[],[],[],[],[],[]}}}}] 
04:25:08.993 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",192,191},{"delta_send",191,193},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",389,0},{"sub_cancel",0,0}] 
04:25:10.667 [error] C1 propagation "2020-08-06T04:25:10.667" 
04:25:10.667 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:25:10.667 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,194}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:193 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_24_55_609}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)768> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_24_55_609}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)769> f(AwMapRes).
ok
(g@13.0.0.17)770> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:14.711"
(g@13.0.0.17)771> 04:25:16.005 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:25:16.498" Took=34672 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_01_627}],[],[],[],[],[]}}}}] 
04:25:16.005 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",193,192},{"delta_send",192,194},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",391,0},{"sub_cancel",0,0}] 
04:25:17.668 [error] C1 propagation "2020-08-06T04:25:17.668" 
04:25:17.668 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:25:17.668 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,195}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:194 
04:25:18.119 [error] Sending find_sub batch [] 
04:25:18.119 [error] Sending find_sub_aq batch [] 
04:25:18.119 [error] batched message propagation "2020-08-06T04:25:18.119" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_25_01_627}],
             [],[],[],...}}}}]}
(g@13.0.0.17)772> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_25_01_627}],
         [],[],[],[],[]}}}}]
(g@13.0.0.17)773> f(AwMapRes).
ok
(g@13.0.0.17)774> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:22.744"
(g@13.0.0.17)775> 04:25:22.997 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:25:22.997" Took=23134 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_07_644}],[],[],[],[],[],[]}}}}] 
04:25:22.998 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",194,193},{"delta_send",193,195},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",393,0},{"sub_cancel",0,0}] 
04:25:24.669 [error] C1 propagation "2020-08-06T04:25:24.669" 
04:25:24.673 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:25:24.673 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,196}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:195 
04:25:27.875 [error] C2 propagation "2020-08-06T04:25:27.875" 
04:25:28.120 [error] Sending find_sub batch [] 
04:25:28.120 [error] Sending find_sub_aq batch [] 
04:25:28.120 [error] batched message propagation "2020-08-06T04:25:28.120" 
04:25:30.018 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:25:30.184" Took=44897 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_13_667}],[],[],[],[]}}}}] 
04:25:30.018 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",195,194},{"delta_send",194,196},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",395,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_25_13_667}],
             [],[],...}}}}]}
(g@13.0.0.17)776> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_25_13_667}],
         [],[],[],[]}}}}]
(g@13.0.0.17)777> f(AwMapRes).
ok
(g@13.0.0.17)778> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:30.777"
(g@13.0.0.17)779> 04:25:31.671 [error] C1 propagation "2020-08-06T04:25:31.671"  
04:25:31.671 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:25:31.671 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,197}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:196 
04:25:37.012 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:25:37.123" Took=34277 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_25_25_705}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:25:37.012 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",196,195},{"delta_send",195,197},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",397,0},{"sub_cancel",0,0}] 
04:25:37.628 [error] C3 propagation "2020-08-06T04:25:37.628" 
04:25:38.121 [error] Sending find_sub batch [] 
04:25:38.121 [error] Sending find_sub_aq batch [] 
04:25:38.121 [error] batched message propagation "2020-08-06T04:25:38.121" 
04:25:38.673 [error] C1 propagation "2020-08-06T04:25:38.673" 
04:25:38.673 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_25_25_705}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)780> 04:25:38.673 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,198}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:197 
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_25_25_705}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)781> f(AwMapRes).
ok
(g@13.0.0.17)782> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:38.818"
(g@13.0.0.17)783> 04:25:44.013 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:25:44.134" Took=35202 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_25_31_727}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:25:44.013 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",197,196},{"delta_send",196,198},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",399,0},{"sub_cancel",0,0}] 
04:25:45.674 [error] C1 propagation "2020-08-06T04:25:45.674" 
04:25:45.674 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:25:45.674 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,199}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:198 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_25_31_727}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)784> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_25_31_727}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)785> f(AwMapRes).
ok
(g@13.0.0.17)786> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:46.856"
(g@13.0.0.17)787> 04:25:48.123 [error] Sending find_sub batch [] 
04:25:48.123 [error] Sending find_sub_aq batch [] 
04:25:48.123 [error] batched message propagation "2020-08-06T04:25:48.123" 
04:25:51.012 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:25:51.123" Took=34506 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_25_37_747}],[],[],[],[],[],[],[],[]}}}}] 
04:25:51.012 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",198,197},{"delta_send",197,199},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",401,0},{"sub_cancel",0,0}] 
04:25:52.675 [error] C1 propagation "2020-08-06T04:25:52.675" 
04:25:52.693 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:25:52.694 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,200}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:199 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_25_37_747}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)788> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_25_37_747}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)789> f(AwMapRes).
ok
(g@13.0.0.17)790> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:54.894"
(g@13.0.0.17)791> 04:25:58.010 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:25:58.104" Took=25266 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_43_767}],[],[],[],[],[],[]}}}}] 
04:25:58.010 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",199,198},{"delta_send",198,200},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",403,0},{"sub_cancel",0,0}] 
04:25:58.130 [error] Sending find_sub batch [] 
04:25:58.130 [error] Sending find_sub_aq batch [] 
04:25:58.130 [error] batched message propagation "2020-08-06T04:25:58.130" 
04:25:59.677 [error] C1 propagation "2020-08-06T04:25:59.677" 
04:25:59.703 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:25:59.703 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,201}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:200 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_25_43_767}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)792> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_25_43_767}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)793> f(AwMapRes).
ok
(g@13.0.0.17)794> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:02.928"
(g@13.0.0.17)795> 04:26:05.003 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:26:05.283" Took=22189 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_49_787}]}}}}] 
04:26:05.003 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",200,199},{"delta_send",199,201},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",405,0},{"sub_cancel",0,0}] 
04:26:06.679 [error] C1 propagation "2020-08-06T04:26:06.679" 
04:26:06.679 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:26:06.679 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,202}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:201 
04:26:07.878 [error] C2 propagation "2020-08-06T04:26:07.878" 
04:26:08.132 [error] Sending find_sub batch [] 
04:26:08.132 [error] Sending find_sub_aq batch [] 
04:26:08.132 [error] batched message propagation "2020-08-06T04:26:08.132" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)796> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)797> f(AwMapRes).
ok
(g@13.0.0.17)798> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:10.974"
(g@13.0.0.17)799> 04:26:12.019 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:26:12.196" Took=36352 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_55_807}],[],[],[],[],[]}}}}] 
04:26:12.020 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",201,200},{"delta_send",200,202},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",407,0},{"sub_cancel",0,0}] 
04:26:13.681 [error] C1 propagation "2020-08-06T04:26:13.681" 
04:26:13.681 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:26:13.681 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,203}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:202 
04:26:18.134 [error] Sending find_sub batch [] 
04:26:18.134 [error] Sending find_sub_aq batch [] 
04:26:18.134 [error] batched message propagation "2020-08-06T04:26:18.134" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_25_55_807}],
             [],[],[],...}}}}]}
(g@13.0.0.17)800> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_25_55_807}],
         [],[],[],[],[]}}}}]
(g@13.0.0.17)801> f(AwMapRes).
ok
(g@13.0.0.17)802> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:19.960"
(g@13.0.0.17)803> 04:26:19.137 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:26:19.137" Took=30713 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_26_07_854}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:26:19.137 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",202,201},{"delta_send",201,203},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",409,0},{"sub_cancel",0,0}] 
04:26:20.682 [error] C1 propagation "2020-08-06T04:26:20.682" 
04:26:20.682 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:26:20.682 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,204}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:203 
04:26:26.015 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:26:26.148" Took=28048 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_26_13_875}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:26:26.015 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",203,202},{"delta_send",202,204},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",411,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_26_13_875}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)804> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_26_13_875}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)805> f(AwMapRes).
ok
(g@13.0.0.17)806> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:27.459"
(g@13.0.0.17)807> 04:26:27.684 [error] C1 propagation "2020-08-06T04:26:27.684"  
04:26:27.684 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:26:27.684 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,205}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:204 
04:26:28.136 [error] Sending find_sub batch [] 
04:26:28.136 [error] Sending find_sub_aq batch [] 
04:26:28.136 [error] batched message propagation "2020-08-06T04:26:28.136" 
04:26:33.020 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:26:33.206" Took=32842 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_26_19_895}],[],[],[],[],[],[],[]}}}}] 
04:26:33.021 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",204,203},{"delta_send",203,205},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",413,0},{"sub_cancel",0,0}] 
04:26:34.685 [error] C1 propagation "2020-08-06T04:26:34.685" 
04:26:34.725 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:26:34.725 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,206}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:205 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_26_19_895}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)808> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_26_19_895}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)809> f(AwMapRes).
ok
(g@13.0.0.17)810> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:35.813"
(g@13.0.0.17)811> 04:26:38.138 [error] Sending find_sub batch [] 
04:26:38.138 [error] Sending find_sub_aq batch [] 
04:26:38.138 [error] batched message propagation "2020-08-06T04:26:38.138" 
04:26:40.042 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:26:40.419" Took=46638 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_26_25_914}],[],[],[],[],[]}}}}] 
04:26:40.042 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",205,204},{"delta_send",204,206},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",415,0},{"sub_cancel",0,0}] 
04:26:41.686 [error] C1 propagation "2020-08-06T04:26:41.686" 
04:26:41.686 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:26:41.686 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,207}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:206 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_26_25_914}],
             [],[],[],...}}}}]}
(g@13.0.0.17)812> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_26_25_914}],
         [],[],[],[],[]}}}}]
(g@13.0.0.17)813> f(AwMapRes).
ok
(g@13.0.0.17)814> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:43.119"
(g@13.0.0.17)815> 04:26:47.022 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:26:47.226" Took=26969 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_26_31_935}],[],[]}}}}] 
04:26:47.023 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",206,205},{"delta_send",205,207},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",417,0},{"sub_cancel",0,0}] 
04:26:47.629 [error] C3 propagation "2020-08-06T04:26:47.629" 
04:26:47.879 [error] C2 propagation "2020-08-06T04:26:47.879" 
04:26:48.139 [error] Sending find_sub batch [] 
04:26:48.139 [error] Sending find_sub_aq batch [] 
04:26:48.139 [error] batched message propagation "2020-08-06T04:26:48.139" 
04:26:48.688 [error] C1 propagation "2020-08-06T04:26:48.688" 
04:26:48.718 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:26:48.718 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,208}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:207 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@13.0.0.17)816> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_26_31_935}],
         [],[]}}}}]
(g@13.0.0.17)817> f(AwMapRes).
ok
(g@13.0.0.17)818> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:51.154"
(g@13.0.0.17)819> 04:26:54.025 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:26:54.250" Took=31245 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_26_37_959}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:26:54.025 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",207,206},{"delta_send",206,208},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",419,0},{"sub_cancel",0,0}] 
04:26:55.689 [error] C1 propagation "2020-08-06T04:26:55.689" 
04:26:55.723 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:26:55.723 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,209}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:208 
04:26:58.140 [error] Sending find_sub batch [] 
04:26:58.140 [error] Sending find_sub_aq batch [] 
04:26:58.140 [error] batched message propagation "2020-08-06T04:26:58.140" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_26_37_959}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)820> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_26_37_959}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)821> f(AwMapRes).
ok
(g@13.0.0.17)822> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:59.190"
(g@13.0.0.17)823> 04:27:01.020 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:27:01.204" Took=27584 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_26_50_003}],[]}}}}] 
04:27:01.020 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",208,207},{"delta_send",207,209},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",421,0},{"sub_cancel",0,0}] 
04:27:02.692 [error] C1 propagation "2020-08-06T04:27:02.691" 
04:27:02.748 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:27:02.748 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,210}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:209 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)824> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)825> f(AwMapRes).
ok
(g@13.0.0.17)826> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:07.231"
(g@13.0.0.17)827> 04:27:08.063 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:27:08.635" Took=63751 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_26_56_026}],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:08.064 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",209,208},{"delta_send",208,210},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",423,0},{"sub_cancel",0,0}] 
04:27:08.142 [error] Sending find_sub batch [] 
04:27:08.142 [error] Sending find_sub_aq batch [] 
04:27:08.142 [error] batched message propagation "2020-08-06T04:27:08.142" 
04:27:09.693 [error] C1 propagation "2020-08-06T04:27:09.693" 
04:27:09.693 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:27:09.693 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,211}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:210 
04:27:15.029 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:27:15.291" Took=31278 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_27_02_047}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:15.030 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",210,209},{"delta_send",209,211},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",425,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_27_02_047}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)828> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_27_02_047}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)829> f(AwMapRes).
ok
(g@13.0.0.17)830> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:15.272"
(g@13.0.0.17)831> 04:27:16.695 [error] C1 propagation "2020-08-06T04:27:16.695"  
04:27:16.696 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:27:16.696 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,212}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:211 
04:27:18.143 [error] Sending find_sub batch [] 
04:27:18.145 [error] Sending find_sub_aq batch [] 
04:27:18.145 [error] batched message propagation "2020-08-06T04:27:18.145" 
04:27:22.019 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:27:22.193" Took=23119 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_27_08_067}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:22.020 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",211,210},{"delta_send",210,212},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",427,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_27_08_067}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)832> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_27_08_067}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)833> f(AwMapRes).
ok
(g@13.0.0.17)834> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:23.309"
(g@13.0.0.17)835> 04:27:23.697 [error] C1 propagation "2020-08-06T04:27:23.697"  
04:27:23.697 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:27:23.698 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,213}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:212 
04:27:27.880 [error] C2 propagation "2020-08-06T04:27:27.880" 
04:27:28.146 [error] Sending find_sub batch [] 
04:27:28.146 [error] Sending find_sub_aq batch [] 
04:27:28.146 [error] batched message propagation "2020-08-06T04:27:28.146" 
04:27:29.034 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:27:29.341" Took=32018 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_27_14_092}],[],[],[],[]}}}}] 
04:27:29.034 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",212,211},{"delta_send",211,213},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",429,0},{"sub_cancel",0,0}] 
04:27:30.699 [error] C1 propagation "2020-08-06T04:27:30.699" 
04:27:30.701 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:27:30.701 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,214}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:213 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_27_14_092}],
             [],[],...}}}}]}
(g@13.0.0.17)836> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_27_14_092}],
         [],[],[],[]}}}}]
(g@13.0.0.17)837> f(AwMapRes).
ok
(g@13.0.0.17)838> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:31.343"
(g@13.0.0.17)839> 04:27:36.082 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:27:36.822" Took=36859 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_27_20_111}],[],[],[],[],[],[]}}}}] 
04:27:36.082 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",213,212},{"delta_send",212,214},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",431,0},{"sub_cancel",0,0}] 
04:27:37.700 [error] C1 propagation "2020-08-06T04:27:37.700" 
04:27:37.700 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:27:37.700 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,215}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:214 
04:27:38.148 [error] Sending find_sub batch [] 
04:27:38.148 [error] Sending find_sub_aq batch [] 
04:27:38.148 [error] batched message propagation "2020-08-06T04:27:38.148" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_27_20_111}],
             [],[],[],[],...}}}}]}
(g@13.0.0.17)840> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_27_20_111}],
         [],[],[],[],[],[]}}}}]
(g@13.0.0.17)841> f(AwMapRes).
ok
(g@13.0.0.17)842> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:39.378"
(g@13.0.0.17)843> 04:27:43.029 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:27:43.291" Took=27268 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_27_26_134}],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:43.030 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",214,213},{"delta_send",213,215},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",433,0},{"sub_cancel",0,0}] 
04:27:44.701 [error] C1 propagation "2020-08-06T04:27:44.701" 
04:27:44.701 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:27:44.701 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,216}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:215 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_27_26_134}],
             [],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)844> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_27_26_134}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)845> f(AwMapRes).
ok
(g@13.0.0.17)846> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:47.415"
(g@13.0.0.17)847> 04:27:48.150 [error] Sending find_sub batch [] 
04:27:48.150 [error] Sending find_sub_aq batch [] 
04:27:48.150 [error] batched message propagation "2020-08-06T04:27:48.150" 
04:27:50.038 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:27:50.385" Took=34312 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_27_37_825}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:50.039 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",215,214},{"delta_send",214,216},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",435,0},{"sub_cancel",0,0}] 
04:27:51.702 [error] C1 propagation "2020-08-06T04:27:51.702" 
04:27:51.702 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:27:51.702 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,217}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:216 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_27_37_825}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)848> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_27_37_825}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)849> f(AwMapRes).
ok
(g@13.0.0.17)850> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:55.460"
(g@13.0.0.17)851> 04:27:57.046 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:27:57.463" Took=41966 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_27_43_847}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:57.046 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",216,215},{"delta_send",215,217},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",437,0},{"sub_cancel",0,0}] 
04:27:57.631 [error] C3 propagation "2020-08-06T04:27:57.631" 
04:27:58.152 [error] Sending find_sub batch [] 
04:27:58.152 [error] Sending find_sub_aq batch [] 
04:27:58.152 [error] batched message propagation "2020-08-06T04:27:58.152" 
04:27:58.703 [error] C1 propagation "2020-08-06T04:27:58.703" 
04:27:58.734 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:27:58.734 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,218}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:217 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_27_43_847}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)852> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_27_43_847}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)853> f(AwMapRes).
ok
(g@13.0.0.17)854> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:03.498"
(g@13.0.0.17)855> 04:28:04.041 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:28:04.410" Took=34214 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_27_49_871}],[],[],[],[],[]}}}}] 
04:28:04.041 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",217,216},{"delta_send",216,218},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",439,0},{"sub_cancel",0,0}] 
04:28:05.705 [error] C1 propagation "2020-08-06T04:28:05.705" 
04:28:05.736 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:28:05.736 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,219}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:218 
04:28:07.881 [error] C2 propagation "2020-08-06T04:28:07.881" 
04:28:08.154 [error] Sending find_sub batch [] 
04:28:08.154 [error] Sending find_sub_aq batch [] 
04:28:08.154 [error] batched message propagation "2020-08-06T04:28:08.154" 
04:28:11.032 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:28:11.321" Took=26323 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_27_55_892}],[],[],[],[],[],[],[],[]}}}}] 
04:28:11.032 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",218,217},{"delta_send",217,219},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",441,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_27_55_892}],
             [],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)856> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_27_55_892}],
         [],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)857> f(AwMapRes).
ok
(g@13.0.0.17)858> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:11.539"
(g@13.0.0.17)859> 04:28:12.707 [error] C1 propagation "2020-08-06T04:28:12.707"  
04:28:12.724 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:28:12.724 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,220}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:219 
04:28:18.030 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:28:18.303" Took=23359 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_28_01_923}],[],[],[],[]}}}}] 
04:28:18.031 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",219,218},{"delta_send",218,220},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",443,0},{"sub_cancel",0,0}] 
04:28:18.198 [error] Sending find_sub batch [] 
04:28:18.199 [error] Sending find_sub_aq batch [] 
04:28:18.199 [error] batched message propagation "2020-08-06T04:28:18.199" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_28_01_923}],
             [],[],...}}}}]}
(g@13.0.0.17)860> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_28_01_923}],
         [],[],[],[]}}}}]
(g@13.0.0.17)861> f(AwMapRes).
ok
(g@13.0.0.17)862> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:19.575"
(g@13.0.0.17)863> 04:28:19.708 [error] C1 propagation "2020-08-06T04:28:19.708"  
04:28:19.745 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:28:19.745 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,221}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:220 
04:28:25.056 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:28:25.563" Took=45694 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_28_13_963}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:28:25.056 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",220,219},{"delta_send",219,221},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",445,0},{"sub_cancel",0,0}] 
04:28:26.709 [error] C1 propagation "2020-08-06T04:28:26.709" 
04:28:26.709 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:28:26.709 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,222}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:221 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_28_13_963}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)864> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_28_13_963}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)865> f(AwMapRes).
ok
(g@13.0.0.17)866> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:27.617"
(g@13.0.0.17)867> 04:28:28.200 [error] Sending find_sub batch [] 
04:28:28.200 [error] Sending find_sub_aq batch [] 
04:28:28.200 [error] batched message propagation "2020-08-06T04:28:28.200" 
04:28:32.044 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:28:32.439" Took=33493 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_28_19_984}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:28:32.044 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",221,220},{"delta_send",220,222},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",447,0},{"sub_cancel",0,0}] 
04:28:33.710 [error] C1 propagation "2020-08-06T04:28:33.710" 
04:28:33.710 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:28:33.710 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,223}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:222 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_28_19_984}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)868> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_28_19_984}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)869> f(AwMapRes).
ok
(g@13.0.0.17)870> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:35.653"
(g@13.0.0.17)871> 04:28:38.201 [error] Sending find_sub batch [] 
04:28:38.201 [error] Sending find_sub_aq batch [] 
04:28:38.201 [error] batched message propagation "2020-08-06T04:28:38.201" 
04:28:39.048 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:28:39.480" Took=34786 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_28_26_007}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:28:39.048 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",222,221},{"delta_send",221,223},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",449,0},{"sub_cancel",0,0}] 
04:28:40.711 [error] C1 propagation "2020-08-06T04:28:40.711" 
04:28:40.711 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:28:40.711 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,224}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:223 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_28_26_007}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)872> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_28_26_007}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)873> f(AwMapRes).
ok
(g@13.0.0.17)874> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:43.690"
(g@13.0.0.17)875> 04:28:46.039 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:28:46.392" Took=21221 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_28_32_031}],[],[],[],[]}}}}] 
04:28:46.039 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",223,222},{"delta_send",222,224},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",451,0},{"sub_cancel",0,0}] 
04:28:47.712 [error] C1 propagation "2020-08-06T04:28:47.712" 
04:28:47.749 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:28:47.750 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,225}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:224 
04:28:47.882 [error] C2 propagation "2020-08-06T04:28:47.882" 
04:28:48.202 [error] Sending find_sub batch [] 
04:28:48.202 [error] Sending find_sub_aq batch [] 
04:28:48.202 [error] batched message propagation "2020-08-06T04:28:48.202" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_28_32_031}],
             [],[],...}}}}]}
(g@13.0.0.17)876> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_28_32_031}],
         [],[],[],[]}}}}]
(g@13.0.0.17)877> f(AwMapRes).
ok
(g@13.0.0.17)878> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:51.729"
(g@13.0.0.17)879> 04:28:53.059 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:28:53.592" Took=41270 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_28_38_051}],[],[],[],[],[],[],[]}}}}] 
04:28:53.059 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",224,223},{"delta_send",223,225},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",453,0},{"sub_cancel",0,0}] 
04:28:54.713 [error] C1 propagation "2020-08-06T04:28:54.713" 
04:28:54.742 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:28:54.742 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,226}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:225 
04:28:58.203 [error] Sending find_sub batch [] 
04:28:58.203 [error] Sending find_sub_aq batch [] 
04:28:58.203 [error] batched message propagation "2020-08-06T04:28:58.203" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_28_38_051}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)880> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_28_38_051}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)881> f(AwMapRes).
ok
(g@13.0.0.17)882> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:59.773"
(g@13.0.0.17)883> 04:29:00.045 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:29:00.457" Took=25531 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_28_44_071}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:29:00.046 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",225,224},{"delta_send",224,226},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",455,0},{"sub_cancel",0,0}] 
04:29:01.714 [error] C1 propagation "2020-08-06T04:29:01.714" 
04:29:01.734 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:29:01.734 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,227}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:226 
04:29:07.055 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:29:07.547" Took=30225 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_28_56_117}],[],[],[],[]}}}}] 
04:29:07.055 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",226,225},{"delta_send",225,227},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",457,0},{"sub_cancel",0,0}] 
04:29:07.633 [error] C3 propagation "2020-08-06T04:29:07.633" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_28_56_117}],
             [],[],...}}}}]}
(g@13.0.0.17)884> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_28_56_117}],
         [],[],[],[]}}}}]
(g@13.0.0.17)885> f(AwMapRes).
ok
(g@13.0.0.17)886> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:07.815"
(g@13.0.0.17)887> 04:29:08.205 [error] Sending find_sub batch [] 
04:29:08.205 [error] Sending find_sub_aq batch [] 
04:29:08.205 [error] batched message propagation "2020-08-06T04:29:08.205" 
04:29:08.716 [error] C1 propagation "2020-08-06T04:29:08.716" 
04:29:08.781 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:29:08.781 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,228}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:227 
04:29:14.071 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:29:14.709" Took=24082 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_02_135}],[]}}}}] 
04:29:14.071 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",227,226},{"delta_send",226,228},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",459,0},{"sub_cancel",0,0}] 
04:29:15.718 [error] C1 propagation "2020-08-06T04:29:15.718" 
04:29:15.755 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:29:15.755 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,229}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:228 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)888> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@13.0.0.17)889> f(AwMapRes).
ok
(g@13.0.0.17)890> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:15.872"
(g@13.0.0.17)891> 04:29:18.206 [error] Sending find_sub batch [] 
04:29:18.206 [error] Sending find_sub_aq batch [] 
04:29:18.206 [error] batched message propagation "2020-08-06T04:29:18.206" 
04:29:21.056 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:29:21.565" Took=34261 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_29_08_155}],[],[],[],[],[],[],[]}}}}] 
04:29:21.056 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",228,227},{"delta_send",227,229},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",461,0},{"sub_cancel",0,0}] 
04:29:22.719 [error] C1 propagation "2020-08-06T04:29:22.719" 
04:29:22.737 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:29:22.737 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,230}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:229 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_29_08_155}],
             [],[],[],[],[],...}}}}]}
(g@13.0.0.17)892> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_29_08_155}],
         [],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)893> f(AwMapRes).
ok
(g@13.0.0.17)894> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:23.907"
(g@13.0.0.17)895> 04:29:27.884 [error] C2 propagation "2020-08-06T04:29:27.883"  
04:29:28.061 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:29:28.611" Took=32929 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_29_14_175}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:29:28.061 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",229,228},{"delta_send",228,230},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",463,0},{"sub_cancel",0,0}] 
04:29:28.207 [error] Sending find_sub batch [] 
04:29:28.207 [error] Sending find_sub_aq batch [] 
04:29:28.207 [error] batched message propagation "2020-08-06T04:29:28.207" 
04:29:29.721 [error] C1 propagation "2020-08-06T04:29:29.721" 
04:29:29.745 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:29:29.745 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,231}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:230 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_29_14_175}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)896> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_29_14_175}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)897> f(AwMapRes).
ok
(g@13.0.0.17)898> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:31.943"
(g@13.0.0.17)899> 04:29:35.061 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:29:35.612" Took=34870 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_20_199}],[],[],[],[]}}}}] 
04:29:35.061 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",230,229},{"delta_send",229,231},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",465,0},{"sub_cancel",0,0}] 
04:29:36.722 [error] C1 propagation "2020-08-06T04:29:36.722" 
04:29:36.732 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:29:36.732 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,232}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:231 
04:29:38.209 [error] Sending find_sub batch [] 
04:29:38.209 [error] Sending find_sub_aq batch [] 
04:29:38.209 [error] batched message propagation "2020-08-06T04:29:38.209" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_29_20_199}],
             [],[],...}}}}]}
(g@13.0.0.17)900> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_29_20_199}],
         [],[],[],[]}}}}]
(g@13.0.0.17)901> f(AwMapRes).
ok
(g@13.0.0.17)902> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:39.977"
(g@13.0.0.17)903> 04:29:42.062 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:29:42.622" Took=34299 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_29_26_220}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:29:42.063 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",231,230},{"delta_send",230,232},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",467,0},{"sub_cancel",0,0}] 
04:29:43.723 [error] C1 propagation "2020-08-06T04:29:43.723" 
04:29:43.747 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:29:43.747 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,233}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:232 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_29_26_220}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)904> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_29_26_220}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)905> f(AwMapRes).
ok
(g@13.0.0.17)906> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:48.789"
(g@13.0.0.17)907> 04:29:48.211 [error] Sending find_sub batch [] 
04:29:48.211 [error] Sending find_sub_aq batch [] 
04:29:48.211 [error] batched message propagation "2020-08-06T04:29:48.211" 
04:29:49.068 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:29:49.680" Took=30634 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_29_38_263}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:29:49.119 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",232,231},{"delta_send",231,233},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",469,0},{"sub_cancel",0,0}] 
04:29:50.725 [error] C1 propagation "2020-08-06T04:29:50.725" 
04:29:50.726 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:29:50.726 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,234}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:233 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_29_38_263}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)908> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_29_38_263}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@13.0.0.17)909> f(AwMapRes).
ok
(g@13.0.0.17)910> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:56.615"
(g@13.0.0.17)911> 04:29:56.071 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:29:56.716" Took=35990 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_44_287}],[],[],[],[]}}}}] 
04:29:56.072 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",233,232},{"delta_send",232,234},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",471,0},{"sub_cancel",0,0}] 
04:29:57.727 [error] C1 propagation "2020-08-06T04:29:57.727" 
04:29:57.727 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:29:57.727 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,235}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:234 
04:29:58.213 [error] Sending find_sub batch [] 
04:29:58.213 [error] Sending find_sub_aq batch [] 
04:29:58.213 [error] batched message propagation "2020-08-06T04:29:58.213" 
04:30:03.067 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:30:03.673" Took=34233 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_50_311}]}}}}] 
04:30:03.068 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",234,233},{"delta_send",233,235},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",473,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@13.0.0.17)912> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@13.0.0.17)913> f(AwMapRes).
ok
(g@13.0.0.17)914> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:30:04.960"
(g@13.0.0.17)915> 04:30:04.729 [error] C1 propagation "2020-08-06T04:30:04.729"  
04:30:04.729 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:30:04.729 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,236}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:235 
04:30:07.885 [error] C2 propagation "2020-08-06T04:30:07.885" 
04:30:08.215 [error] Sending find_sub batch [] 
04:30:08.215 [error] Sending find_sub_aq batch [] 
04:30:08.215 [error] batched message propagation "2020-08-06T04:30:08.215" 
04:30:10.066 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:30:10.664" Took=30330 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_29_56_332}],[],[],[],[],[],[],[],[]}}}}] 
04:30:10.067 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",235,234},{"delta_send",234,236},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",475,0},{"sub_cancel",0,0}] 
04:30:11.730 [error] C1 propagation "2020-08-06T04:30:11.730" 
04:30:11.780 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:30:11.780 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,237}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:236 
04:30:17.075 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:30:17.751" Took=38842 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_30_02_351}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:17.075 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",236,235},{"delta_send",235,237},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",477,0},{"sub_cancel",0,0}] 
04:30:17.634 [error] C3 propagation "2020-08-06T04:30:17.634" 
04:30:18.216 [error] Sending find_sub batch [] 
04:30:18.216 [error] Sending find_sub_aq batch [] 
04:30:18.216 [error] batched message propagation "2020-08-06T04:30:18.216" 
04:30:18.732 [error] C1 propagation "2020-08-06T04:30:18.732" 
04:30:18.795 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:30:18.795 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,238}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:237 
04:30:24.084 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:30:24.839" Took=35751 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_30_08_375}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:24.084 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",237,236},{"delta_send",236,238},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",479,0},{"sub_cancel",0,0}] 
04:30:25.734 [error] C1 propagation "2020-08-06T04:30:25.734" 
04:30:25.777 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:30:25.777 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,239}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:238 
04:30:28.218 [error] Sending find_sub batch [] 
04:30:28.218 [error] Sending find_sub_aq batch [] 
04:30:28.218 [error] batched message propagation "2020-08-06T04:30:28.218" 
04:30:31.191 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:30:31.191" Took=25946 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_20_429}],[],[],[],[]}}}}] 
04:30:31.191 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",238,237},{"delta_send",237,239},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",481,0},{"sub_cancel",0,0}] 
04:30:32.735 [error] C1 propagation "2020-08-06T04:30:32.735" 
04:30:32.736 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:30:32.736 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,240}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:239 
04:30:38.073 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:30:38.733" Took=31368 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_30_26_462}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:38.073 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",239,238},{"delta_send",238,240},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",483,0},{"sub_cancel",0,0}] 
04:30:38.246 [error] Sending find_sub batch [] 
04:30:38.246 [error] Sending find_sub_aq batch [] 
04:30:38.246 [error] batched message propagation "2020-08-06T04:30:38.246" 
04:30:39.737 [error] C1 propagation "2020-08-06T04:30:39.737" 
04:30:39.783 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:30:39.783 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,241}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:240 
04:30:45.082 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:30:45.824" Took=35242 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_32_499}],[],[],[],[],[]}}}}] 
04:30:45.083 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",240,239},{"delta_send",239,241},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",485,0},{"sub_cancel",0,0}] 
04:30:46.738 [error] C1 propagation "2020-08-06T04:30:46.738" 
04:30:46.757 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:30:46.757 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,242}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:241 
04:30:47.887 [error] C2 propagation "2020-08-06T04:30:47.887" 
04:30:48.247 [error] Sending find_sub batch [] 
04:30:48.247 [error] Sending find_sub_aq batch [] 
04:30:48.247 [error] batched message propagation "2020-08-06T04:30:48.247" 
04:30:52.081 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:30:52.813" Took=40854 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_30_38_530}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:52.081 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",241,240},{"delta_send",240,242},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",487,0},{"sub_cancel",0,0}] 
04:30:53.740 [error] C1 propagation "2020-08-06T04:30:53.740" 
04:30:53.740 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:30:53.740 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,243}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:242 
04:30:58.248 [error] Sending find_sub batch [] 
04:30:58.248 [error] Sending find_sub_aq batch [] 
04:30:58.248 [error] batched message propagation "2020-08-06T04:30:58.248" 
04:30:59.110 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:30:59.110" Took=22939 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_44_566}],[],[],[],[],[]}}}}] 
04:30:59.110 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",242,241},{"delta_send",241,243},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",489,0},{"sub_cancel",0,0}] 
04:31:00.741 [error] C1 propagation "2020-08-06T04:31:00.741" 
04:31:00.741 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:31:00.741 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,244}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:243 
04:31:06.115 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:31:06.115" Took=36017 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_30_50_602}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:06.116 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",243,242},{"delta_send",242,244},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",491,0},{"sub_cancel",0,0}] 
04:31:07.742 [error] C1 propagation "2020-08-06T04:31:07.742" 
04:31:07.742 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:31:07.742 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,245}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:244 
04:31:08.250 [error] Sending find_sub batch [] 
04:31:08.250 [error] Sending find_sub_aq batch [] 
04:31:08.250 [error] batched message propagation "2020-08-06T04:31:08.250" 
04:31:13.117 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:31:13.117" Took=34556 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_56_638}],[],[],[],[],[],[]}}}}] 
04:31:13.118 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",244,243},{"delta_send",243,245},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",493,0},{"sub_cancel",0,0}] 
04:31:14.743 [error] C1 propagation "2020-08-06T04:31:14.743" 
04:31:14.743 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:31:14.743 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,246}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:245 
04:31:18.252 [error] Sending find_sub batch [] 
04:31:18.252 [error] Sending find_sub_aq batch [] 
04:31:18.252 [error] batched message propagation "2020-08-06T04:31:18.252" 
04:31:20.109 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:31:20.109" Took=23518 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_31_08_713}],[],[],[],[],[],[],[],[]}}}}] 
04:31:20.110 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",245,244},{"delta_send",244,246},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",495,0},{"sub_cancel",0,0}] 
04:31:21.745 [error] C1 propagation "2020-08-06T04:31:21.745" 
04:31:21.745 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:31:21.745 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,247}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:246 
04:31:27.116 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:31:27.116" Took=34402 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_31_14_751}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:27.117 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",246,245},{"delta_send",245,247},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",497,0},{"sub_cancel",0,0}] 
04:31:27.636 [error] C3 propagation "2020-08-06T04:31:27.636" 
04:31:27.888 [error] C2 propagation "2020-08-06T04:31:27.888" 
04:31:28.254 [error] Sending find_sub batch [] 
04:31:28.254 [error] Sending find_sub_aq batch [] 
04:31:28.254 [error] batched message propagation "2020-08-06T04:31:28.254" 
04:31:28.747 [error] C1 propagation "2020-08-06T04:31:28.747" 
04:31:28.806 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:31:28.806 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,248}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:247 
04:31:34.118 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:31:34.118" Took=33787 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_31_20_788}],[],[]}}}}] 
04:31:34.119 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",247,246},{"delta_send",246,248},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",499,0},{"sub_cancel",0,0}] 
04:31:35.748 [error] C1 propagation "2020-08-06T04:31:35.748" 
04:31:35.749 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:31:35.749 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,249}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:248 
04:31:38.256 [error] Sending find_sub batch [] 
04:31:38.256 [error] Sending find_sub_aq batch [] 
04:31:38.256 [error] batched message propagation "2020-08-06T04:31:38.256" 
04:31:41.134 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:31:41.134" Took=48920 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_31_26_823}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:41.134 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",248,247},{"delta_send",247,249},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",501,0},{"sub_cancel",0,0}] 
04:31:42.749 [error] C1 propagation "2020-08-06T04:31:42.749" 
04:31:42.749 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:31:42.749 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,250}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:249 
04:31:48.174 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:31:48.174" Took=34171 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_31_32_859}],[],[],[],[],[],[],[],[]}}}}] 
04:31:48.175 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",249,248},{"delta_send",248,250},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",503,0},{"sub_cancel",0,0}] 
04:31:48.258 [error] Sending find_sub batch [] 
04:31:48.258 [error] Sending find_sub_aq batch [] 
04:31:48.258 [error] batched message propagation "2020-08-06T04:31:48.258" 
04:31:49.750 [error] C1 propagation "2020-08-06T04:31:49.750" 
04:31:49.750 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:31:49.751 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,251}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:250 
04:31:55.113 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:31:55.112" Took=24527 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_31_38_899}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:55.113 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",250,249},{"delta_send",249,251},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",505,0},{"sub_cancel",0,0}] 
04:31:56.752 [error] C1 propagation "2020-08-06T04:31:56.752" 
04:31:56.752 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:31:56.752 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,252}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:251 
04:31:58.259 [error] Sending find_sub batch [] 
04:31:58.259 [error] Sending find_sub_aq batch [] 
04:31:58.259 [error] batched message propagation "2020-08-06T04:31:58.259" 
04:32:02.123 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:32:02.123" Took=34976 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_31_50_979}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:02.123 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",251,250},{"delta_send",250,252},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",507,0},{"sub_cancel",0,0}] 
04:32:03.753 [error] C1 propagation "2020-08-06T04:32:03.753" 
04:32:03.754 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:32:03.754 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,253}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:252 
04:32:07.890 [error] C2 propagation "2020-08-06T04:32:07.890" 
04:32:08.261 [error] Sending find_sub batch [] 
04:32:08.261 [error] Sending find_sub_aq batch [] 
04:32:08.261 [error] batched message propagation "2020-08-06T04:32:08.261" 
04:32:09.125 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:32:09.125" Took=34880 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_31_57_015}]}}}}] 
04:32:09.125 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",252,251},{"delta_send",251,253},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",509,0},{"sub_cancel",0,0}] 
04:32:10.754 [error] C1 propagation "2020-08-06T04:32:10.754" 
04:32:10.755 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:32:10.755 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,254}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:253 
04:32:16.127 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:32:16.127" Took=35289 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_32_03_051}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:16.128 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",253,252},{"delta_send",252,254},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",511,0},{"sub_cancel",0,0}] 
04:32:17.755 [error] C1 propagation "2020-08-06T04:32:17.755" 
04:32:17.755 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:32:17.755 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,255}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:254 
04:32:18.263 [error] Sending find_sub batch [] 
04:32:18.263 [error] Sending find_sub_aq batch [] 
04:32:18.263 [error] batched message propagation "2020-08-06T04:32:18.263" 
04:32:23.124 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:32:23.124" Took=30917 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_32_09_090}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:23.125 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",254,253},{"delta_send",253,255},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",513,0},{"sub_cancel",0,0}] 
04:32:24.756 [error] C1 propagation "2020-08-06T04:32:24.756" 
04:32:24.757 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:32:24.757 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,256}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:255 
04:32:28.265 [error] Sending find_sub batch [] 
04:32:28.265 [error] Sending find_sub_aq batch [] 
04:32:28.265 [error] batched message propagation "2020-08-06T04:32:28.265" 
04:32:30.193 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:32:30.193" Took=32309 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_32_15_131}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:30.195 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",255,254},{"delta_send",254,256},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",515,0},{"sub_cancel",0,0}] 
04:32:31.758 [error] C1 propagation "2020-08-06T04:32:31.758" 
04:32:31.758 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:32:31.759 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,257}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:256 
04:32:37.122 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:32:37.122" Took=24561 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_32_21_168}],[],[],[],[]}}}}] 
04:32:37.122 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",256,255},{"delta_send",255,257},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",517,0},{"sub_cancel",0,0}] 
04:32:37.637 [error] C3 propagation "2020-08-06T04:32:37.637" 
04:32:38.266 [error] Sending find_sub batch [] 
04:32:38.266 [error] Sending find_sub_aq batch [] 
04:32:38.266 [error] batched message propagation "2020-08-06T04:32:38.266" 
04:32:38.760 [error] C1 propagation "2020-08-06T04:32:38.760" 
04:32:38.760 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:32:38.760 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,258}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:257 
04:32:44.132 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:32:44.132" Took=32547 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_32_33_245}]}}}}] 
04:32:44.133 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",257,256},{"delta_send",256,258},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",519,0},{"sub_cancel",0,0}] 
04:32:45.761 [error] C1 propagation "2020-08-06T04:32:45.761" 
04:32:45.762 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:32:45.762 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,259}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:258 
04:32:47.891 [error] C2 propagation "2020-08-06T04:32:47.891" 
04:32:48.268 [error] Sending find_sub batch [] 
04:32:48.268 [error] Sending find_sub_aq batch [] 
04:32:48.268 [error] batched message propagation "2020-08-06T04:32:48.268" 
04:32:52.763 [error] C1 propagation "2020-08-06T04:32:52.763" 
04:32:58.130 [error] LASPVIN Received delta From='a@13.0.0.11' at TimeStamp="2020-08-06T04:32:58.129" Took=26158 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_32_44_898}],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:58.130 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",258,257},{"delta_send",257,259},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,2},{"rate_class",2,1},{"rate_refresh",0,0},{"rate_subscribe",3,0},{"rate_subscribe_ack",0,3},{"send_backend",521,0},{"sub_cancel",0,0}] 
04:32:58.270 [error] Sending find_sub batch [] 
04:32:58.270 [error] Sending find_sub_aq batch [] 
04:32:58.270 [error] batched message propagation "2020-08-06T04:32:58.270" 
04:32:59.764 [error] C1 propagation "2020-08-06T04:32:59.764" 
04:32:59.764 [error] LASPVIN Sending delta to 'a@13.0.0.11' 
04:32:59.764 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<53,141,104,133,243,98,149,217,22,144,209,17,55,10,208,96,105,114,179,158>>,260}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:259 
04:33:06.765 [error] C1 propagation "2020-08-06T04:33:06.765" 
04:33:08.271 [error] Sending find_sub batch [] 
04:33:08.271 [error] Sending find_sub_aq batch [] 
04:33:08.271 [error] batched message propagation "2020-08-06T04:33:08.271" 
04:33:13.766 [error] C1 propagation "2020-08-06T04:33:13.766" 
04:33:18.274 [error] Sending find_sub batch [] 
04:33:18.274 [error] Sending find_sub_aq batch [] 
04:33:18.274 [error] batched message propagation "2020-08-06T04:33:18.274" 
04:33:20.768 [error] C1 propagation "2020-08-06T04:33:20.768" 
04:33:27.769 [error] C1 propagation "2020-08-06T04:33:27.769" 
04:33:27.892 [error] C2 propagation "2020-08-06T04:33:27.892" 
04:33:28.275 [error] Sending find_sub batch [] 
04:33:28.275 [error] Sending find_sub_aq batch [] 
04:33:28.275 [error] batched message propagation "2020-08-06T04:33:28.275" 
04:33:34.771 [error] C1 propagation "2020-08-06T04:33:34.771" 
04:33:38.276 [error] Sending find_sub batch [] 
04:33:38.276 [error] Sending find_sub_aq batch [] 
04:33:38.276 [error] batched message propagation "2020-08-06T04:33:38.276" 
04:33:41.772 [error] C1 propagation "2020-08-06T04:33:41.772" 
04:33:47.638 [error] C3 propagation "2020-08-06T04:33:47.638" 
04:33:48.277 [error] Sending find_sub batch [] 
04:33:48.277 [error] Sending find_sub_aq batch [] 
04:33:48.277 [error] batched message propagation "2020-08-06T04:33:48.277" 
04:33:48.774 [error] C1 propagation "2020-08-06T04:33:48.774" 
04:33:55.775 [error] C1 propagation "2020-08-06T04:33:55.775" 
04:33:58.278 [error] Sending find_sub batch [] 
04:33:58.278 [error] Sending find_sub_aq batch [] 
04:33:58.278 [error] batched message propagation "2020-08-06T04:33:58.278" 
04:34:02.777 [error] C1 propagation "2020-08-06T04:34:02.777" 
04:34:07.893 [error] C2 propagation "2020-08-06T04:34:07.893" 
04:34:08.280 [error] Sending find_sub batch [] 
04:34:08.280 [error] Sending find_sub_aq batch [] 
04:34:08.280 [error] batched message propagation "2020-08-06T04:34:08.280" 
04:34:09.778 [error] C1 propagation "2020-08-06T04:34:09.778" 
04:34:16.779 [error] C1 propagation "2020-08-06T04:34:16.779" 
04:34:18.281 [error] Sending find_sub batch [] 
04:34:18.281 [error] Sending find_sub_aq batch [] 
04:34:18.282 [error] batched message propagation "2020-08-06T04:34:18.281" 
04:34:23.780 [error] C1 propagation "2020-08-06T04:34:23.780" 
04:34:28.283 [error] Sending find_sub batch [] 
04:34:28.283 [error] Sending find_sub_aq batch [] 
04:34:28.283 [error] batched message propagation "2020-08-06T04:34:28.283" 
04:34:30.781 [error] C1 propagation "2020-08-06T04:34:30.781" 
04:34:37.783 [error] C1 propagation "2020-08-06T04:34:37.783" 
04:34:38.285 [error] Sending find_sub batch [] 
04:34:38.285 [error] Sending find_sub_aq batch [] 
04:34:38.285 [error] batched message propagation "2020-08-06T04:34:38.285" 
04:34:44.784 [error] C1 propagation "2020-08-06T04:34:44.784" 
04:34:47.896 [error] C2 propagation "2020-08-06T04:34:47.895" 
04:34:48.286 [error] Sending find_sub batch [] 
04:34:48.286 [error] Sending find_sub_aq batch [] 
04:34:48.287 [error] batched message propagation "2020-08-06T04:34:48.286" 
04:34:51.785 [error] C1 propagation "2020-08-06T04:34:51.785" 
04:34:57.640 [error] C3 propagation "2020-08-06T04:34:57.640" 
04:34:58.288 [error] Sending find_sub batch [] 
04:34:58.288 [error] Sending find_sub_aq batch [] 
04:34:58.288 [error] batched message propagation "2020-08-06T04:34:58.288" 
04:34:58.786 [error] C1 propagation "2020-08-06T04:34:58.786" 
04:35:05.787 [error] C1 propagation "2020-08-06T04:35:05.787" 
04:35:08.290 [error] Sending find_sub batch [] 
04:35:08.290 [error] Sending find_sub_aq batch [] 
04:35:08.290 [error] batched message propagation "2020-08-06T04:35:08.290" 
04:35:12.788 [error] C1 propagation "2020-08-06T04:35:12.788" 
04:35:18.293 [error] Sending find_sub batch [] 
04:35:18.293 [error] Sending find_sub_aq batch [] 
04:35:18.293 [error] batched message propagation "2020-08-06T04:35:18.293" 
04:35:19.789 [error] C1 propagation "2020-08-06T04:35:19.789" 
04:35:26.790 [error] C1 propagation "2020-08-06T04:35:26.790" 
04:35:27.897 [error] C2 propagation "2020-08-06T04:35:27.897" 
04:35:28.294 [error] Sending find_sub batch [] 
04:35:28.294 [error] Sending find_sub_aq batch [] 
04:35:28.294 [error] batched message propagation "2020-08-06T04:35:28.294" 
04:35:33.792 [error] C1 propagation "2020-08-06T04:35:33.792" 
04:35:38.296 [error] Sending find_sub batch [] 
04:35:38.296 [error] Sending find_sub_aq batch [] 
04:35:38.296 [error] batched message propagation "2020-08-06T04:35:38.296" 
04:35:40.794 [error] C1 propagation "2020-08-06T04:35:40.794" 
04:35:47.795 [error] C1 propagation "2020-08-06T04:35:47.795" 
04:35:48.297 [error] Sending find_sub batch [] 
04:35:48.297 [error] Sending find_sub_aq batch [] 
04:35:48.298 [error] batched message propagation "2020-08-06T04:35:48.298" 
04:35:54.796 [error] C1 propagation "2020-08-06T04:35:54.796" 
04:35:58.299 [error] Sending find_sub batch [] 
04:35:58.299 [error] Sending find_sub_aq batch [] 
04:35:58.299 [error] batched message propagation "2020-08-06T04:35:58.299" 
04:36:01.798 [error] C1 propagation "2020-08-06T04:36:01.798" 
04:36:07.642 [error] C3 propagation "2020-08-06T04:36:07.642" 
04:36:07.899 [error] C2 propagation "2020-08-06T04:36:07.899" 
04:36:08.301 [error] Sending find_sub batch [] 
04:36:08.301 [error] Sending find_sub_aq batch [] 
04:36:08.301 [error] batched message propagation "2020-08-06T04:36:08.301" 
04:36:08.800 [error] C1 propagation "2020-08-06T04:36:08.800" 
04:36:15.801 [error] C1 propagation "2020-08-06T04:36:15.801" 
04:36:18.304 [error] Sending find_sub batch [] 
04:36:18.304 [error] Sending find_sub_aq batch [] 
04:36:18.304 [error] batched message propagation "2020-08-06T04:36:18.304" 
04:36:22.802 [error] C1 propagation "2020-08-06T04:36:22.802" 
04:36:28.305 [error] Sending find_sub batch [] 
04:36:28.305 [error] Sending find_sub_aq batch [] 
04:36:28.305 [error] batched message propagation "2020-08-06T04:36:28.305" 
04:36:29.803 [error] C1 propagation "2020-08-06T04:36:29.803" 
04:36:36.804 [error] C1 propagation "2020-08-06T04:36:36.804" 
04:36:38.307 [error] Sending find_sub batch [] 
04:36:38.307 [error] Sending find_sub_aq batch [] 
04:36:38.307 [error] batched message propagation "2020-08-06T04:36:38.307" 
04:36:43.805 [error] C1 propagation "2020-08-06T04:36:43.805" 
04:36:47.900 [error] C2 propagation "2020-08-06T04:36:47.900" 
04:36:48.309 [error] Sending find_sub batch [] 
04:36:48.309 [error] Sending find_sub_aq batch [] 
04:36:48.309 [error] batched message propagation "2020-08-06T04:36:48.309" 
04:36:50.806 [error] C1 propagation "2020-08-06T04:36:50.806" 
04:36:57.807 [error] C1 propagation "2020-08-06T04:36:57.807" 
04:36:58.310 [error] Sending find_sub batch [] 
04:36:58.310 [error] Sending find_sub_aq batch [] 
04:36:58.310 [error] batched message propagation "2020-08-06T04:36:58.310" 
04:37:04.808 [error] C1 propagation "2020-08-06T04:37:04.808" 
04:37:08.312 [error] Sending find_sub batch [] 
04:37:08.312 [error] Sending find_sub_aq batch [] 
04:37:08.312 [error] batched message propagation "2020-08-06T04:37:08.312" 
04:37:11.810 [error] C1 propagation "2020-08-06T04:37:11.810" 
04:37:17.643 [error] C3 propagation "2020-08-06T04:37:17.643" 
04:37:18.313 [error] Sending find_sub batch [] 
04:37:18.313 [error] Sending find_sub_aq batch [] 
04:37:18.313 [error] batched message propagation "2020-08-06T04:37:18.313" 
04:37:18.812 [error] C1 propagation "2020-08-06T04:37:18.812" 
04:37:25.813 [error] C1 propagation "2020-08-06T04:37:25.813" 
04:37:27.901 [error] C2 propagation "2020-08-06T04:37:27.901" 
04:37:28.315 [error] Sending find_sub batch [] 
04:37:28.315 [error] Sending find_sub_aq batch [] 
04:37:28.315 [error] batched message propagation "2020-08-06T04:37:28.315" 
04:37:32.814 [error] C1 propagation "2020-08-06T04:37:32.814" 
04:37:38.316 [error] Sending find_sub batch [] 
04:37:38.317 [error] Sending find_sub_aq batch [] 
04:37:38.317 [error] batched message propagation "2020-08-06T04:37:38.317" 
04:37:39.815 [error] C1 propagation "2020-08-06T04:37:39.815" 
04:37:46.817 [error] C1 propagation "2020-08-06T04:37:46.817" 
04:37:48.318 [error] Sending find_sub batch [] 
04:37:48.318 [error] Sending find_sub_aq batch [] 
04:37:48.318 [error] batched message propagation "2020-08-06T04:37:48.318" 
04:37:53.819 [error] C1 propagation "2020-08-06T04:37:53.819" 
04:37:58.320 [error] Sending find_sub batch [] 
04:37:58.320 [error] Sending find_sub_aq batch [] 
04:37:58.320 [error] batched message propagation "2020-08-06T04:37:58.320" 
04:38:00.821 [error] C1 propagation "2020-08-06T04:38:00.821" 
04:38:07.823 [error] C1 propagation "2020-08-06T04:38:07.823" 
04:38:07.903 [error] C2 propagation "2020-08-06T04:38:07.903" 
04:38:08.322 [error] Sending find_sub batch [] 
04:38:08.322 [error] Sending find_sub_aq batch [] 
04:38:08.322 [error] batched message propagation "2020-08-06T04:38:08.322" 
04:38:14.824 [error] C1 propagation "2020-08-06T04:38:14.824" 
04:38:18.323 [error] Sending find_sub batch [] 
04:38:18.323 [error] Sending find_sub_aq batch [] 
04:38:18.323 [error] batched message propagation "2020-08-06T04:38:18.323" 
04:38:21.826 [error] C1 propagation "2020-08-06T04:38:21.826" 
04:38:27.645 [error] C3 propagation "2020-08-06T04:38:27.645" 
04:38:28.324 [error] Sending find_sub batch [] 
04:38:28.324 [error] Sending find_sub_aq batch [] 
04:38:28.324 [error] batched message propagation "2020-08-06T04:38:28.324" 
04:38:28.828 [error] C1 propagation "2020-08-06T04:38:28.828" 
04:38:35.830 [error] C1 propagation "2020-08-06T04:38:35.830" 
04:38:38.326 [error] Sending find_sub batch [] 
04:38:38.326 [error] Sending find_sub_aq batch [] 
04:38:38.326 [error] batched message propagation "2020-08-06T04:38:38.326" 
04:38:42.831 [error] C1 propagation "2020-08-06T04:38:42.831" 
04:38:47.905 [error] C2 propagation "2020-08-06T04:38:47.905" 
04:38:48.328 [error] Sending find_sub batch [] 
04:38:48.328 [error] Sending find_sub_aq batch [] 
04:38:48.328 [error] batched message propagation "2020-08-06T04:38:48.328" 
04:38:49.832 [error] C1 propagation "2020-08-06T04:38:49.832" 
04:38:56.833 [error] C1 propagation "2020-08-06T04:38:56.833" 
04:38:58.330 [error] Sending find_sub batch [] 
04:38:58.330 [error] Sending find_sub_aq batch [] 
04:38:58.330 [error] batched message propagation "2020-08-06T04:38:58.330" 
04:39:03.834 [error] C1 propagation "2020-08-06T04:39:03.834" 
04:39:08.332 [error] Sending find_sub batch [] 
04:39:08.332 [error] Sending find_sub_aq batch [] 
04:39:08.332 [error] batched message propagation "2020-08-06T04:39:08.332" 
04:39:10.836 [error] C1 propagation "2020-08-06T04:39:10.836" 
04:39:17.837 [error] C1 propagation "2020-08-06T04:39:17.837" 
04:39:18.334 [error] Sending find_sub batch [] 
04:39:18.334 [error] Sending find_sub_aq batch [] 
04:39:18.334 [error] batched message propagation "2020-08-06T04:39:18.334" 
04:39:24.839 [error] C1 propagation "2020-08-06T04:39:24.839" 
04:39:27.906 [error] C2 propagation "2020-08-06T04:39:27.906" 
04:39:28.335 [error] Sending find_sub batch [] 
04:39:28.335 [error] Sending find_sub_aq batch [] 
04:39:28.335 [error] batched message propagation "2020-08-06T04:39:28.335" 
04:39:31.840 [error] C1 propagation "2020-08-06T04:39:31.840" 
04:39:37.646 [error] C3 propagation "2020-08-06T04:39:37.646" 
04:39:38.336 [error] Sending find_sub batch [] 
04:39:38.336 [error] Sending find_sub_aq batch [] 
04:39:38.336 [error] batched message propagation "2020-08-06T04:39:38.336" 
04:39:38.842 [error] C1 propagation "2020-08-06T04:39:38.842" 
04:39:45.844 [error] C1 propagation "2020-08-06T04:39:45.844" 
04:39:48.338 [error] Sending find_sub batch [] 
04:39:48.338 [error] Sending find_sub_aq batch [] 
04:39:48.338 [error] batched message propagation "2020-08-06T04:39:48.338" 
04:39:52.845 [error] C1 propagation "2020-08-06T04:39:52.845" 
04:39:58.339 [error] Sending find_sub batch [] 
04:39:58.339 [error] Sending find_sub_aq batch [] 
04:39:58.339 [error] batched message propagation "2020-08-06T04:39:58.339" 
04:39:59.846 [error] C1 propagation "2020-08-06T04:39:59.846" 
04:40:06.847 [error] C1 propagation "2020-08-06T04:40:06.847" 
04:40:07.907 [error] C2 propagation "2020-08-06T04:40:07.907" 
04:40:08.341 [error] Sending find_sub batch [] 
04:40:08.341 [error] Sending find_sub_aq batch [] 
04:40:08.341 [error] batched message propagation "2020-08-06T04:40:08.341" 
04:40:13.849 [error] C1 propagation "2020-08-06T04:40:13.849" 
04:40:18.342 [error] Sending find_sub batch [] 
04:40:18.342 [error] Sending find_sub_aq batch [] 
04:40:18.342 [error] batched message propagation "2020-08-06T04:40:18.342" 
04:40:20.851 [error] C1 propagation "2020-08-06T04:40:20.851" 
04:40:27.853 [error] C1 propagation "2020-08-06T04:40:27.853" 
04:40:28.343 [error] Sending find_sub batch [] 
04:40:28.343 [error] Sending find_sub_aq batch [] 
04:40:28.343 [error] batched message propagation "2020-08-06T04:40:28.343" 
04:40:34.855 [error] C1 propagation "2020-08-06T04:40:34.855" 
04:40:38.344 [error] Sending find_sub batch [] 
04:40:38.344 [error] Sending find_sub_aq batch [] 
04:40:38.344 [error] batched message propagation "2020-08-06T04:40:38.344" 
04:40:41.857 [error] C1 propagation "2020-08-06T04:40:41.857" 
04:40:47.647 [error] C3 propagation "2020-08-06T04:40:47.647" 
04:40:47.908 [error] C2 propagation "2020-08-06T04:40:47.908" 
04:40:48.346 [error] Sending find_sub batch [] 
04:40:48.346 [error] Sending find_sub_aq batch [] 
04:40:48.346 [error] batched message propagation "2020-08-06T04:40:48.346" 
04:40:48.859 [error] C1 propagation "2020-08-06T04:40:48.859" 
04:40:55.860 [error] C1 propagation "2020-08-06T04:40:55.860" 
04:40:58.348 [error] Sending find_sub batch [] 
04:40:58.348 [error] Sending find_sub_aq batch [] 
04:40:58.348 [error] batched message propagation "2020-08-06T04:40:58.348" 
04:41:02.861 [error] C1 propagation "2020-08-06T04:41:02.861" 
04:41:08.350 [error] Sending find_sub batch [] 
04:41:08.350 [error] Sending find_sub_aq batch [] 
04:41:08.350 [error] batched message propagation "2020-08-06T04:41:08.350" 
04:41:09.862 [error] C1 propagation "2020-08-06T04:41:09.862" 
04:41:16.863 [error] C1 propagation "2020-08-06T04:41:16.863" 
04:41:18.352 [error] Sending find_sub batch [] 
04:41:18.352 [error] Sending find_sub_aq batch [] 
04:41:18.352 [error] batched message propagation "2020-08-06T04:41:18.352" 
04:41:23.865 [error] C1 propagation "2020-08-06T04:41:23.865" 
04:41:27.910 [error] C2 propagation "2020-08-06T04:41:27.910" 
04:41:28.353 [error] Sending find_sub batch [] 
04:41:28.353 [error] Sending find_sub_aq batch [] 
04:41:28.353 [error] batched message propagation "2020-08-06T04:41:28.353" 
04:41:30.866 [error] C1 propagation "2020-08-06T04:41:30.866" 
04:41:37.868 [error] C1 propagation "2020-08-06T04:41:37.868" 
04:41:38.354 [error] Sending find_sub batch [] 
04:41:38.354 [error] Sending find_sub_aq batch [] 
04:41:38.354 [error] batched message propagation "2020-08-06T04:41:38.354" 
04:41:44.869 [error] C1 propagation "2020-08-06T04:41:44.869" 
04:41:48.356 [error] Sending find_sub batch [] 
04:41:48.356 [error] Sending find_sub_aq batch [] 
04:41:48.356 [error] batched message propagation "2020-08-06T04:41:48.356" 
04:41:51.870 [error] C1 propagation "2020-08-06T04:41:51.870" 
04:41:57.648 [error] C3 propagation "2020-08-06T04:41:57.648" 
04:41:58.358 [error] Sending find_sub batch [] 
04:41:58.358 [error] Sending find_sub_aq batch [] 
04:41:58.358 [error] batched message propagation "2020-08-06T04:41:58.358" 
04:41:58.872 [error] C1 propagation "2020-08-06T04:41:58.872" 
04:42:05.873 [error] C1 propagation "2020-08-06T04:42:05.873" 
04:42:07.912 [error] C2 propagation "2020-08-06T04:42:07.912" 
04:42:08.360 [error] Sending find_sub batch [] 
04:42:08.360 [error] Sending find_sub_aq batch [] 
04:42:08.360 [error] batched message propagation "2020-08-06T04:42:08.360" 
04:42:12.875 [error] C1 propagation "2020-08-06T04:42:12.875" 
04:42:18.361 [error] Sending find_sub batch [] 
04:42:18.361 [error] Sending find_sub_aq batch [] 
04:42:18.361 [error] batched message propagation "2020-08-06T04:42:18.361" 
04:42:19.876 [error] C1 propagation "2020-08-06T04:42:19.876" 
04:42:26.877 [error] C1 propagation "2020-08-06T04:42:26.877" 
04:42:28.363 [error] Sending find_sub batch [] 
04:42:28.363 [error] Sending find_sub_aq batch [] 
04:42:28.363 [error] batched message propagation "2020-08-06T04:42:28.363" 
04:42:33.878 [error] C1 propagation "2020-08-06T04:42:33.878" 
04:42:38.364 [error] Sending find_sub batch [] 
04:42:38.364 [error] Sending find_sub_aq batch [] 
04:42:38.364 [error] batched message propagation "2020-08-06T04:42:38.364" 
04:42:40.880 [error] C1 propagation "2020-08-06T04:42:40.880" 
04:42:47.881 [error] C1 propagation "2020-08-06T04:42:47.881" 
04:42:47.913 [error] C2 propagation "2020-08-06T04:42:47.913" 
04:42:48.366 [error] Sending find_sub batch [] 
04:42:48.366 [error] Sending find_sub_aq batch [] 
04:42:48.366 [error] batched message propagation "2020-08-06T04:42:48.366" 
04:42:54.882 [error] C1 propagation "2020-08-06T04:42:54.882" 
04:42:58.367 [error] Sending find_sub batch [] 
04:42:58.367 [error] Sending find_sub_aq batch [] 
04:42:58.367 [error] batched message propagation "2020-08-06T04:42:58.367" 
04:43:01.884 [error] C1 propagation "2020-08-06T04:43:01.884" 
04:43:07.650 [error] C3 propagation "2020-08-06T04:43:07.650" 
04:43:08.368 [error] Sending find_sub batch [] 
04:43:08.368 [error] Sending find_sub_aq batch [] 
04:43:08.368 [error] batched message propagation "2020-08-06T04:43:08.368" 
04:43:08.885 [error] C1 propagation "2020-08-06T04:43:08.885" 
04:43:15.886 [error] C1 propagation "2020-08-06T04:43:15.886" 
04:43:18.370 [error] Sending find_sub batch [] 
04:43:18.370 [error] Sending find_sub_aq batch [] 
04:43:18.370 [error] batched message propagation "2020-08-06T04:43:18.370" 
04:43:22.888 [error] C1 propagation "2020-08-06T04:43:22.888" 
04:43:27.914 [error] C2 propagation "2020-08-06T04:43:27.914" 
04:43:28.372 [error] Sending find_sub batch [] 
04:43:28.372 [error] Sending find_sub_aq batch [] 
04:43:28.372 [error] batched message propagation "2020-08-06T04:43:28.372" 
04:43:29.890 [error] C1 propagation "2020-08-06T04:43:29.890" 
04:43:36.892 [error] C1 propagation "2020-08-06T04:43:36.892" 
04:43:38.373 [error] Sending find_sub batch [] 
04:43:38.373 [error] Sending find_sub_aq batch [] 
04:43:38.373 [error] batched message propagation "2020-08-06T04:43:38.373" 
04:43:43.893 [error] C1 propagation "2020-08-06T04:43:43.893" 
04:43:48.374 [error] Sending find_sub batch [] 
04:43:48.374 [error] Sending find_sub_aq batch [] 
04:43:48.374 [error] batched message propagation "2020-08-06T04:43:48.374" 
04:43:50.895 [error] C1 propagation "2020-08-06T04:43:50.895" 
04:43:57.896 [error] C1 propagation "2020-08-06T04:43:57.896" 
04:43:58.376 [error] Sending find_sub batch [] 
04:43:58.376 [error] Sending find_sub_aq batch [] 
04:43:58.376 [error] batched message propagation "2020-08-06T04:43:58.376" 
04:44:04.897 [error] C1 propagation "2020-08-06T04:44:04.897" 
04:44:07.915 [error] C2 propagation "2020-08-06T04:44:07.915" 
04:44:08.378 [error] Sending find_sub batch [] 
04:44:08.378 [error] Sending find_sub_aq batch [] 
04:44:08.378 [error] batched message propagation "2020-08-06T04:44:08.378" 
04:44:11.898 [error] C1 propagation "2020-08-06T04:44:11.898" 
04:44:17.651 [error] C3 propagation "2020-08-06T04:44:17.651" 
04:44:18.379 [error] Sending find_sub batch [] 
04:44:18.379 [error] Sending find_sub_aq batch [] 
04:44:18.379 [error] batched message propagation "2020-08-06T04:44:18.379" 
04:44:18.899 [error] C1 propagation "2020-08-06T04:44:18.899" 
04:44:25.901 [error] C1 propagation "2020-08-06T04:44:25.901" 
04:44:28.381 [error] Sending find_sub batch [] 
04:44:28.381 [error] Sending find_sub_aq batch [] 
04:44:28.381 [error] batched message propagation "2020-08-06T04:44:28.381" 
04:44:32.902 [error] C1 propagation "2020-08-06T04:44:32.902" 
04:44:38.382 [error] Sending find_sub batch [] 
04:44:38.382 [error] Sending find_sub_aq batch [] 
04:44:38.382 [error] batched message propagation "2020-08-06T04:44:38.382" 
04:44:39.904 [error] C1 propagation "2020-08-06T04:44:39.904" 
04:44:46.905 [error] C1 propagation "2020-08-06T04:44:46.905" 
04:44:47.916 [error] C2 propagation "2020-08-06T04:44:47.916" 
04:44:48.384 [error] Sending find_sub batch [] 
04:44:48.384 [error] Sending find_sub_aq batch [] 
04:44:48.384 [error] batched message propagation "2020-08-06T04:44:48.384" 
04:44:53.907 [error] C1 propagation "2020-08-06T04:44:53.907" 
04:44:58.386 [error] Sending find_sub batch [] 
04:44:58.386 [error] Sending find_sub_aq batch [] 
04:44:58.386 [error] batched message propagation "2020-08-06T04:44:58.386" 
04:45:00.908 [error] C1 propagation "2020-08-06T04:45:00.908" 
04:45:07.909 [error] C1 propagation "2020-08-06T04:45:07.909" 
04:45:08.388 [error] Sending find_sub batch [] 
04:45:08.388 [error] Sending find_sub_aq batch [] 
04:45:08.388 [error] batched message propagation "2020-08-06T04:45:08.388" 
04:45:14.912 [error] C1 propagation "2020-08-06T04:45:14.911" 
04:45:18.389 [error] Sending find_sub batch [] 
04:45:18.389 [error] Sending find_sub_aq batch [] 
04:45:18.389 [error] batched message propagation "2020-08-06T04:45:18.389" 
04:45:21.913 [error] C1 propagation "2020-08-06T04:45:21.913" 
04:45:27.653 [error] C3 propagation "2020-08-06T04:45:27.653" 
04:45:27.917 [error] C2 propagation "2020-08-06T04:45:27.917" 
04:45:28.390 [error] Sending find_sub batch [] 
04:45:28.390 [error] Sending find_sub_aq batch [] 
04:45:28.390 [error] batched message propagation "2020-08-06T04:45:28.390" 
04:45:28.915 [error] C1 propagation "2020-08-06T04:45:28.915" 
04:45:35.916 [error] C1 propagation "2020-08-06T04:45:35.916" 
04:45:38.391 [error] Sending find_sub batch [] 
04:45:38.391 [error] Sending find_sub_aq batch [] 
04:45:38.391 [error] batched message propagation "2020-08-06T04:45:38.391" 
04:45:42.917 [error] C1 propagation "2020-08-06T04:45:42.917" 
04:45:48.392 [error] Sending find_sub batch [] 
04:45:48.392 [error] Sending find_sub_aq batch [] 
04:45:48.392 [error] batched message propagation "2020-08-06T04:45:48.392" 
04:45:49.919 [error] C1 propagation "2020-08-06T04:45:49.919" 
04:45:56.922 [error] C1 propagation "2020-08-06T04:45:56.921" 
04:45:58.393 [error] Sending find_sub batch [] 
04:45:58.393 [error] Sending find_sub_aq batch [] 
04:45:58.393 [error] batched message propagation "2020-08-06T04:45:58.393" 
04:46:03.923 [error] C1 propagation "2020-08-06T04:46:03.923" 
04:46:07.919 [error] C2 propagation "2020-08-06T04:46:07.919" 
04:46:08.395 [error] Sending find_sub batch [] 
04:46:08.395 [error] Sending find_sub_aq batch [] 
04:46:08.395 [error] batched message propagation "2020-08-06T04:46:08.395" 
04:46:10.924 [error] C1 propagation "2020-08-06T04:46:10.924" 
04:46:17.926 [error] C1 propagation "2020-08-06T04:46:17.926" 
04:46:18.396 [error] Sending find_sub batch [] 
04:46:18.396 [error] Sending find_sub_aq batch [] 
04:46:18.396 [error] batched message propagation "2020-08-06T04:46:18.396" 
04:46:24.928 [error] C1 propagation "2020-08-06T04:46:24.928" 
04:46:28.397 [error] Sending find_sub batch [] 
04:46:28.397 [error] Sending find_sub_aq batch [] 
04:46:28.397 [error] batched message propagation "2020-08-06T04:46:28.397" 
04:46:31.931 [error] C1 propagation "2020-08-06T04:46:31.930" 
04:46:37.654 [error] C3 propagation "2020-08-06T04:46:37.654" 
04:46:38.398 [error] Sending find_sub batch [] 
04:46:38.398 [error] Sending find_sub_aq batch [] 
04:46:38.398 [error] batched message propagation "2020-08-06T04:46:38.398" 
04:46:38.932 [error] C1 propagation "2020-08-06T04:46:38.932" 
04:46:45.933 [error] C1 propagation "2020-08-06T04:46:45.933" 
04:46:47.921 [error] C2 propagation "2020-08-06T04:46:47.921" 
04:46:48.399 [error] Sending find_sub batch [] 
04:46:48.399 [error] Sending find_sub_aq batch [] 
04:46:48.399 [error] batched message propagation "2020-08-06T04:46:48.399" 
04:46:52.934 [error] C1 propagation "2020-08-06T04:46:52.934" 
04:46:58.401 [error] Sending find_sub batch [] 
04:46:58.401 [error] Sending find_sub_aq batch [] 
04:46:58.401 [error] batched message propagation "2020-08-06T04:46:58.401" 
04:46:59.936 [error] C1 propagation "2020-08-06T04:46:59.936" 
04:47:06.938 [error] C1 propagation "2020-08-06T04:47:06.938" 
04:47:08.403 [error] Sending find_sub batch [] 
04:47:08.403 [error] Sending find_sub_aq batch [] 
04:47:08.403 [error] batched message propagation "2020-08-06T04:47:08.403" 
04:47:13.939 [error] C1 propagation "2020-08-06T04:47:13.939" 
04:47:18.404 [error] Sending find_sub batch [] 
04:47:18.404 [error] Sending find_sub_aq batch [] 
04:47:18.404 [error] batched message propagation "2020-08-06T04:47:18.404" 
04:47:20.940 [error] C1 propagation "2020-08-06T04:47:20.940" 
04:47:27.923 [error] C2 propagation "2020-08-06T04:47:27.923" 
04:47:27.941 [error] C1 propagation "2020-08-06T04:47:27.941" 
04:47:28.406 [error] Sending find_sub batch [] 
04:47:28.406 [error] Sending find_sub_aq batch [] 
04:47:28.406 [error] batched message propagation "2020-08-06T04:47:28.406" 
04:47:34.942 [error] C1 propagation "2020-08-06T04:47:34.942" 
04:47:38.408 [error] Sending find_sub batch [] 
04:47:38.408 [error] Sending find_sub_aq batch [] 
04:47:38.408 [error] batched message propagation "2020-08-06T04:47:38.408" 
04:47:41.943 [error] C1 propagation "2020-08-06T04:47:41.943" 
04:47:47.656 [error] C3 propagation "2020-08-06T04:47:47.656" 
04:47:48.409 [error] Sending find_sub batch [] 
04:47:48.409 [error] Sending find_sub_aq batch [] 
04:47:48.409 [error] batched message propagation "2020-08-06T04:47:48.409" 
04:47:48.945 [error] C1 propagation "2020-08-06T04:47:48.945" 
04:47:55.947 [error] C1 propagation "2020-08-06T04:47:55.947" 
04:47:58.411 [error] Sending find_sub batch [] 
04:47:58.411 [error] Sending find_sub_aq batch [] 
04:47:58.411 [error] batched message propagation "2020-08-06T04:47:58.411" 
04:48:02.949 [error] C1 propagation "2020-08-06T04:48:02.949" 
04:48:07.924 [error] C2 propagation "2020-08-06T04:48:07.924" 
04:48:08.413 [error] Sending find_sub batch [] 
04:48:08.413 [error] Sending find_sub_aq batch [] 
04:48:08.413 [error] batched message propagation "2020-08-06T04:48:08.413" 
04:48:09.951 [error] C1 propagation "2020-08-06T04:48:09.951" 
04:48:16.953 [error] C1 propagation "2020-08-06T04:48:16.953" 
04:48:18.414 [error] Sending find_sub batch [] 
04:48:18.414 [error] Sending find_sub_aq batch [] 
04:48:18.414 [error] batched message propagation "2020-08-06T04:48:18.414" 
04:48:23.955 [error] C1 propagation "2020-08-06T04:48:23.955" 
04:48:28.416 [error] Sending find_sub batch [] 
04:48:28.416 [error] Sending find_sub_aq batch [] 
04:48:28.416 [error] batched message propagation "2020-08-06T04:48:28.416" 
04:48:30.957 [error] C1 propagation "2020-08-06T04:48:30.957" 
04:48:37.958 [error] C1 propagation "2020-08-06T04:48:37.958" 
04:48:38.417 [error] Sending find_sub batch [] 
04:48:38.417 [error] Sending find_sub_aq batch [] 
04:48:38.417 [error] batched message propagation "2020-08-06T04:48:38.417" 
04:48:44.960 [error] C1 propagation "2020-08-06T04:48:44.960" 
04:48:47.925 [error] C2 propagation "2020-08-06T04:48:47.925" 
04:48:48.418 [error] Sending find_sub batch [] 
04:48:48.418 [error] Sending find_sub_aq batch [] 
04:48:48.418 [error] batched message propagation "2020-08-06T04:48:48.418" 
04:48:51.961 [error] C1 propagation "2020-08-06T04:48:51.961" 
04:48:57.658 [error] C3 propagation "2020-08-06T04:48:57.658" 
04:48:58.420 [error] Sending find_sub batch [] 
04:48:58.420 [error] Sending find_sub_aq batch [] 
04:48:58.420 [error] batched message propagation "2020-08-06T04:48:58.420" 
04:48:58.963 [error] C1 propagation "2020-08-06T04:48:58.963" 
04:49:05.964 [error] C1 propagation "2020-08-06T04:49:05.964" 
04:49:08.421 [error] Sending find_sub batch [] 
04:49:08.421 [error] Sending find_sub_aq batch [] 
04:49:08.421 [error] batched message propagation "2020-08-06T04:49:08.421" 
04:49:12.965 [error] C1 propagation "2020-08-06T04:49:12.965" 
04:49:18.423 [error] Sending find_sub batch [] 
04:49:18.423 [error] Sending find_sub_aq batch [] 
04:49:18.423 [error] batched message propagation "2020-08-06T04:49:18.423" 
04:49:19.967 [error] C1 propagation "2020-08-06T04:49:19.967" 
04:49:26.968 [error] C1 propagation "2020-08-06T04:49:26.968" 
04:49:27.926 [error] C2 propagation "2020-08-06T04:49:27.926" 
04:49:28.424 [error] Sending find_sub batch [] 
04:49:28.424 [error] Sending find_sub_aq batch [] 
04:49:28.424 [error] batched message propagation "2020-08-06T04:49:28.424" 
04:49:33.970 [error] C1 propagation "2020-08-06T04:49:33.970" 
04:49:38.426 [error] Sending find_sub batch [] 
04:49:38.426 [error] Sending find_sub_aq batch [] 
04:49:38.426 [error] batched message propagation "2020-08-06T04:49:38.426" 
04:49:40.972 [error] C1 propagation "2020-08-06T04:49:40.972" 
04:49:47.974 [error] C1 propagation "2020-08-06T04:49:47.974" 
04:49:48.427 [error] Sending find_sub batch [] 
04:49:48.427 [error] Sending find_sub_aq batch [] 
04:49:48.428 [error] batched message propagation "2020-08-06T04:49:48.427" 
04:49:54.976 [error] C1 propagation "2020-08-06T04:49:54.976" 
04:49:58.430 [error] Sending find_sub batch [] 
04:49:58.430 [error] Sending find_sub_aq batch [] 
04:49:58.430 [error] batched message propagation "2020-08-06T04:49:58.430" 
04:50:01.978 [error] C1 propagation "2020-08-06T04:50:01.978" 
04:50:07.659 [error] C3 propagation "2020-08-06T04:50:07.659" 
04:50:07.927 [error] C2 propagation "2020-08-06T04:50:07.927" 
04:50:08.431 [error] Sending find_sub batch [] 
04:50:08.431 [error] Sending find_sub_aq batch [] 
04:50:08.431 [error] batched message propagation "2020-08-06T04:50:08.431" 
04:50:08.980 [error] C1 propagation "2020-08-06T04:50:08.980" 
04:50:15.982 [error] C1 propagation "2020-08-06T04:50:15.982" 
04:50:18.433 [error] Sending find_sub batch [] 
04:50:18.433 [error] Sending find_sub_aq batch [] 
04:50:18.433 [error] batched message propagation "2020-08-06T04:50:18.433" 
04:50:22.983 [error] C1 propagation "2020-08-06T04:50:22.983" 
04:50:28.436 [error] Sending find_sub batch [] 
04:50:28.436 [error] Sending find_sub_aq batch [] 
04:50:28.436 [error] batched message propagation "2020-08-06T04:50:28.436" 
04:50:29.985 [error] C1 propagation "2020-08-06T04:50:29.985" 
04:50:36.986 [error] C1 propagation "2020-08-06T04:50:36.986" 
04:50:38.437 [error] Sending find_sub batch [] 
04:50:38.437 [error] Sending find_sub_aq batch [] 
04:50:38.437 [error] batched message propagation "2020-08-06T04:50:38.437" 
04:50:43.988 [error] C1 propagation "2020-08-06T04:50:43.988" 
04:50:47.928 [error] C2 propagation "2020-08-06T04:50:47.928" 
04:50:48.439 [error] Sending find_sub batch [] 
04:50:48.439 [error] Sending find_sub_aq batch [] 
04:50:48.440 [error] batched message propagation "2020-08-06T04:50:48.439" 
04:50:50.990 [error] C1 propagation "2020-08-06T04:50:50.990" 
04:50:57.992 [error] C1 propagation "2020-08-06T04:50:57.992" 
04:50:58.441 [error] Sending find_sub batch [] 
04:50:58.441 [error] Sending find_sub_aq batch [] 
04:50:58.441 [error] batched message propagation "2020-08-06T04:50:58.441" 
04:51:04.994 [error] C1 propagation "2020-08-06T04:51:04.994" 
04:51:08.443 [error] Sending find_sub batch [] 
04:51:08.443 [error] Sending find_sub_aq batch [] 
04:51:08.443 [error] batched message propagation "2020-08-06T04:51:08.443" 
04:51:11.996 [error] C1 propagation "2020-08-06T04:51:11.996" 
04:51:17.660 [error] C3 propagation "2020-08-06T04:51:17.660" 
04:51:18.445 [error] Sending find_sub batch [] 
04:51:18.445 [error] Sending find_sub_aq batch [] 
04:51:18.445 [error] batched message propagation "2020-08-06T04:51:18.445" 
04:51:18.998 [error] C1 propagation "2020-08-06T04:51:18.998" 
04:51:26.000 [error] C1 propagation "2020-08-06T04:51:26.440" 
04:51:27.929 [error] C2 propagation "2020-08-06T04:51:27.929" 
04:51:28.446 [error] Sending find_sub batch [] 
04:51:28.446 [error] Sending find_sub_aq batch [] 
04:51:28.447 [error] batched message propagation "2020-08-06T04:51:28.447" 
04:51:33.001 [error] C1 propagation "2020-08-06T04:51:33.164" 
04:51:38.448 [error] Sending find_sub batch [] 
04:51:38.448 [error] Sending find_sub_aq batch [] 
04:51:38.448 [error] batched message propagation "2020-08-06T04:51:38.448" 
04:51:40.003 [error] C1 propagation "2020-08-06T04:51:40.369" 
04:51:47.005 [error] C1 propagation "2020-08-06T04:51:47.569" 
04:51:48.449 [error] Sending find_sub batch [] 
04:51:48.449 [error] Sending find_sub_aq batch [] 
04:51:48.449 [error] batched message propagation "2020-08-06T04:51:48.449" 
04:51:54.006 [error] C1 propagation "2020-08-06T04:51:54.664" 
04:51:58.451 [error] Sending find_sub batch [] 
04:51:58.451 [error] Sending find_sub_aq batch [] 
04:51:58.451 [error] batched message propagation "2020-08-06T04:51:58.451" 
04:52:01.008 [error] C1 propagation "2020-08-06T04:52:01.847" 
04:52:07.930 [error] C2 propagation "2020-08-06T04:52:07.930" 
04:52:08.010 [error] C1 propagation "2020-08-06T04:52:08.103" 
04:52:08.452 [error] Sending find_sub batch [] 
04:52:08.452 [error] Sending find_sub_aq batch [] 
04:52:08.452 [error] batched message propagation "2020-08-06T04:52:08.452" 
04:52:15.012 [error] C1 propagation "2020-08-06T04:52:15.126" 
04:52:18.455 [error] Sending find_sub batch [] 
04:52:18.455 [error] Sending find_sub_aq batch [] 
04:52:18.455 [error] batched message propagation "2020-08-06T04:52:18.455" 
04:52:22.014 [error] C1 propagation "2020-08-06T04:52:22.145" 
04:52:27.661 [error] C3 propagation "2020-08-06T04:52:27.661" 
04:52:28.457 [error] Sending find_sub batch [] 
04:52:28.457 [error] Sending find_sub_aq batch [] 
04:52:28.457 [error] batched message propagation "2020-08-06T04:52:28.457" 
04:52:29.016 [error] C1 propagation "2020-08-06T04:52:29.165" 
04:52:36.017 [error] C1 propagation "2020-08-06T04:52:36.176" 
04:52:38.459 [error] Sending find_sub batch [] 
04:52:38.459 [error] Sending find_sub_aq batch [] 
04:52:38.459 [error] batched message propagation "2020-08-06T04:52:38.459" 
04:52:43.019 [error] C1 propagation "2020-08-06T04:52:43.195" 
04:52:47.932 [error] C2 propagation "2020-08-06T04:52:47.932" 
04:52:48.460 [error] Sending find_sub batch [] 
04:52:48.460 [error] Sending find_sub_aq batch [] 
04:52:48.461 [error] batched message propagation "2020-08-06T04:52:48.460" 
04:52:50.021 [error] C1 propagation "2020-08-06T04:52:50.214" 
04:52:57.022 [error] C1 propagation "2020-08-06T04:52:57.226" 
04:52:58.462 [error] Sending find_sub batch [] 
04:52:58.462 [error] Sending find_sub_aq batch [] 
04:52:58.462 [error] batched message propagation "2020-08-06T04:52:58.462" 
04:53:04.023 [error] C1 propagation "2020-08-06T04:53:04.234" 
04:53:08.464 [error] Sending find_sub batch [] 
04:53:08.464 [error] Sending find_sub_aq batch [] 
04:53:08.464 [error] batched message propagation "2020-08-06T04:53:08.464" 
04:53:11.025 [error] C1 propagation "2020-08-06T04:53:11.255" 
04:53:18.027 [error] C1 propagation "2020-08-06T04:53:18.275" 
04:53:18.465 [error] Sending find_sub batch [] 
04:53:18.465 [error] Sending find_sub_aq batch [] 
04:53:18.465 [error] batched message propagation "2020-08-06T04:53:18.465" 
04:53:25.028 [error] C1 propagation "2020-08-06T04:53:25.285" 
04:53:27.933 [error] C2 propagation "2020-08-06T04:53:27.933" 
04:53:28.467 [error] Sending find_sub batch [] 
04:53:28.467 [error] Sending find_sub_aq batch [] 
04:53:28.468 [error] batched message propagation "2020-08-06T04:53:28.467" 
04:53:32.030 [error] C1 propagation "2020-08-06T04:53:32.304" 
04:53:37.663 [error] C3 propagation "2020-08-06T04:53:37.663" 
04:53:38.469 [error] Sending find_sub batch [] 
04:53:38.469 [error] Sending find_sub_aq batch [] 
04:53:38.469 [error] batched message propagation "2020-08-06T04:53:38.469" 
04:53:39.032 [error] C1 propagation "2020-08-06T04:53:39.323" 
04:53:46.033 [error] C1 propagation "2020-08-06T04:53:46.335" 
04:53:48.471 [error] Sending find_sub batch [] 
04:53:48.471 [error] Sending find_sub_aq batch [] 
04:53:48.471 [error] batched message propagation "2020-08-06T04:53:48.471" 
04:53:53.035 [error] C1 propagation "2020-08-06T04:53:53.355" 
04:53:58.474 [error] Sending find_sub batch [] 
04:53:58.474 [error] Sending find_sub_aq batch [] 
04:53:58.474 [error] batched message propagation "2020-08-06T04:53:58.474" 
04:54:00.037 [error] C1 propagation "2020-08-06T04:54:00.375" 
04:54:07.038 [error] C1 propagation "2020-08-06T04:54:07.385" 
04:54:07.934 [error] C2 propagation "2020-08-06T04:54:07.934" 
04:54:08.475 [error] Sending find_sub batch [] 
04:54:08.475 [error] Sending find_sub_aq batch [] 
04:54:08.475 [error] batched message propagation "2020-08-06T04:54:08.475" 
04:54:14.039 [error] C1 propagation "2020-08-06T04:54:14.395" 
04:54:18.476 [error] Sending find_sub batch [] 
04:54:18.477 [error] Sending find_sub_aq batch [] 
04:54:18.477 [error] batched message propagation "2020-08-06T04:54:18.477" 
04:54:21.040 [error] C1 propagation "2020-08-06T04:54:21.403" 
04:54:28.041 [error] C1 propagation "2020-08-06T04:54:28.415" 
04:54:28.478 [error] Sending find_sub batch [] 
04:54:28.478 [error] Sending find_sub_aq batch [] 
04:54:28.478 [error] batched message propagation "2020-08-06T04:54:28.478" 
04:54:35.042 [error] C1 propagation "2020-08-06T04:54:35.426" 
04:54:38.479 [error] Sending find_sub batch [] 
04:54:38.479 [error] Sending find_sub_aq batch [] 
04:54:38.479 [error] batched message propagation "2020-08-06T04:54:38.479" 
04:54:42.043 [error] C1 propagation "2020-08-06T04:54:42.433" 
04:54:47.665 [error] C3 propagation "2020-08-06T04:54:47.665" 
04:54:47.935 [error] C2 propagation "2020-08-06T04:54:47.935" 
04:54:48.480 [error] Sending find_sub batch [] 
04:54:48.481 [error] Sending find_sub_aq batch [] 
04:54:48.481 [error] batched message propagation "2020-08-06T04:54:48.481" 
04:54:49.045 [error] C1 propagation "2020-08-06T04:54:49.455" 
04:54:56.046 [error] C1 propagation "2020-08-06T04:54:56.464" 
04:54:58.483 [error] Sending find_sub batch [] 
04:54:58.483 [error] Sending find_sub_aq batch [] 
04:54:58.483 [error] batched message propagation "2020-08-06T04:54:58.483" 
04:55:03.048 [error] C1 propagation "2020-08-06T04:55:03.484" 
04:55:08.484 [error] Sending find_sub batch [] 
04:55:08.484 [error] Sending find_sub_aq batch [] 
04:55:08.484 [error] batched message propagation "2020-08-06T04:55:08.484" 
04:55:10.050 [error] C1 propagation "2020-08-06T04:55:10.504" 
04:55:17.051 [error] C1 propagation "2020-08-06T04:55:17.514" 
04:55:18.486 [error] Sending find_sub batch [] 
04:55:18.486 [error] Sending find_sub_aq batch [] 
04:55:18.486 [error] batched message propagation "2020-08-06T04:55:18.486" 
04:55:24.052 [error] C1 propagation "2020-08-06T04:55:24.524" 
04:55:27.936 [error] C2 propagation "2020-08-06T04:55:27.936" 
04:55:28.488 [error] Sending find_sub batch [] 
04:55:28.488 [error] Sending find_sub_aq batch [] 
04:55:28.489 [error] batched message propagation "2020-08-06T04:55:28.489" 
04:55:31.054 [error] C1 propagation "2020-08-06T04:55:31.544" 
04:55:38.056 [error] C1 propagation "2020-08-06T04:55:38.565" 
04:55:38.490 [error] Sending find_sub batch [] 
04:55:38.490 [error] Sending find_sub_aq batch [] 
04:55:38.491 [error] batched message propagation "2020-08-06T04:55:38.490" 
04:55:45.058 [error] C1 propagation "2020-08-06T04:55:45.584" 
04:55:48.492 [error] Sending find_sub batch [] 
04:55:48.492 [error] Sending find_sub_aq batch [] 
04:55:48.493 [error] batched message propagation "2020-08-06T04:55:48.493" 
04:55:52.059 [error] C1 propagation "2020-08-06T04:55:52.594" 
04:55:57.666 [error] C3 propagation "2020-08-06T04:55:57.666" 
04:55:58.494 [error] Sending find_sub batch [] 
04:55:58.494 [error] Sending find_sub_aq batch [] 
04:55:58.494 [error] batched message propagation "2020-08-06T04:55:58.494" 
04:55:59.061 [error] C1 propagation "2020-08-06T04:55:59.614" 
04:56:06.062 [error] C1 propagation "2020-08-06T04:56:06.624" 
04:56:07.937 [error] C2 propagation "2020-08-06T04:56:07.937" 
04:56:08.496 [error] Sending find_sub batch [] 
04:56:08.496 [error] Sending find_sub_aq batch [] 
04:56:08.496 [error] batched message propagation "2020-08-06T04:56:08.496" 
04:56:13.063 [error] C1 propagation "2020-08-06T04:56:13.634" 
04:56:18.498 [error] Sending find_sub batch [] 
04:56:18.499 [error] Sending find_sub_aq batch [] 
04:56:18.499 [error] batched message propagation "2020-08-06T04:56:18.499" 
04:56:20.065 [error] C1 propagation "2020-08-06T04:56:20.654" 
04:56:27.067 [error] C1 propagation "2020-08-06T04:56:27.674" 
04:56:28.500 [error] Sending find_sub batch [] 
04:56:28.500 [error] Sending find_sub_aq batch [] 
04:56:28.500 [error] batched message propagation "2020-08-06T04:56:28.500" 
04:56:34.068 [error] C1 propagation "2020-08-06T04:56:34.684" 
04:56:38.502 [error] Sending find_sub batch [] 
04:56:38.502 [error] Sending find_sub_aq batch [] 
04:56:38.502 [error] batched message propagation "2020-08-06T04:56:38.502" 
04:56:41.069 [error] C1 propagation "2020-08-06T04:56:41.694" 
04:56:47.938 [error] C2 propagation "2020-08-06T04:56:47.938" 
04:56:48.070 [error] C1 propagation "2020-08-06T04:56:48.704" 
04:56:48.504 [error] Sending find_sub batch [] 
04:56:48.504 [error] Sending find_sub_aq batch [] 
04:56:48.504 [error] batched message propagation "2020-08-06T04:56:48.504" 
04:56:55.071 [error] C1 propagation "2020-08-06T04:56:55.714" 
04:56:58.506 [error] Sending find_sub batch [] 
04:56:58.506 [error] Sending find_sub_aq batch [] 
04:56:58.507 [error] batched message propagation "2020-08-06T04:56:58.506" 
04:57:02.072 [error] C1 propagation "2020-08-06T04:57:02.723" 
04:57:07.668 [error] C3 propagation "2020-08-06T04:57:07.668" 
04:57:08.508 [error] Sending find_sub batch [] 
04:57:08.508 [error] Sending find_sub_aq batch [] 
04:57:08.508 [error] batched message propagation "2020-08-06T04:57:08.508" 
04:57:09.074 [error] C1 propagation "2020-08-06T04:57:09.744" 
04:57:16.075 [error] C1 propagation "2020-08-06T04:57:16.754" 
04:57:18.510 [error] Sending find_sub batch [] 
04:57:18.510 [error] Sending find_sub_aq batch [] 
04:57:18.511 [error] batched message propagation "2020-08-06T04:57:18.510" 
04:57:23.076 [error] C1 propagation "2020-08-06T04:57:23.763" 
04:57:27.939 [error] C2 propagation "2020-08-06T04:57:27.939" 
04:57:28.512 [error] Sending find_sub batch [] 
04:57:28.512 [error] Sending find_sub_aq batch [] 
04:57:28.512 [error] batched message propagation "2020-08-06T04:57:28.512" 
04:57:30.078 [error] C1 propagation "2020-08-06T04:57:30.783" 
04:57:37.079 [error] C1 propagation "2020-08-06T04:57:37.794" 
04:57:38.514 [error] Sending find_sub batch [] 
04:57:38.514 [error] Sending find_sub_aq batch [] 
04:57:38.514 [error] batched message propagation "2020-08-06T04:57:38.514" 
04:57:44.080 [error] C1 propagation "2020-08-06T04:57:44.803" 
04:57:48.516 [error] Sending find_sub batch [] 
04:57:48.517 [error] Sending find_sub_aq batch [] 
04:57:48.517 [error] batched message propagation "2020-08-06T04:57:48.517" 
04:57:51.081 [error] C1 propagation "2020-08-06T04:57:51.814" 
04:57:58.083 [error] C1 propagation "2020-08-06T04:57:58.834" 
04:57:58.518 [error] Sending find_sub batch [] 
04:57:58.518 [error] Sending find_sub_aq batch [] 
04:57:58.519 [error] batched message propagation "2020-08-06T04:57:58.518" 
04:58:05.084 [error] C1 propagation "2020-08-06T04:58:05.844" 
04:58:07.940 [error] C2 propagation "2020-08-06T04:58:07.940" 
04:58:08.520 [error] Sending find_sub batch [] 
04:58:08.520 [error] Sending find_sub_aq batch [] 
04:58:08.520 [error] batched message propagation "2020-08-06T04:58:08.520" 
04:58:12.086 [error] C1 propagation "2020-08-06T04:58:12.863" 
04:58:17.669 [error] C3 propagation "2020-08-06T04:58:17.669" 
04:58:18.522 [error] Sending find_sub batch [] 
04:58:18.522 [error] Sending find_sub_aq batch [] 
04:58:18.522 [error] batched message propagation "2020-08-06T04:58:18.522" 
04:58:19.088 [error] C1 propagation "2020-08-06T04:58:19.883" 
04:58:26.089 [error] C1 propagation "2020-08-06T04:58:26.894" 
04:58:28.524 [error] Sending find_sub batch [] 
04:58:28.524 [error] Sending find_sub_aq batch [] 
04:58:28.524 [error] batched message propagation "2020-08-06T04:58:28.524" 
04:58:33.090 [error] C1 propagation "2020-08-06T04:58:33.904" 
04:58:38.526 [error] Sending find_sub batch [] 
04:58:38.526 [error] Sending find_sub_aq batch [] 
04:58:38.526 [error] batched message propagation "2020-08-06T04:58:38.526" 
04:58:40.091 [error] C1 propagation "2020-08-06T04:58:40.914" 
04:58:47.093 [error] C1 propagation "2020-08-06T04:58:47.935" 
04:58:47.942 [error] C2 propagation "2020-08-06T04:58:47.942" 
04:58:48.528 [error] Sending find_sub batch [] 
04:58:48.528 [error] Sending find_sub_aq batch [] 
04:58:48.528 [error] batched message propagation "2020-08-06T04:58:48.528" 
04:58:54.094 [error] C1 propagation "2020-08-06T04:58:54.944" 
04:58:58.530 [error] Sending find_sub batch [] 
04:58:58.530 [error] Sending find_sub_aq batch [] 
04:58:58.530 [error] batched message propagation "2020-08-06T04:58:58.530" 
04:59:01.095 [error] C1 propagation "2020-08-06T04:59:01.953" 
04:59:08.096 [error] C1 propagation "2020-08-06T04:59:08.964" 
04:59:08.532 [error] Sending find_sub batch [] 
04:59:08.532 [error] Sending find_sub_aq batch [] 
04:59:08.532 [error] batched message propagation "2020-08-06T04:59:08.532" 
04:59:15.098 [error] C1 propagation "2020-08-06T04:59:15.981" 
04:59:18.534 [error] Sending find_sub batch [] 
04:59:18.534 [error] Sending find_sub_aq batch [] 
04:59:18.534 [error] batched message propagation "2020-08-06T04:59:18.534" 
04:59:22.100 [error] C1 propagation "2020-08-06T04:59:22.100" 
04:59:27.670 [error] C3 propagation "2020-08-06T04:59:27.670" 
04:59:27.944 [error] C2 propagation "2020-08-06T04:59:27.944" 
04:59:28.536 [error] Sending find_sub batch [] 
04:59:28.536 [error] Sending find_sub_aq batch [] 
04:59:28.536 [error] batched message propagation "2020-08-06T04:59:28.536" 
04:59:29.101 [error] C1 propagation "2020-08-06T04:59:29.101" 
04:59:36.103 [error] C1 propagation "2020-08-06T04:59:36.103" 
04:59:38.538 [error] Sending find_sub batch [] 
04:59:38.538 [error] Sending find_sub_aq batch [] 
04:59:38.538 [error] batched message propagation "2020-08-06T04:59:38.538" 
04:59:43.104 [error] C1 propagation "2020-08-06T04:59:43.104" 
04:59:48.539 [error] Sending find_sub batch [] 
04:59:48.539 [error] Sending find_sub_aq batch [] 
04:59:48.539 [error] batched message propagation "2020-08-06T04:59:48.539" 
04:59:50.107 [error] C1 propagation "2020-08-06T04:59:50.106" 
04:59:57.108 [error] C1 propagation "2020-08-06T04:59:57.108" 
04:59:58.540 [error] Sending find_sub batch [] 
04:59:58.540 [error] Sending find_sub_aq batch [] 
04:59:58.540 [error] batched message propagation "2020-08-06T04:59:58.540" 
05:00:04.110 [error] C1 propagation "2020-08-06T05:00:04.110" 
05:00:07.945 [error] C2 propagation "2020-08-06T05:00:07.945" 
05:00:08.542 [error] Sending find_sub batch [] 
05:00:08.542 [error] Sending find_sub_aq batch [] 
05:00:08.542 [error] batched message propagation "2020-08-06T05:00:08.542" 
05:00:11.112 [error] C1 propagation "2020-08-06T05:00:11.112" 
05:00:18.114 [error] C1 propagation "2020-08-06T05:00:18.114" 
05:00:18.543 [error] Sending find_sub batch [] 
05:00:18.543 [error] Sending find_sub_aq batch [] 
05:00:18.543 [error] batched message propagation "2020-08-06T05:00:18.543" 
05:00:25.117 [error] C1 propagation "2020-08-06T05:00:25.117" 
05:00:28.544 [error] Sending find_sub batch [] 
05:00:28.544 [error] Sending find_sub_aq batch [] 
05:00:28.544 [error] batched message propagation "2020-08-06T05:00:28.544" 
05:00:32.119 [error] C1 propagation "2020-08-06T05:00:32.118" 
05:00:37.671 [error] C3 propagation "2020-08-06T05:00:37.671" 
05:00:38.546 [error] Sending find_sub batch [] 
05:00:38.546 [error] Sending find_sub_aq batch [] 
05:00:38.546 [error] batched message propagation "2020-08-06T05:00:38.546" 
05:00:39.120 [error] C1 propagation "2020-08-06T05:00:39.120" 
05:00:46.122 [error] C1 propagation "2020-08-06T05:00:46.122" 
05:00:47.946 [error] C2 propagation "2020-08-06T05:00:47.946" 
05:00:48.548 [error] Sending find_sub batch [] 
05:00:48.548 [error] Sending find_sub_aq batch [] 
05:00:48.548 [error] batched message propagation "2020-08-06T05:00:48.548" 
05:00:53.124 [error] C1 propagation "2020-08-06T05:00:53.124" 
05:00:58.550 [error] Sending find_sub batch [] 
05:00:58.550 [error] Sending find_sub_aq batch [] 
05:00:58.550 [error] batched message propagation "2020-08-06T05:00:58.550" 
05:01:00.126 [error] C1 propagation "2020-08-06T05:01:00.126" 
05:01:07.128 [error] C1 propagation "2020-08-06T05:01:07.128" 
05:01:08.552 [error] Sending find_sub batch [] 
05:01:08.552 [error] Sending find_sub_aq batch [] 
05:01:08.552 [error] batched message propagation "2020-08-06T05:01:08.552" 
05:01:14.130 [error] C1 propagation "2020-08-06T05:01:14.130" 
05:01:18.553 [error] Sending find_sub batch [] 
05:01:18.553 [error] Sending find_sub_aq batch [] 
05:01:18.553 [error] batched message propagation "2020-08-06T05:01:18.553" 
05:01:21.132 [error] C1 propagation "2020-08-06T05:01:21.132" 
05:01:27.947 [error] C2 propagation "2020-08-06T05:01:27.947" 
05:01:28.134 [error] C1 propagation "2020-08-06T05:01:28.134" 
05:01:28.554 [error] Sending find_sub batch [] 
05:01:28.554 [error] Sending find_sub_aq batch [] 
05:01:28.554 [error] batched message propagation "2020-08-06T05:01:28.554" 
05:01:35.135 [error] C1 propagation "2020-08-06T05:01:35.135" 
05:01:38.556 [error] Sending find_sub batch [] 
05:01:38.556 [error] Sending find_sub_aq batch [] 
05:01:38.556 [error] batched message propagation "2020-08-06T05:01:38.556" 
05:01:42.137 [error] C1 propagation "2020-08-06T05:01:42.137" 
05:01:47.673 [error] C3 propagation "2020-08-06T05:01:47.673" 
05:01:48.558 [error] Sending find_sub batch [] 
05:01:48.558 [error] Sending find_sub_aq batch [] 
05:01:48.558 [error] batched message propagation "2020-08-06T05:01:48.558" 
05:01:49.138 [error] C1 propagation "2020-08-06T05:01:49.138" 
05:01:56.140 [error] C1 propagation "2020-08-06T05:01:56.139" 
05:01:58.559 [error] Sending find_sub batch [] 
05:01:58.559 [error] Sending find_sub_aq batch [] 
05:01:58.559 [error] batched message propagation "2020-08-06T05:01:58.559" 
05:02:03.141 [error] C1 propagation "2020-08-06T05:02:03.141" 
05:02:07.948 [error] C2 propagation "2020-08-06T05:02:07.948" 
05:02:08.560 [error] Sending find_sub batch [] 
05:02:08.560 [error] Sending find_sub_aq batch [] 
05:02:08.560 [error] batched message propagation "2020-08-06T05:02:08.560" 
05:02:10.144 [error] C1 propagation "2020-08-06T05:02:10.144" 
05:02:17.147 [error] C1 propagation "2020-08-06T05:02:17.147" 
05:02:18.562 [error] Sending find_sub batch [] 
05:02:18.562 [error] Sending find_sub_aq batch [] 
05:02:18.562 [error] batched message propagation "2020-08-06T05:02:18.562" 
05:02:24.149 [error] C1 propagation "2020-08-06T05:02:24.149" 
05:02:28.564 [error] Sending find_sub batch [] 
05:02:28.564 [error] Sending find_sub_aq batch [] 
05:02:28.564 [error] batched message propagation "2020-08-06T05:02:28.564" 
05:02:31.150 [error] C1 propagation "2020-08-06T05:02:31.150" 
05:02:38.152 [error] C1 propagation "2020-08-06T05:02:38.152" 
05:02:38.565 [error] Sending find_sub batch [] 
05:02:38.565 [error] Sending find_sub_aq batch [] 
05:02:38.565 [error] batched message propagation "2020-08-06T05:02:38.565" 
05:02:45.155 [error] C1 propagation "2020-08-06T05:02:45.155" 
05:02:47.949 [error] C2 propagation "2020-08-06T05:02:47.949" 
05:02:48.566 [error] Sending find_sub batch [] 
05:02:48.566 [error] Sending find_sub_aq batch [] 
05:02:48.566 [error] batched message propagation "2020-08-06T05:02:48.566" 
05:02:52.157 [error] C1 propagation "2020-08-06T05:02:52.157" 
05:02:57.674 [error] C3 propagation "2020-08-06T05:02:57.674" 
05:02:58.568 [error] Sending find_sub batch [] 
05:02:58.568 [error] Sending find_sub_aq batch [] 
05:02:58.568 [error] batched message propagation "2020-08-06T05:02:58.568" 
05:02:59.158 [error] C1 propagation "2020-08-06T05:02:59.158" 
05:03:06.160 [error] C1 propagation "2020-08-06T05:03:06.160" 
05:03:08.570 [error] Sending find_sub batch [] 
05:03:08.570 [error] Sending find_sub_aq batch [] 
05:03:08.570 [error] batched message propagation "2020-08-06T05:03:08.570" 
05:03:13.161 [error] C1 propagation "2020-08-06T05:03:13.161" 
05:03:18.571 [error] Sending find_sub batch [] 
05:03:18.571 [error] Sending find_sub_aq batch [] 
05:03:18.571 [error] batched message propagation "2020-08-06T05:03:18.571" 
05:03:20.164 [error] C1 propagation "2020-08-06T05:03:20.163" 
05:03:27.166 [error] C1 propagation "2020-08-06T05:03:27.166" 
05:03:27.951 [error] C2 propagation "2020-08-06T05:03:27.951" 
05:03:28.572 [error] Sending find_sub batch [] 
05:03:28.572 [error] Sending find_sub_aq batch [] 
05:03:28.572 [error] batched message propagation "2020-08-06T05:03:28.572" 
05:03:34.167 [error] C1 propagation "2020-08-06T05:03:34.167" 
05:03:38.573 [error] Sending find_sub batch [] 
05:03:38.573 [error] Sending find_sub_aq batch [] 
05:03:38.573 [error] batched message propagation "2020-08-06T05:03:38.573" 
05:03:41.169 [error] C1 propagation "2020-08-06T05:03:41.169" 
05:03:48.171 [error] C1 propagation "2020-08-06T05:03:48.171" 
05:03:48.575 [error] Sending find_sub batch [] 
05:03:48.575 [error] Sending find_sub_aq batch [] 
05:03:48.575 [error] batched message propagation "2020-08-06T05:03:48.575" 
05:03:55.172 [error] C1 propagation "2020-08-06T05:03:55.172" 
05:03:58.576 [error] Sending find_sub batch [] 
05:03:58.576 [error] Sending find_sub_aq batch [] 
05:03:58.576 [error] batched message propagation "2020-08-06T05:03:58.576" 
05:04:02.174 [error] C1 propagation "2020-08-06T05:04:02.174" 
05:04:07.676 [error] C3 propagation "2020-08-06T05:04:07.676" 
05:04:07.953 [error] C2 propagation "2020-08-06T05:04:07.953" 
05:04:08.578 [error] Sending find_sub batch [] 
05:04:08.578 [error] Sending find_sub_aq batch [] 
05:04:08.578 [error] batched message propagation "2020-08-06T05:04:08.578" 
05:04:09.175 [error] C1 propagation "2020-08-06T05:04:09.175" 
05:04:16.176 [error] C1 propagation "2020-08-06T05:04:16.176" 
05:04:18.579 [error] Sending find_sub batch [] 
05:04:18.579 [error] Sending find_sub_aq batch [] 
05:04:18.579 [error] batched message propagation "2020-08-06T05:04:18.579" 
05:04:23.177 [error] C1 propagation "2020-08-06T05:04:23.177" 
05:04:28.581 [error] Sending find_sub batch [] 
05:04:28.581 [error] Sending find_sub_aq batch [] 
05:04:28.581 [error] batched message propagation "2020-08-06T05:04:28.581" 
05:04:30.179 [error] C1 propagation "2020-08-06T05:04:30.179" 
05:04:37.181 [error] C1 propagation "2020-08-06T05:04:37.181" 
05:04:38.582 [error] Sending find_sub batch [] 
05:04:38.582 [error] Sending find_sub_aq batch [] 
05:04:38.582 [error] batched message propagation "2020-08-06T05:04:38.582" 
05:04:44.182 [error] C1 propagation "2020-08-06T05:04:44.182" 
