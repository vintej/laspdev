

root@csst-06:/home/ubuntu/laspdev# 
root@csst-06:/home/ubuntu/laspdev# python /home/ubuntu/laspdev/utility/setup_laspp.py d17
d17
ip:11.0.0.17
node:g
root@d17:/# [Kroot@d17:/# service vnstat start
[....] Starting vnStat daemon: vnstatd[?25l7[1G[[32m ok [39;49m8[?12l[?25h.
root@d17:/# sysctl -w net.ipv4.ip_forward=0
net.ipv4.ip_forward = 0
root@d17:/# vnstat -u -i d17-eth0
Error: Unable to read database "/var/lib/vnstat/d17-eth0": No such file or directory
Info: -> A new database has been created.
root@d17:/# vnstat -u
root@d17:/# vnstat

                      rx      /      tx      /     total    /   estimated
 d17-eth0: Not enough data available yet.
 eth0:
       Jul '20      4.00 GiB  /       7 KiB  /    4.00 GiB
       Aug '20         0 KiB  /       0 KiB  /       0 KiB  /       0 KiB
      07/06/20      4.00 GiB  /       0 KiB  /    4.00 GiB
         today         0 KiB  /       0 KiB  /       0 KiB  /      --    

root@d17:/# export PEER_SERVICE=partisan_hyparview_peer_service_manager
root@d17:/# export RATE_CLASS=c1
root@d17:/# export RATE_C1=7000
root@d17:/# export RATE_C2=40000
root@d17:/# export RATE_C3=70000
root@d17:/# export DELTA_INTERVAL=7000
root@d17:/# export PROPAGATE_ON_UPDATE=false
root@d17:/# export MAX_ACTIVE_SIZE=50
root@d17:/# cd /opt/lasp
root@d17:/opt/lasp# epmd -daemon
root@d17:/opt/lasp# rebar3 shell --name g@11.0.0.17
[0;32m===> Verifying dependencies...
[0m[0;32m===> Compiling lasp
[0mErlang/OTP 19 [erts-8.3] [source] [64-bit] [smp:24:24] [ds:24:24:10] [async-threads:0] [hipe] [kernel-poll:false]

Eshell V8.3  (abort with ^G)
(g@11.0.0.17)1> [0;35m===> The rebar3 shell is a development tool; to deploy applications in production, consider using releases (http://www.rebar3.org/docs/releases)
[0m03:54:04.115 [info] Application lager started on node 'g@11.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
          supervisor: {local,sasl_safe_sup}
             started: [{pid,<0.253.0>},
                       {id,alarm_handler},
                       {mfargs,{alarm_handler,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,2000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
          supervisor: {local,sasl_sup}
             started: [{pid,<0.252.0>},
                       {id,sasl_safe_sup},
                       {mfargs,
                           {supervisor,start_link,
                               [{local,sasl_safe_sup},sasl,safe]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
          supervisor: {local,sasl_sup}
             started: [{pid,<0.254.0>},
                       {id,release_handler},
                       {mfargs,{release_handler,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,2000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
         application: sasl
          started_at: 'g@11.0.0.17'
03:54:04.290 [info] Application sasl started on node 'g@11.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
         application: lasp_support
          started_at: 'g@11.0.0.17'
03:54:04.290 [info] Application lasp_support started on node 'g@11.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
         application: acceptor_pool
          started_at: 'g@11.0.0.17'
03:54:04.291 [info] Application acceptor_pool started on node 'g@11.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
         application: quickrand
          started_at: 'g@11.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
         application: uuid
          started_at: 'g@11.0.0.17'
03:54:04.294 [info] Application quickrand started on node 'g@11.0.0.17'
03:54:04.294 [info] Application uuid started on node 'g@11.0.0.17'
03:54:04.304 [info] Using node name: 'g@11.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
          supervisor: {local,kernel_safe_sup}
             started: [{pid,<0.266.0>},
                       {id,timer_server},
                       {mfargs,{timer,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,1000},
                       {child_type,worker}]
03:54:04.343 [info] Resolving "11.0.0.17"...

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
          supervisor: {local,inet_gethost_native_sup}
             started: [{pid,<0.268.0>},{mfa,{inet_gethost_native,init,[[]]}}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
          supervisor: {local,kernel_safe_sup}
             started: [{pid,<0.267.0>},
                       {id,inet_gethost_native_sup},
                       {mfargs,{inet_gethost_native,start_link,[]}},
                       {restart_type,temporary},
                       {shutdown,1000},
                       {child_type,worker}]
03:54:04.355 [info] Resolved "g@11.0.0.17" to {11,0,0,17}
03:54:04.355 [info] Resolved "11.0.0.17" to {11,0,0,17}
03:54:04.804 [info] Partisan listening on {11,0,0,17}:59871 listen_addrs: [#{ip => {11,0,0,17},port => 59871}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.313.0>},
                       {id,partisan_rpc_backend},
                       {mfargs,{partisan_rpc_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.314.0>},
                       {id,partisan_acknowledgement_backend},
                       {mfargs,
                           {partisan_acknowledgement_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:04.889 [info] Not using container orchestration; disabling.

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.315.0>},
                       {id,partisan_orchestration_backend},
                       {mfargs,{partisan_orchestration_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:04.987 [info] node 'g@11.0.0.17' choosing random seed: {51930716,-576460745665214863,-576460752303423421}

=PROGRESS REPORT==== 6-Aug-2020::03:54:04 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.316.0>},
                       {id,partisan_hyparview_peer_service_manager},
                       {mfargs,
                           {partisan_hyparview_peer_service_manager,
                               start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.317.0>},
                       {id,partisan_peer_service_events},
                       {mfargs,{partisan_peer_service_events,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:05.022 [info] node 'g@11.0.0.17' choosing random seed: {51930716,-576460745665214863,-576460752303423421}

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.318.0>},
                       {id,partisan_plumtree_backend},
                       {mfargs,{partisan_plumtree_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.319.0>},
                       {id,partisan_plumtree_broadcast},
                       {mfargs,{partisan_plumtree_broadcast,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.320.0>},
                       {id,partisan_monitor},
                       {mfargs,{partisan_monitor,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,partisan_pool_sup}
             started: [{pid,<0.322.0>},
                       {id,partisan_pool},
                       {mfargs,{partisan_pool,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,partisan_pool_sup}
             started: [{pid,<0.323.0>},
                       {id,{partisan_socket,{11,0,0,17},59871}},
                       {mfargs,
                           {partisan_socket,start_link,[{11,0,0,17},59871]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.321.0>},
                       {id,partisan_pool_sup},
                       {mfargs,{partisan_pool_sup,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,20000},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: partisan
          started_at: 'g@11.0.0.17'
03:54:05.319 [info] Application partisan started on node 'g@11.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,plumtree_sup}
             started: [{pid,<0.338.0>},
                       {id,plumtree_broadcast},
                       {mfargs,{plumtree_broadcast,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: plumtree
          started_at: 'g@11.0.0.17'
03:54:05.399 [info] Application plumtree started on node 'g@11.0.0.17'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: gen_fsm_compat
          started_at: 'g@11.0.0.17'
03:54:05.400 [info] Application gen_fsm_compat started on node 'g@11.0.0.17'
03:54:05.405 [info] Setting jitter: false
03:54:05.451 [info] Setting jitter percent: 1
03:54:05.453 [info] Setting event interval: 0
03:54:05.455 [info] Setting max events: 1000
03:54:05.456 [info] Setting extended logging: false
03:54:05.467 [info] Setting mailbox logging: false
03:54:05.469 [info] Setting operation mode: delta_based
03:54:05.477 [info] Setting set type: orset
03:54:05.480 [info] Setting broadcast: false
03:54:05.603 [info] Membership: false
03:54:05.604 [info] Workflow: false
03:54:05.620 [info] AdClientEnabled: false
03:54:05.623 [info] AdServerEnabled: false
03:54:05.626 [info] TournClientEnabled: false
03:54:05.630 [info] TournServerEnabled: false
03:54:05.634 [info] ThroughputType: gset
03:54:05.650 [info] ThroughputClientEnabled: false
03:54:05.654 [info] ThroughputServerEnabled: false
03:54:05.664 [info] DivergenceType: gcounter
03:54:05.669 [info] DivergenceClientEnabled: false
03:54:05.672 [info] DivergenceServerEnabled: false

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.385.0>},
                       {id,lasp_unique},
                       {mfargs,{lasp_unique,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.386.0>},
                       {id,lasp_plumtree_backend},
                       {mfargs,{lasp_plumtree_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.387.0>},
                       {id,lasp_plumtree_memory_report},
                       {mfargs,{lasp_plumtree_memory_report,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.388.0>},
                       {id,lasp_memory_utilization_report},
                       {mfargs,{lasp_memory_utilization_report,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:05.856 [info] Backend initialized with pid: <0.393.0>
03:54:05.857 [info] Backend lasp_ets_storage_backend initialized: <0.393.0>

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.389.0>},
                       {id,lasp_distribution_backend},
                       {mfargs,{lasp_distribution_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:05.887 [error] Rate Propagations c1: "7000" c2:"40000" c3:"70000" 
03:54:05.887 [error] C1 propagation "2020-08-06T03:54:05.887" 

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.395.0>},
                       {id,lasp_process_sup},
                       {mfargs,{lasp_process_sup,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,supervisor}]
[0;32m===> Booted types
[0m
=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: lasp
          started_at: 'g@11.0.0.17'
[0;32m===> Booted gen_flow
[0m[0;32m===> Booted syntax_tools
[0m[0;32m===> Booted compiler
[0m[0;32m===> Booted goldrush
[0m[0;32m===> Booted lager
[0m[0;32m===> Booted sasl
[0m[0;32m===> Booted lasp_support
[0m[0;32m===> Booted acceptor_pool
[0m[0;32m===> Booted quickrand
[0m[0;32m===> Booted uuid
[0m[0;32m===> Booted partisan
[0m[0;32m===> Booted plumtree
[0m[0;32m===> Booted gen_fsm_compat
[0m[0;32m===> Booted lasp
[0m03:54:05.887 [error] C2 propagation "2020-08-06T03:54:05.887" 
03:54:05.887 [error] C3 propagation "2020-08-06T03:54:05.887" 
03:54:05.887 [error] batched message propagation "2020-08-06T03:54:05.887" 
03:54:05.897 [info] Application lasp started on node 'g@11.0.0.17'

(g@11.0.0.17)1> erlang:set_cookie(node(),'RPJVCXYDYULBNZFEFPHJ').
true
(g@11.0.0.17)2> application:get_env(partisan, max_active_size).
{ok,50}
(g@11.0.0.17)3> application:get_env(partisan, max_passive_size).
{ok,10}
(g@11.0.0.17)4> application:get_env(partisan, min_active_size).
{ok,9}
(g@11.0.0.17)5> lasp_config:get(delta_interval, 7500).
7000
(g@11.0.0.17)6> partisan_config:set(passive_view_shuffle_period, 1000000000).
ok
(g@11.0.0.17)7> partisan_config:get(passive_view_shuffle_period).
1000000000
(g@11.0.0.17)8> )8> 03:54:10.919 [error] Id is not get_connections(): [] 
03:54:10.919 [error] Requesting c1 sub ~n
03:54:10.919 [error] Forwarding Req Id "g@11.0.0.17c1" to Peers RcvHop:0 IncHop:1 
03:54:12.888 [error] C1 propagation "2020-08-06T03:54:12.888" 
03:54:15.889 [error] Sending find_sub batch [] 
03:54:15.889 [error] Sending find_sub_aq batch [] 
03:54:15.889 [error] batched message propagation "2020-08-06T03:54:15.889" 
03:54:19.889 [error] C1 propagation "2020-08-06T03:54:19.889" 
03:54:25.891 [error] Sending find_sub batch [] 
03:54:25.891 [error] Sending find_sub_aq batch [] 
03:54:25.891 [error] batched message propagation "2020-08-06T03:54:25.891" 
03:54:26.890 [error] C1 propagation "2020-08-06T03:54:26.890" 
03:54:33.892 [error] C1 propagation "2020-08-06T03:54:33.892" 
03:54:35.893 [error] Sending find_sub batch [] 
03:54:35.893 [error] Sending find_sub_aq batch [] 
03:54:35.893 [error] batched message propagation "2020-08-06T03:54:35.893" 
03:54:40.893 [error] C1 propagation "2020-08-06T03:54:40.893" 
03:54:45.889 [error] C2 propagation "2020-08-06T03:54:45.889" 
03:54:45.895 [error] Sending find_sub batch [] 
03:54:45.895 [error] Sending find_sub_aq batch [] 
03:54:45.895 [error] batched message propagation "2020-08-06T03:54:45.895" 
03:54:47.894 [error] C1 propagation "2020-08-06T03:54:47.894" 
03:54:54.896 [error] C1 propagation "2020-08-06T03:54:54.896" 
03:54:55.897 [error] Sending find_sub batch [] 
03:54:55.897 [error] Sending find_sub_aq batch [] 
03:54:55.897 [error] batched message propagation "2020-08-06T03:54:55.897" 
03:55:01.898 [error] C1 propagation "2020-08-06T03:55:01.898" 
03:55:05.898 [error] Sending find_sub batch [] 
03:55:05.898 [error] Sending find_sub_aq batch [] 
03:55:05.898 [error] batched message propagation "2020-08-06T03:55:05.898" 
03:55:08.899 [error] C1 propagation "2020-08-06T03:55:08.899" 
03:55:15.889 [error] C3 propagation "2020-08-06T03:55:15.889" 
03:55:15.899 [error] Sending find_sub batch [] 
03:55:15.899 [error] Sending find_sub_aq batch [] 
03:55:15.899 [error] batched message propagation "2020-08-06T03:55:15.899" 
03:55:15.901 [error] C1 propagation "2020-08-06T03:55:15.901" 
03:55:22.903 [error] C1 propagation "2020-08-06T03:55:22.903" 
03:55:25.891 [error] C2 propagation "2020-08-06T03:55:25.891" 
03:55:25.944 [error] Sending find_sub batch [] 
03:55:25.944 [error] Sending find_sub_aq batch [] 
03:55:25.944 [error] batched message propagation "2020-08-06T03:55:25.944" 
03:55:29.904 [error] C1 propagation "2020-08-06T03:55:29.904" 
03:55:35.946 [error] Sending find_sub batch [] 
03:55:35.946 [error] Sending find_sub_aq batch [] 
03:55:35.946 [error] batched message propagation "2020-08-06T03:55:35.946" 
03:55:36.905 [error] C1 propagation "2020-08-06T03:55:36.905" 
03:55:43.906 [error] C1 propagation "2020-08-06T03:55:43.906" 
03:55:45.947 [error] Sending find_sub batch [] 
03:55:45.947 [error] Sending find_sub_aq batch [] 
03:55:45.947 [error] batched message propagation "2020-08-06T03:55:45.947" 
lasp_peer_service:join('a@11.0.0.11').
ok
(g@11.0.0.17)9> 03:55:50.907 [error] C1 propagation "2020-08-06T03:55:50.907" 
03:55:51.990 [error] Sending rate "c1" to 'a@11.0.0.11' 
lasp_peer_service:members().
{ok,['a@11.0.0.11','g@11.0.0.17']}
(g@11.0.0.17)10> 03:55:55.949 [error] Sending find_sub batch [] 
03:55:55.949 [error] Sending find_sub_aq batch [] 
03:55:55.949 [error] batched message propagation "2020-08-06T03:55:55.949" 
03:55:56.993 [error] Sending rate "c1" to 'a@11.0.0.11' 
03:55:57.908 [error] C1 propagation "2020-08-06T03:55:57.908" 
03:56:02.019 [error] Sending rate "c1" to 'a@11.0.0.11' 
03:56:04.910 [error] C1 propagation "2020-08-06T03:56:04.910" 
03:56:05.893 [error] C2 propagation "2020-08-06T03:56:05.893" 
03:56:05.950 [error] Sending find_sub batch [] 
03:56:05.950 [error] Sending find_sub_aq batch [] 
03:56:05.950 [error] batched message propagation "2020-08-06T03:56:05.950" 
03:56:07.022 [error] Sending rate "c1" to 'a@11.0.0.11' 
lasp_delta_based_synchronization_backend:get_members(peer_rates).
[{"self_rate","c1"}]
(g@11.0.0.17)11> 03:56:11.912 [error] C1 propagation "2020-08-06T03:56:11.912" 
03:56:12.023 [error] Sending rate "c1" to 'a@11.0.0.11' 
03:56:12.023 [error] Refreshing peer_rates ~n
03:56:15.952 [error] Sending find_sub batch [] 
03:56:15.952 [error] Sending find_sub_aq batch [] 
03:56:15.952 [error] batched message propagation "2020-08-06T03:56:15.952" 
03:56:17.046 [error] Sending rate "c1" to 'a@11.0.0.11' 
03:56:18.914 [error] C1 propagation "2020-08-06T03:56:18.914" 
03:56:22.048 [error] Sending rate "c1" to 'a@11.0.0.11' 
03:56:25.891 [error] C3 propagation "2020-08-06T03:56:25.891" 
03:56:25.916 [error] C1 propagation "2020-08-06T03:56:25.916" 
03:56:25.954 [error] Sending find_sub batch [] 
03:56:25.954 [error] Sending find_sub_aq batch [] 
03:56:25.954 [error] batched message propagation "2020-08-06T03:56:25.954" 
03:56:27.050 [error] Sending rate "c1" to 'a@11.0.0.11' 
03:56:32.054 [error] Sending rate "c1" to 'a@11.0.0.11' 
03:56:32.917 [error] C1 propagation "2020-08-06T03:56:32.917" 
03:56:35.956 [error] Sending find_sub batch [] 
03:56:35.956 [error] Sending find_sub_aq batch [] 
03:56:35.956 [error] batched message propagation "2020-08-06T03:56:35.956" 
03:56:37.056 [error] Sending rate "c1" to 'a@11.0.0.11' 
03:56:39.918 [error] C1 propagation "2020-08-06T03:56:39.918" 
03:56:42.058 [error] Sending rate "c1" to 'a@11.0.0.11' 
03:56:45.895 [error] C2 propagation "2020-08-06T03:56:45.895" 
03:56:45.958 [error] Sending find_sub batch [] 
03:56:45.958 [error] Sending find_sub_aq batch [] 
03:56:45.958 [error] batched message propagation "2020-08-06T03:56:45.958" 
03:56:46.919 [error] C1 propagation "2020-08-06T03:56:46.919" 
03:56:47.272 [error] LASPVIN found the peer at "2020-08-06T03:56:47.271" for ID: "g@11.0.0.17c1" ToNode: 'a@11.0.0.11' Via:'g@11.0.0.17' 
03:56:47.313 [error] Path ToNode:'a@11.0.0.11' does not exists in find_sub_aq
03:56:47.313 [error] ToNode must be a peer 'a@11.0.0.11' as From is self for Id "g@11.0.0.17c1" 
03:56:47.313 [error] Sending Subscription to 'a@11.0.0.11' case4 
03:56:52.063 [error] Sending Subscription to 'a@11.0.0.11' case4 
03:56:53.920 [error] C1 propagation "2020-08-06T03:56:53.920" 
03:56:55.960 [error] Sending find_sub batch [] 
03:56:55.960 [error] Sending find_sub_aq batch [] 
03:56:55.960 [error] batched message propagation "2020-08-06T03:56:55.960" 
03:56:57.066 [error] Sending Subscription to 'a@11.0.0.11' case4 
03:57:00.921 [error] C1 propagation "2020-08-06T03:57:00.921" 
03:57:02.068 [error] Sending Subscription to 'a@11.0.0.11' case4 
03:57:05.962 [error] Sending find_sub batch [] 
03:57:05.962 [error] Sending find_sub_aq batch [] 
03:57:05.962 [error] batched message propagation "2020-08-06T03:57:05.962" 
03:57:07.071 [error] Sending Subscription to 'a@11.0.0.11' case4 
03:57:07.922 [error] C1 propagation "2020-08-06T03:57:07.922" 
03:57:12.073 [error] Sending Subscription to 'a@11.0.0.11' case4 
03:57:14.924 [error] C1 propagation "2020-08-06T03:57:14.924" 
03:57:15.964 [error] Sending find_sub batch [] 
03:57:15.964 [error] Sending find_sub_aq batch [] 
03:57:15.964 [error] batched message propagation "2020-08-06T03:57:15.964" 
03:57:17.074 [error] Sending Subscription to 'a@11.0.0.11' case4 
03:57:21.926 [error] C1 propagation "2020-08-06T03:57:21.926" 
03:57:22.077 [error] Sending Subscription to 'a@11.0.0.11' case4 
03:57:25.897 [error] C2 propagation "2020-08-06T03:57:25.897" 
03:57:25.966 [error] Sending find_sub batch [] 
03:57:25.966 [error] Sending find_sub_aq batch [] 
03:57:25.966 [error] batched message propagation "2020-08-06T03:57:25.966" 
03:57:27.079 [error] Sending Subscription to 'a@11.0.0.11' case4 
03:57:28.927 [error] C1 propagation "2020-08-06T03:57:28.927" 
03:57:32.082 [error] Sending Subscription to 'a@11.0.0.11' case4 
03:57:35.892 [error] C3 propagation "2020-08-06T03:57:35.892" 
03:57:35.928 [error] C1 propagation "2020-08-06T03:57:35.928" 
03:57:35.967 [error] Sending find_sub batch [] 
03:57:35.967 [error] Sending find_sub_aq batch [] 
03:57:35.967 [error] batched message propagation "2020-08-06T03:57:35.967" 
03:57:37.085 [error] Sending Subscription to 'a@11.0.0.11' case4 
03:57:40.068 [error] Rate_subscribe_ack received from 'a@11.0.0.11' for rate "c1" 
03:57:40.068 [error] Rate_subscribe_ack received from 'a@11.0.0.11' for rate "c1" 
03:57:40.076 [error] Rate_subscribe_ack received from 'a@11.0.0.11' for rate "c1" 
03:57:40.077 [error] Rate_subscribe_ack received from 'a@11.0.0.11' for rate "c1" 
03:57:40.077 [error] Rate_subscribe_ack received from 'a@11.0.0.11' for rate "c1" 
03:57:42.929 [error] C1 propagation "2020-08-06T03:57:42.929" 
03:57:45.969 [error] Sending find_sub batch [] 
03:57:45.969 [error] Sending find_sub_aq batch [] 
03:57:45.969 [error] batched message propagation "2020-08-06T03:57:45.969" 
03:57:49.930 [error] C1 propagation "2020-08-06T03:57:49.930" 
03:57:55.971 [error] Sending find_sub batch [] 
03:57:55.971 [error] Sending find_sub_aq batch [] 
03:57:55.971 [error] batched message propagation "2020-08-06T03:57:55.971" 
03:57:56.932 [error] C1 propagation "2020-08-06T03:57:56.932" 
03:58:03.933 [error] C1 propagation "2020-08-06T03:58:03.933" 
03:58:05.899 [error] C2 propagation "2020-08-06T03:58:05.899" 
03:58:05.973 [error] Sending find_sub batch [] 
03:58:05.973 [error] Sending find_sub_aq batch [] 
03:58:05.973 [error] batched message propagation "2020-08-06T03:58:05.973" 
03:58:10.934 [error] C1 propagation "2020-08-06T03:58:10.934" 
03:58:15.975 [error] Sending find_sub batch [] 
03:58:15.975 [error] Sending find_sub_aq batch [] 
03:58:15.975 [error] batched message propagation "2020-08-06T03:58:15.975" 
03:58:17.935 [error] C1 propagation "2020-08-06T03:58:17.935" 
03:58:24.937 [error] C1 propagation "2020-08-06T03:58:24.937" 
03:58:25.977 [error] Sending find_sub batch [] 
03:58:25.977 [error] Sending find_sub_aq batch [] 
03:58:25.977 [error] batched message propagation "2020-08-06T03:58:25.977" 
03:58:30.149 [error] Rate_subscribe_ack received from 'a@11.0.0.11' for rate "c1" 
03:58:30.149 [error] Rate_subscribe_ack received from 'a@11.0.0.11' for rate "c1" 
03:58:30.149 [error] Rate_subscribe_ack received from 'a@11.0.0.11' for rate "c1" 
03:58:30.149 [error] Rate_subscribe_ack received from 'a@11.0.0.11' for rate "c1" 
03:58:30.151 [error] Rate_subscribe_ack received from 'a@11.0.0.11' for rate "c1" 
03:58:30.151 [error] Rate_subscribe_ack received from 'a@11.0.0.11' for rate "c1" 
03:58:31.939 [error] C1 propagation "2020-08-06T03:58:31.939" 
03:58:35.979 [error] Sending find_sub batch [] 
03:58:35.979 [error] Sending find_sub_aq batch [] 
03:58:35.979 [error] batched message propagation "2020-08-06T03:58:35.979" 
lasp_delta_based_synchronization_backend:get_members(peer_rates).
[{'a@11.0.0.11',"c1"},
 {"self_rate","c1"},
 {"subscription",'a@11.0.0.11'}]
(g@11.0.0.17)12> 03:58:38.940 [error] C1 propagation "2020-08-06T03:58:38.940" 
03:58:45.893 [error] C3 propagation "2020-08-06T03:58:45.893" 
03:58:45.900 [error] C2 propagation "2020-08-06T03:58:45.900" 
03:58:45.941 [error] C1 propagation "2020-08-06T03:58:45.941" 
03:58:45.981 [error] Sending find_sub batch [] 
03:58:45.981 [error] Sending find_sub_aq batch [] 
03:58:45.981 [error] batched message propagation "2020-08-06T03:58:45.981" 
03:58:52.942 [error] C1 propagation "2020-08-06T03:58:52.942" 
03:58:55.983 [error] Sending find_sub batch [] 
03:58:55.983 [error] Sending find_sub_aq batch [] 
03:58:55.983 [error] batched message propagation "2020-08-06T03:58:55.983" 
03:58:59.943 [error] C1 propagation "2020-08-06T03:58:59.943" 
03:59:05.985 [error] Sending find_sub batch [] 
03:59:05.985 [error] Sending find_sub_aq batch [] 
03:59:05.985 [error] batched message propagation "2020-08-06T03:59:05.985" 
03:59:06.944 [error] C1 propagation "2020-08-06T03:59:06.944" 
03:59:13.946 [error] C1 propagation "2020-08-06T03:59:13.946" 
03:59:15.987 [error] Sending find_sub batch [] 
03:59:15.987 [error] Sending find_sub_aq batch [] 
03:59:15.987 [error] batched message propagation "2020-08-06T03:59:15.987" 
03:59:20.950 [error] C1 propagation "2020-08-06T03:59:20.950" 
03:59:25.901 [error] C2 propagation "2020-08-06T03:59:25.901" 
03:59:25.988 [error] Sending find_sub batch [] 
03:59:25.988 [error] Sending find_sub_aq batch [] 
03:59:25.988 [error] batched message propagation "2020-08-06T03:59:25.988" 
03:59:27.951 [error] C1 propagation "2020-08-06T03:59:27.951" 
03:59:34.952 [error] C1 propagation "2020-08-06T03:59:34.952" 
03:59:35.989 [error] Sending find_sub batch [] 
03:59:35.989 [error] Sending find_sub_aq batch [] 
03:59:35.989 [error] batched message propagation "2020-08-06T03:59:35.989" 
03:59:41.953 [error] C1 propagation "2020-08-06T03:59:41.953" 
03:59:45.991 [error] Sending find_sub batch [] 
03:59:45.991 [error] Sending find_sub_aq batch [] 
03:59:45.991 [error] batched message propagation "2020-08-06T03:59:45.991" 
03:59:48.954 [error] C1 propagation "2020-08-06T03:59:48.954" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)13> AwMapRes.
[]
(g@11.0.0.17)14> f(AwMapRes).
ok
(g@11.0.0.17)15> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T03:59:53.104"
(g@11.0.0.17)16> 03:59:55.894 [error] C3 propagation "2020-08-06T03:59:55.894" 
03:59:55.955 [error] C1 propagation "2020-08-06T03:59:55.955" 
03:59:55.992 [error] Sending find_sub batch [] 
03:59:55.992 [error] Sending find_sub_aq batch [] 
03:59:55.992 [error] batched message propagation "2020-08-06T03:59:55.992" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)17> AwMapRes.
[]
(g@11.0.0.17)18> f(AwMapRes).
ok
(g@11.0.0.17)19> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:01.127"
(g@11.0.0.17)20> 04:00:02.956 [error] C1 propagation "2020-08-06T04:00:02.956" 
04:00:05.903 [error] C2 propagation "2020-08-06T04:00:05.903" 
04:00:05.994 [error] Sending find_sub batch [] 
04:00:05.994 [error] Sending find_sub_aq batch [] 
04:00:05.994 [error] batched message propagation "2020-08-06T04:00:05.994" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)21> AwMapRes.
[]
(g@11.0.0.17)22> f(AwMapRes).
ok
(g@11.0.0.17)23> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:09.164"
(g@11.0.0.17)24> 04:00:09.957 [error] C1 propagation "2020-08-06T04:00:09.957" 
04:00:15.996 [error] Sending find_sub batch [] 
04:00:15.996 [error] Sending find_sub_aq batch [] 
04:00:15.996 [error] batched message propagation "2020-08-06T04:00:15.996" 
04:00:16.958 [error] C1 propagation "2020-08-06T04:00:16.958" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)25> AwMapRes.
[]
(g@11.0.0.17)26> f(AwMapRes).
ok
(g@11.0.0.17)27> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:17.199"
(g@11.0.0.17)28> 04:00:23.959 [error] C1 propagation "2020-08-06T04:00:23.959" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)29> AwMapRes.
[]
(g@11.0.0.17)30> f(AwMapRes).
ok
(g@11.0.0.17)31> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:25.237"
(g@11.0.0.17)32> 04:00:25.998 [error] Sending find_sub batch [] 
04:00:25.998 [error] Sending find_sub_aq batch [] 
04:00:25.998 [error] batched message propagation "2020-08-06T04:00:25.998" 
04:00:30.961 [error] C1 propagation "2020-08-06T04:00:30.961" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)33> AwMapRes.
[]
(g@11.0.0.17)34> f(AwMapRes).
ok
(g@11.0.0.17)35> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:33.273"
(g@11.0.0.17)36> 04:00:36.000 [error] Sending find_sub batch [] 
04:00:36.000 [error] Sending find_sub_aq batch [] 
04:00:36.000 [error] batched message propagation "2020-08-06T04:00:36.507" 
04:00:37.962 [error] C1 propagation "2020-08-06T04:00:37.962" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)37> AwMapRes.
[]
(g@11.0.0.17)38> f(AwMapRes).
ok
(g@11.0.0.17)39> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:41.312"
(g@11.0.0.17)40> 04:00:44.964 [error] C1 propagation "2020-08-06T04:00:44.964" 
04:00:45.904 [error] C2 propagation "2020-08-06T04:00:45.904" 
04:00:46.002 [error] Sending find_sub batch [] 
04:00:46.002 [error] Sending find_sub_aq batch [] 
04:00:46.002 [error] batched message propagation "2020-08-06T04:00:46.238" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)41> AwMapRes.
[]
(g@11.0.0.17)42> f(AwMapRes).
ok
(g@11.0.0.17)43> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:49.350"
(g@11.0.0.17)44> 04:00:51.966 [error] C1 propagation "2020-08-06T04:00:51.966" 
04:00:56.004 [error] Sending find_sub batch [] 
04:00:56.004 [error] Sending find_sub_aq batch [] 
04:00:56.004 [error] batched message propagation "2020-08-06T04:00:56.445" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)45> AwMapRes.
[]
(g@11.0.0.17)46> f(AwMapRes).
ok
(g@11.0.0.17)47> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:57.383"
(g@11.0.0.17)48> 04:00:58.967 [error] C1 propagation "2020-08-06T04:00:58.967" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)49> AwMapRes.
[]
(g@11.0.0.17)50> f(AwMapRes).
ok
(g@11.0.0.17)51> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:05.426"
(g@11.0.0.17)52> 04:01:05.896 [error] C3 propagation "2020-08-06T04:01:05.896" 
04:01:05.968 [error] C1 propagation "2020-08-06T04:01:05.968" 
04:01:06.006 [error] Sending find_sub batch [] 
04:01:06.006 [error] Sending find_sub_aq batch [] 
04:01:06.006 [error] batched message propagation "2020-08-06T04:01:06.640" 
04:01:12.969 [error] C1 propagation "2020-08-06T04:01:12.969" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)53> AwMapRes.
[]
(g@11.0.0.17)54> f(AwMapRes).
ok
(g@11.0.0.17)55> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:13.460"
(g@11.0.0.17)56> 04:01:16.008 [error] Sending find_sub batch [] 
04:01:16.008 [error] Sending find_sub_aq batch [] 
04:01:16.008 [error] batched message propagation "2020-08-06T04:01:16.844" 
04:01:19.970 [error] C1 propagation "2020-08-06T04:01:19.970" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)57> AwMapRes.
[]
(g@11.0.0.17)58> f(AwMapRes).
ok
(g@11.0.0.17)59> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:21.498"
(g@11.0.0.17)60> 04:01:25.906 [error] C2 propagation "2020-08-06T04:01:25.906" 
04:01:26.010 [error] Sending find_sub batch [] 
04:01:26.010 [error] Sending find_sub_aq batch [] 
04:01:26.010 [error] batched message propagation "2020-08-06T04:01:26.103" 
04:01:26.971 [error] C1 propagation "2020-08-06T04:01:26.971" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)61> AwMapRes.
[]
(g@11.0.0.17)62> f(AwMapRes).
ok
(g@11.0.0.17)63> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:29.536"
(g@11.0.0.17)64> 04:01:33.972 [error] C1 propagation "2020-08-06T04:01:33.972" 
04:01:36.012 [error] Sending find_sub batch [] 
04:01:36.012 [error] Sending find_sub_aq batch [] 
04:01:36.012 [error] batched message propagation "2020-08-06T04:01:36.124" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)65> AwMapRes.
[]
(g@11.0.0.17)66> f(AwMapRes).
ok
(g@11.0.0.17)67> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:37.572"
(g@11.0.0.17)68> 04:01:40.973 [error] C1 propagation "2020-08-06T04:01:40.973" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)69> AwMapRes.
[]
(g@11.0.0.17)70> f(AwMapRes).
ok
(g@11.0.0.17)71> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:45.613"
(g@11.0.0.17)72> 04:01:46.014 [error] Sending find_sub batch [] 
04:01:46.014 [error] Sending find_sub_aq batch [] 
04:01:46.014 [error] batched message propagation "2020-08-06T04:01:46.143" 
04:01:47.974 [error] C1 propagation "2020-08-06T04:01:47.974" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)73> AwMapRes.
[]
(g@11.0.0.17)74> f(AwMapRes).
ok
(g@11.0.0.17)75> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:53.655"
(g@11.0.0.17)76> 04:01:54.975 [error] C1 propagation "2020-08-06T04:01:54.975" 
04:01:56.016 [error] Sending find_sub batch [] 
04:01:56.016 [error] Sending find_sub_aq batch [] 
04:01:56.016 [error] batched message propagation "2020-08-06T04:01:56.163" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)77> AwMapRes.
[]
(g@11.0.0.17)78> f(AwMapRes).
ok
(g@11.0.0.17)79> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:01.688"
(g@11.0.0.17)80> 04:02:01.976 [error] C1 propagation "2020-08-06T04:02:01.976" 
04:02:05.908 [error] C2 propagation "2020-08-06T04:02:05.908" 
04:02:06.018 [error] Sending find_sub batch [] 
04:02:06.018 [error] Sending find_sub_aq batch [] 
04:02:06.018 [error] batched message propagation "2020-08-06T04:02:06.184" 
04:02:08.977 [error] C1 propagation "2020-08-06T04:02:08.977" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)81> AwMapRes.
[]
(g@11.0.0.17)82> f(AwMapRes).
ok
(g@11.0.0.17)83> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:09.728"
(g@11.0.0.17)84> 04:02:15.898 [error] C3 propagation "2020-08-06T04:02:15.898" 
04:02:15.978 [error] C1 propagation "2020-08-06T04:02:15.978" 
04:02:16.020 [error] Sending find_sub batch [] 
04:02:16.020 [error] Sending find_sub_aq batch [] 
04:02:16.020 [error] batched message propagation "2020-08-06T04:02:16.203" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)85> AwMapRes.
[]
(g@11.0.0.17)86> f(AwMapRes).
ok
(g@11.0.0.17)87> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:17.764"
(g@11.0.0.17)88> 04:02:22.979 [error] C1 propagation "2020-08-06T04:02:22.979" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(g@11.0.0.17)89> AwMapRes.
[]
(g@11.0.0.17)90> f(AwMapRes).
ok
(g@11.0.0.17)91> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:25.806"
(g@11.0.0.17)92> 04:02:26.023 [error] Sending find_sub batch [] 
04:02:26.024 [error] Sending find_sub_aq batch [] 
04:02:26.024 [error] batched message propagation "2020-08-06T04:02:26.240" 
04:02:27.122 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:02:27.122" Took=32562 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_16_427}],[],[],[],[],[],[]}}}}] 
04:02:27.122 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",0,0},{"delta_send",0,1},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",24,0},{"sub_cancel",0,0}] 
04:02:29.981 [error] C1 propagation "2020-08-06T04:02:29.981" 
04:02:30.066 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:02:30.067 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,2}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:1 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_02_22_447}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)93> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_02_22_447}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)94> f(AwMapRes).
ok
(g@11.0.0.17)95> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:33.844"
(g@11.0.0.17)96> 04:02:33.793 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:02:33.793" Took=33619 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_02_22_447}],[],[],[],[],[],[],[],[],[]}}}}] 
04:02:33.793 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",1,0},{"delta_send",1,2},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",26,0},{"sub_cancel",0,0}] 
04:02:36.025 [error] Sending find_sub batch [] 
04:02:36.025 [error] Sending find_sub_aq batch [] 
04:02:36.025 [error] batched message propagation "2020-08-06T04:02:36.254" 
04:02:36.982 [error] C1 propagation "2020-08-06T04:02:36.982" 
04:02:37.008 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:02:37.008 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,3}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:2 
04:02:40.910 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:02:40.910" Took=24514 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_28_471}],[],[],[],[],[],[]}}}}] 
04:02:40.910 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",2,0},{"delta_send",2,3},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",28,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_02_28_471}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)97> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_02_28_471}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)98> f(AwMapRes).
ok
(g@11.0.0.17)99> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:41.884"
(g@11.0.0.17)100> 04:02:43.983 [error] C1 propagation "2020-08-06T04:02:43.983"  
04:02:43.983 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:02:43.983 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,4}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:3 
04:02:45.909 [error] C2 propagation "2020-08-06T04:02:45.909" 
04:02:46.027 [error] Sending find_sub batch [] 
04:02:46.027 [error] Sending find_sub_aq batch [] 
04:02:46.027 [error] batched message propagation "2020-08-06T04:02:46.273" 
04:02:47.886 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:02:47.886" Took=42524 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_40_511}],[],[]}}}}] 
04:02:47.886 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",3,3},{"delta_send",3,4},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",30,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@11.0.0.17)101> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_02_40_511}],
         [],[]}}}}]
(g@11.0.0.17)102> f(AwMapRes).
ok
(g@11.0.0.17)103> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:49.922"
(g@11.0.0.17)104> 04:02:50.984 [error] C1 propagation "2020-08-06T04:02:50.984"  
04:02:51.032 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:02:51.032 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,5}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:4 
04:02:54.879 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:02:54.879" Took=34847 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_02_46_534}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:02:54.879 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",4,4},{"delta_send",4,5},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",32,0},{"sub_cancel",0,0}] 
04:02:56.029 [error] Sending find_sub batch [] 
04:02:56.029 [error] Sending find_sub_aq batch [] 
04:02:56.029 [error] batched message propagation "2020-08-06T04:02:56.294" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_02_46_534}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)105> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_02_46_534}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)106> f(AwMapRes).
ok
(g@11.0.0.17)107> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:57.962"
(g@11.0.0.17)108> 04:02:57.986 [error] C1 propagation "2020-08-06T04:02:57.986"  
04:02:58.008 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:02:58.008 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,6}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:5 
04:03:01.867 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:03:01.867" Took=21668 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_52_558}],[]}}}}] 
04:03:01.867 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",5,5},{"delta_send",5,6},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",34,0},{"sub_cancel",0,0}] 
04:03:04.987 [error] C1 propagation "2020-08-06T04:03:04.987" 
04:03:05.057 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:03:05.057 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,7}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:6 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)109> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@11.0.0.17)110> f(AwMapRes).
ok
(g@11.0.0.17)111> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:06.247"
(g@11.0.0.17)112> 04:03:06.031 [error] Sending find_sub batch [] 
04:03:06.031 [error] Sending find_sub_aq batch [] 
04:03:06.031 [error] batched message propagation "2020-08-06T04:03:06.313" 
04:03:08.880 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:03:08.880" Took=34536 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_58_579}],[],[],[],[],[],[]}}}}] 
04:03:08.883 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",6,6},{"delta_send",6,7},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",36,0},{"sub_cancel",0,0}] 
04:03:11.989 [error] C1 propagation "2020-08-06T04:03:11.989" 
04:03:12.076 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:03:12.077 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,8}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:7 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_02_58_579}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)113> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_02_58_579}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)114> f(AwMapRes).
ok
(g@11.0.0.17)115> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:14.623"
(g@11.0.0.17)116> 04:03:15.883 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:03:15.883" Took=35361 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_03_04_599}],[],[],[],[],[],[]}}}}] 
04:03:15.885 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",7,7},{"delta_send",7,8},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",38,0},{"sub_cancel",0,0}] 
04:03:16.032 [error] Sending find_sub batch [] 
04:03:16.032 [error] Sending find_sub_aq batch [] 
04:03:16.032 [error] batched message propagation "2020-08-06T04:03:16.323" 
04:03:18.991 [error] C1 propagation "2020-08-06T04:03:18.991" 
04:03:19.021 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:03:19.021 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,9}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:8 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_03_04_599}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)117> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_03_04_599}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)118> f(AwMapRes).
ok
(g@11.0.0.17)119> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:22.103"
(g@11.0.0.17)120> 04:03:22.970 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:03:22.969" Took=31319 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_03_10_621}],[],[],[],[],[],[],[],[]}}}}] 
04:03:22.970 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",8,8},{"delta_send",8,9},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",40,0},{"sub_cancel",0,0}] 
04:03:25.899 [error] C3 propagation "2020-08-06T04:03:25.899" 
04:03:26.024 [error] C2 propagation "2020-08-06T04:03:26.239" 
04:03:26.097 [error] C1 propagation "2020-08-06T04:03:26.978" 
04:03:26.098 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:03:26.099 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,10}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:9 
04:03:26.138 [error] Sending find_sub batch [] 
04:03:26.138 [error] Sending find_sub_aq batch [] 
04:03:26.138 [error] batched message propagation "2020-08-06T04:03:26.138" 
04:03:29.928 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:03:29.928" Took=22498 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_03_22_675}]}}}}] 
04:03:29.929 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",9,9},{"delta_send",9,10},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",42,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)121> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)122> f(AwMapRes).
ok
(g@11.0.0.17)123> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:30.141"
(g@11.0.0.17)124> 04:03:33.099 [error] C1 propagation "2020-08-06T04:03:33.994"  
04:03:33.100 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:03:33.100 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,11}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:10 
04:03:36.140 [error] Sending find_sub batch [] 
04:03:36.140 [error] Sending find_sub_aq batch [] 
04:03:36.140 [error] batched message propagation "2020-08-06T04:03:36.140" 
04:03:36.976 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:03:36.975" Took=23493 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_03_28_697}],[],[],[],[],[],[],[],[]}}}}] 
04:03:36.976 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",10,10},{"delta_send",10,11},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",44,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_03_28_697}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)125> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_03_28_697}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)126> f(AwMapRes).
ok
(g@11.0.0.17)127> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:38.177"
(g@11.0.0.17)128> 04:03:40.101 [error] C1 propagation "2020-08-06T04:03:40.101"  
04:03:40.122 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:03:40.122 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,12}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:11 
04:03:43.982 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:03:43.982" Took=31798 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_03_34_718}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:03:43.983 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",11,11},{"delta_send",11,12},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",46,0},{"sub_cancel",0,0}] 
04:03:46.142 [error] Sending find_sub batch [] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_03_34_718}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)129> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_03_34_718}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)130> f(AwMapRes).
ok
(g@11.0.0.17)131> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:46.243"
(g@11.0.0.17)132> 04:03:46.142 [error] Sending find_sub_aq batch [] 
04:03:46.142 [error] batched message propagation "2020-08-06T04:03:46.142" 
04:03:47.102 [error] C1 propagation "2020-08-06T04:03:47.102" 
04:03:47.139 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:03:47.139 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,13}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:12 
04:03:51.064 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:03:51.646" Took=23081 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_03_40_736}],[],[],[],[],[],[]}}}}] 
04:03:51.065 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",12,12},{"delta_send",12,13},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",48,0},{"sub_cancel",0,0}] 
04:03:54.103 [error] C1 propagation "2020-08-06T04:03:54.103" 
04:03:54.142 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:03:54.142 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,14}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:13 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_03_40_736}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)133> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_03_40_736}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)134> f(AwMapRes).
ok
(g@11.0.0.17)135> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:54.260"
(g@11.0.0.17)136> 04:03:56.144 [error] Sending find_sub batch [] 
04:03:56.144 [error] Sending find_sub_aq batch [] 
04:03:56.144 [error] batched message propagation "2020-08-06T04:03:56.144" 
04:03:58.066 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:03:58.667" Took=38104 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_03_46_759}],[],[],[],[],[],[],[],[],[]}}}}] 
04:03:58.067 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",13,13},{"delta_send",13,14},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",50,0},{"sub_cancel",0,0}] 
04:04:01.104 [error] C1 propagation "2020-08-06T04:04:01.104" 
04:04:01.133 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:04:01.133 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,15}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:14 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_03_46_759}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)137> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_03_46_759}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)138> f(AwMapRes).
ok
(g@11.0.0.17)139> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:02.297"
(g@11.0.0.17)140> 04:04:05.063 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:04:05.629" Took=23080 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_03_52_779}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:05.063 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",14,14},{"delta_send",14,15},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",52,0},{"sub_cancel",0,0}] 
04:04:06.025 [error] C2 propagation "2020-08-06T04:04:06.252" 
04:04:06.146 [error] Sending find_sub batch [] 
04:04:06.146 [error] Sending find_sub_aq batch [] 
04:04:06.146 [error] batched message propagation "2020-08-06T04:04:06.146" 
04:04:08.105 [error] C1 propagation "2020-08-06T04:04:08.105" 
04:04:08.159 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:04:08.159 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,16}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:15 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_03_52_779}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)141> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_03_52_779}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)142> f(AwMapRes).
ok
(g@11.0.0.17)143> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:10.340"
(g@11.0.0.17)144> 04:04:12.057 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:04:12.572" Took=26555 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_04_04_823}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:12.058 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",15,15},{"delta_send",15,16},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",54,0},{"sub_cancel",0,0}] 
04:04:15.106 [error] C1 propagation "2020-08-06T04:04:15.106" 
04:04:15.107 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:04:15.107 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,17}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:16 
04:04:16.148 [error] Sending find_sub batch [] 
04:04:16.148 [error] Sending find_sub_aq batch [] 
04:04:16.148 [error] batched message propagation "2020-08-06T04:04:16.148" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_04_04_823}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)145> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_04_04_823}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)146> f(AwMapRes).
ok
(g@11.0.0.17)147> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:18.376"
(g@11.0.0.17)148> 04:04:19.049 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:04:19.495" Took=23504 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_04_10_847}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:19.050 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",16,16},{"delta_send",16,17},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",56,0},{"sub_cancel",0,0}] 
04:04:22.107 [error] C1 propagation "2020-08-06T04:04:22.107" 
04:04:22.107 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:04:22.108 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,18}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:17 
04:04:26.063 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:04:26.632" Took=30745 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_04_16_867}],[],[],[],[],[]}}}}] 
04:04:26.063 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",17,17},{"delta_send",17,18},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",58,0},{"sub_cancel",0,0}] 
04:04:26.193 [error] Sending find_sub batch [] 
04:04:26.194 [error] Sending find_sub_aq batch [] 
04:04:26.194 [error] batched message propagation "2020-08-06T04:04:26.194" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_04_16_867}],
             [],[],[],...}}}}]}
(g@11.0.0.17)149> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_04_16_867}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)150> f(AwMapRes).
ok
(g@11.0.0.17)151> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:26.415"
(g@11.0.0.17)152> 04:04:29.108 [error] C1 propagation "2020-08-06T04:04:29.108"  
04:04:29.108 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:04:29.108 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,19}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:18 
04:04:33.064 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:04:33.646" Took=33872 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_04_22_887}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:33.065 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",18,18},{"delta_send",18,19},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",60,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_04_22_887}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)153> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_04_22_887}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)154> f(AwMapRes).
ok
(g@11.0.0.17)155> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:34.461"
(g@11.0.0.17)156> 04:04:35.900 [error] C3 propagation "2020-08-06T04:04:35.900"  
04:04:36.109 [error] C1 propagation "2020-08-06T04:04:36.109" 
04:04:36.167 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:04:36.167 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,20}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:19 
04:04:36.367 [error] Sending find_sub batch [] 
04:04:36.367 [error] Sending find_sub_aq batch [] 
04:04:36.368 [error] batched message propagation "2020-08-06T04:04:36.367" 
04:04:40.057 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:04:40.574" Took=20808 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_04_28_907}],[],[],[],[],[],[],[],[]}}}}] 
04:04:40.058 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",19,19},{"delta_send",19,20},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",62,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_04_28_907}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)157> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_04_28_907}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)158> f(AwMapRes).
ok
(g@11.0.0.17)159> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:42.498"
(g@11.0.0.17)160> 04:04:43.110 [error] C1 propagation "2020-08-06T04:04:43.110"  
04:04:43.110 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:04:43.110 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,21}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:20 
04:04:46.026 [error] C2 propagation "2020-08-06T04:04:46.262" 
04:04:46.369 [error] Sending find_sub batch [] 
04:04:46.369 [error] Sending find_sub_aq batch [] 
04:04:46.369 [error] batched message propagation "2020-08-06T04:04:46.369" 
04:04:47.071 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:04:47.710" Took=33220 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_04_34_924}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:47.071 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",20,20},{"delta_send",20,21},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",64,0},{"sub_cancel",0,0}] 
04:04:50.112 [error] C1 propagation "2020-08-06T04:04:50.112" 
04:04:50.152 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:04:50.152 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,22}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:21 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_04_34_924}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)161> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_04_34_924}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)162> f(AwMapRes).
ok
(g@11.0.0.17)163> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:50.536"
(g@11.0.0.17)164> 04:04:54.077 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:04:54.778" Took=38284 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_04_46_963}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:54.078 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",21,21},{"delta_send",21,22},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",66,0},{"sub_cancel",0,0}] 
04:04:56.371 [error] Sending find_sub batch [] 
04:04:56.371 [error] Sending find_sub_aq batch [] 
04:04:56.371 [error] batched message propagation "2020-08-06T04:04:56.371" 
04:04:57.113 [error] C1 propagation "2020-08-06T04:04:57.113" 
04:04:57.158 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:04:57.158 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,23}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:22 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_04_46_963}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)165> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_04_46_963}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)166> f(AwMapRes).
ok
(g@11.0.0.17)167> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:58.578"
(g@11.0.0.17)168> 04:05:01.074 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:05:01.747" Took=37132 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_04_52_983}],[],[]}}}}] 
04:05:01.075 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",22,22},{"delta_send",22,23},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",68,0},{"sub_cancel",0,0}] 
04:05:04.114 [error] C1 propagation "2020-08-06T04:05:04.114" 
04:05:04.135 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:05:04.135 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,24}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:23 
04:05:06.373 [error] Sending find_sub batch [] 
04:05:06.373 [error] Sending find_sub_aq batch [] 
04:05:06.373 [error] batched message propagation "2020-08-06T04:05:06.373" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@11.0.0.17)169> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_04_52_983}],
         [],[]}}}}]
(g@11.0.0.17)170> f(AwMapRes).
ok
(g@11.0.0.17)171> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:06.615"
(g@11.0.0.17)172> 04:05:08.072 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:05:08.721" Took=31837 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_04_59_005}],[],[],[],[],[],[]}}}}] 
04:05:08.073 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",23,23},{"delta_send",23,24},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",70,0},{"sub_cancel",0,0}] 
04:05:11.116 [error] C1 propagation "2020-08-06T04:05:11.116" 
04:05:11.116 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:05:11.116 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,25}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:24 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_04_59_005}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)173> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_04_59_005}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)174> f(AwMapRes).
ok
(g@11.0.0.17)175> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:14.649"
(g@11.0.0.17)176> 04:05:15.072 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:05:15.721" Took=31401 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_05_027}],[],[]}}}}] 
04:05:15.072 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",24,24},{"delta_send",24,25},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",72,0},{"sub_cancel",0,0}] 
04:05:16.374 [error] Sending find_sub batch [] 
04:05:16.374 [error] Sending find_sub_aq batch [] 
04:05:16.374 [error] batched message propagation "2020-08-06T04:05:16.374" 
04:05:18.117 [error] C1 propagation "2020-08-06T04:05:18.117" 
04:05:18.121 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:05:18.121 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,26}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:25 
04:05:22.159 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:05:22.159" Took=34597 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_11_051}],[],[],[],[],[]}}}}] 
04:05:22.159 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",25,25},{"delta_send",25,26},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",74,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_05_11_051}],
             [],[],[],...}}}}]}
(g@11.0.0.17)177> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_11_051}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)178> f(AwMapRes).
ok
(g@11.0.0.17)179> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:22.681"
(g@11.0.0.17)180> 04:05:25.119 [error] C1 propagation "2020-08-06T04:05:25.119"  
04:05:25.119 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:05:25.119 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,27}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:26 
04:05:26.027 [error] C2 propagation "2020-08-06T04:05:26.272" 
04:05:26.376 [error] Sending find_sub batch [] 
04:05:26.376 [error] Sending find_sub_aq batch [] 
04:05:26.376 [error] batched message propagation "2020-08-06T04:05:26.376" 
04:05:29.067 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:05:29.675" Took=22968 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_17_074}],[],[],[],[]}}}}] 
04:05:29.069 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",26,26},{"delta_send",26,27},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",76,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_05_17_074}],
             [],[],...}}}}]}
(g@11.0.0.17)181> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_17_074}],
         [],[],[],[]}}}}]
(g@11.0.0.17)182> f(AwMapRes).
ok
(g@11.0.0.17)183> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:30.720"
(g@11.0.0.17)184> 04:05:32.121 [error] C1 propagation "2020-08-06T04:05:32.121"  
04:05:32.152 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:05:32.152 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,28}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:27 
04:05:36.083 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:05:36.828" Took=37599 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_29_118}]}}}}] 
04:05:36.083 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",27,27},{"delta_send",27,28},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",78,0},{"sub_cancel",0,0}] 
04:05:36.377 [error] Sending find_sub batch [] 
04:05:36.377 [error] Sending find_sub_aq batch [] 
04:05:36.377 [error] batched message propagation "2020-08-06T04:05:36.377" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)185> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)186> f(AwMapRes).
ok
(g@11.0.0.17)187> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:38.760"
(g@11.0.0.17)188> 04:05:39.122 [error] C1 propagation "2020-08-06T04:05:39.122"  
04:05:39.157 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:05:39.157 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,29}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:28 
04:05:43.074 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:05:43.740" Took=29829 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_05_35_139}],[],[],[],[],[],[],[],[],[]}}}}] 
04:05:43.075 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",28,28},{"delta_send",28,29},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",80,0},{"sub_cancel",0,0}] 
04:05:45.902 [error] C3 propagation "2020-08-06T04:05:45.902" 
04:05:46.124 [error] C1 propagation "2020-08-06T04:05:46.124" 
04:05:46.213 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:05:46.214 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,30}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:29 
04:05:46.378 [error] Sending find_sub batch [] 
04:05:46.378 [error] Sending find_sub_aq batch [] 
04:05:46.378 [error] batched message propagation "2020-08-06T04:05:46.378" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_05_35_139}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)189> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_05_35_139}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)190> f(AwMapRes).
ok
(g@11.0.0.17)191> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:46.801"
(g@11.0.0.17)192> 04:05:50.081 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:05:50.816" Took=35709 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_05_41_158}],[],[],[],[],[],[],[]}}}}] 
04:05:50.082 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",29,29},{"delta_send",29,30},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",82,0},{"sub_cancel",0,0}] 
04:05:53.126 [error] C1 propagation "2020-08-06T04:05:53.126" 
04:05:53.127 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:05:53.127 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,31}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:30 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_05_41_158}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)193> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_41_158}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)194> f(AwMapRes).
ok
(g@11.0.0.17)195> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:54.835"
(g@11.0.0.17)196> 04:05:56.380 [error] Sending find_sub batch [] 
04:05:56.380 [error] Sending find_sub_aq batch [] 
04:05:56.380 [error] batched message propagation "2020-08-06T04:05:56.380" 
04:05:57.079 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:05:57.789" Took=32352 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_05_47_179}],[],[],[],[],[],[],[],[],[]}}}}] 
04:05:57.079 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",30,30},{"delta_send",30,31},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",84,0},{"sub_cancel",0,0}] 
04:06:00.128 [error] C1 propagation "2020-08-06T04:06:00.128" 
04:06:00.128 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:06:00.128 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,32}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:31 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_05_47_179}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)197> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_05_47_179}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)198> f(AwMapRes).
ok
(g@11.0.0.17)199> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:02.906"
(g@11.0.0.17)200> 04:06:04.083 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:06:04.830" Took=29232 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_53_199}],[],[],[],[],[],[]}}}}] 
04:06:04.083 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",31,31},{"delta_send",31,32},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",86,0},{"sub_cancel",0,0}] 
04:06:06.028 [error] C2 propagation "2020-08-06T04:06:06.282" 
04:06:06.382 [error] Sending find_sub batch [] 
04:06:06.382 [error] Sending find_sub_aq batch [] 
04:06:06.382 [error] batched message propagation "2020-08-06T04:06:06.382" 
04:06:07.129 [error] C1 propagation "2020-08-06T04:06:07.129" 
04:06:07.192 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:06:07.192 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,33}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:32 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_05_53_199}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)201> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_53_199}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)202> f(AwMapRes).
ok
(g@11.0.0.17)203> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:10.947"
(g@11.0.0.17)204> 04:06:11.097 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:06:11.978" Took=42975 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_05_59_218}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:06:11.098 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",32,32},{"delta_send",32,33},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",88,0},{"sub_cancel",0,0}] 
04:06:14.130 [error] C1 propagation "2020-08-06T04:06:14.130" 
04:06:14.136 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:06:14.136 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,34}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:33 
04:06:16.383 [error] Sending find_sub batch [] 
04:06:16.383 [error] Sending find_sub_aq batch [] 
04:06:16.383 [error] batched message propagation "2020-08-06T04:06:16.383" 
04:06:18.091 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:06:18.917" Took=33777 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_06_05_239}],[],[],[],[],[],[],[],[],[]}}}}] 
04:06:18.092 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",33,33},{"delta_send",33,34},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",90,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_06_05_239}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)205> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_06_05_239}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)206> f(AwMapRes).
ok
(g@11.0.0.17)207> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:18.980"
(g@11.0.0.17)208> 04:06:21.131 [error] C1 propagation "2020-08-06T04:06:21.131"  
04:06:21.169 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:06:21.169 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,35}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:34 
04:06:25.092 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:06:25.918" Took=39552 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_06_17_283}]}}}}] 
04:06:25.092 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",34,34},{"delta_send",34,35},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",92,0},{"sub_cancel",0,0}] 
04:06:26.385 [error] Sending find_sub batch [] 
04:06:26.385 [error] Sending find_sub_aq batch [] 
04:06:26.385 [error] batched message propagation "2020-08-06T04:06:26.385" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)209> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)210> f(AwMapRes).
ok
(g@11.0.0.17)211> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:27.192"
(g@11.0.0.17)212> 04:06:28.133 [error] C1 propagation "2020-08-06T04:06:28.133"  
04:06:28.148 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:06:28.148 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,36}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:35 
04:06:32.078 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:06:32.783" Took=23472 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_06_23_306}],[],[],[],[],[],[],[],[]}}}}] 
04:06:32.078 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",35,35},{"delta_send",35,36},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",94,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_06_23_306}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)213> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_06_23_306}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)214> f(AwMapRes).
ok
(g@11.0.0.17)215> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:35.514"
(g@11.0.0.17)216> 04:06:35.135 [error] C1 propagation "2020-08-06T04:06:35.135"  
04:06:35.167 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:06:35.167 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,37}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:36 
04:06:36.387 [error] Sending find_sub batch [] 
04:06:36.387 [error] Sending find_sub_aq batch [] 
04:06:36.387 [error] batched message propagation "2020-08-06T04:06:36.387" 
04:06:39.089 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:06:39.895" Took=34195 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_06_29_327}],[],[],[],[]}}}}] 
04:06:39.090 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",36,36},{"delta_send",36,37},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",96,0},{"sub_cancel",0,0}] 
04:06:42.136 [error] C1 propagation "2020-08-06T04:06:42.136" 
04:06:42.175 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:06:42.175 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,38}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:37 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_06_29_327}],
             [],[],...}}}}]}
(g@11.0.0.17)217> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_06_29_327}],
         [],[],[],[]}}}}]
(g@11.0.0.17)218> f(AwMapRes).
ok
(g@11.0.0.17)219> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:43.850"
(g@11.0.0.17)220> 04:06:46.029 [error] C2 propagation "2020-08-06T04:06:46.292"  
04:06:46.388 [error] Sending find_sub batch [] 
04:06:46.388 [error] Sending find_sub_aq batch [] 
04:06:46.388 [error] batched message propagation "2020-08-06T04:06:46.388" 
04:06:47.435 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:06:47.434" Took=32589 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_06_35_351}],[],[],[],[],[],[],[]}}}}] 
04:06:47.435 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",37,37},{"delta_send",37,38},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",98,0},{"sub_cancel",0,0}] 
04:06:49.137 [error] C1 propagation "2020-08-06T04:06:49.137" 
04:06:49.137 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:06:49.137 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,39}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:38 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_06_35_351}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)221> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_06_35_351}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)222> f(AwMapRes).
ok
(g@11.0.0.17)223> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:51.124"
(g@11.0.0.17)224> 04:06:53.095 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:06:53.951" Took=35049 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_06_41_371}],[]}}}}] 
04:06:53.095 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",38,38},{"delta_send",38,39},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",100,0},{"sub_cancel",0,0}] 
04:06:55.904 [error] C3 propagation "2020-08-06T04:06:55.904" 
04:06:56.138 [error] C1 propagation "2020-08-06T04:06:56.138" 
04:06:56.209 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:06:56.209 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,40}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:39 
04:06:56.389 [error] Sending find_sub batch [] 
04:06:56.389 [error] Sending find_sub_aq batch [] 
04:06:56.389 [error] batched message propagation "2020-08-06T04:06:56.389" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)225> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@11.0.0.17)226> f(AwMapRes).
ok
(g@11.0.0.17)227> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:59.155"
(g@11.0.0.17)228> 04:07:00.095 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:07:00.950" Took=34110 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_06_47_391}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:07:00.096 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",39,39},{"delta_send",39,40},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",102,0},{"sub_cancel",0,0}] 
04:07:03.139 [error] C1 propagation "2020-08-06T04:07:03.139" 
04:07:03.139 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:07:03.139 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,41}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:40 
04:07:06.391 [error] Sending find_sub batch [] 
04:07:06.391 [error] Sending find_sub_aq batch [] 
04:07:06.391 [error] batched message propagation "2020-08-06T04:07:06.391" 
04:07:07.133 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:07:07.133" Took=26549 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_06_59_430}],[],[],[],[],[],[],[],[],[],[]}}}}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_06_59_430}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)229> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_06_59_430}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)230> f(AwMapRes).
ok
(g@11.0.0.17)231> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:07.219"
(g@11.0.0.17)232> 04:07:07.213 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",40,40},{"delta_send",40,41},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",104,0},{"sub_cancel",0,0}] 
04:07:10.141 [error] C1 propagation "2020-08-06T04:07:10.141" 
04:07:10.141 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:07:10.141 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,42}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:41 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_06_59_430}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)233> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_06_59_430}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)234> f(AwMapRes).
ok
(g@11.0.0.17)235> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:15.230"
(g@11.0.0.17)236> 04:07:16.392 [error] Sending find_sub batch [] 
04:07:16.392 [error] Sending find_sub_aq batch [] 
04:07:16.392 [error] batched message propagation "2020-08-06T04:07:16.392" 
04:07:17.143 [error] C1 propagation "2020-08-06T04:07:17.143" 
04:07:21.098 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:07:21.980" Took=31745 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_07_11_033}],[],[],[],[],[],[],[]}}}}] 
04:07:21.102 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",41,41},{"delta_send",41,42},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",106,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_07_11_033}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)237> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_07_11_033}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)238> f(AwMapRes).
ok
(g@11.0.0.17)239> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:23.270"
(g@11.0.0.17)240> 04:07:24.144 [error] C1 propagation "2020-08-06T04:07:24.144"  
04:07:24.145 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:07:24.145 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,43}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:42 
04:07:26.030 [error] C2 propagation "2020-08-06T04:07:26.302" 
04:07:26.394 [error] Sending find_sub batch [] 
04:07:26.394 [error] Sending find_sub_aq batch [] 
04:07:26.394 [error] batched message propagation "2020-08-06T04:07:26.394" 
04:07:28.107 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:07:28.107" Took=38189 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_07_17_053}],[],[],[],[],[],[],[],[],[]}}}}] 
04:07:28.107 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",42,42},{"delta_send",42,43},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",108,0},{"sub_cancel",0,0}] 
04:07:31.146 [error] C1 propagation "2020-08-06T04:07:31.146" 
04:07:31.173 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:07:31.173 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,44}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:43 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_07_17_053}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)241> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_07_17_053}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)242> f(AwMapRes).
ok
(g@11.0.0.17)243> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:31.353"
(g@11.0.0.17)244> 04:07:35.094 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:07:35.943" Took=26907 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_07_23_077}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:07:35.095 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",43,43},{"delta_send",43,44},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",110,0},{"sub_cancel",0,0}] 
04:07:36.395 [error] Sending find_sub batch [] 
04:07:36.395 [error] Sending find_sub_aq batch [] 
04:07:36.395 [error] batched message propagation "2020-08-06T04:07:36.395" 
04:07:38.147 [error] C1 propagation "2020-08-06T04:07:38.147" 
04:07:38.169 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:07:38.169 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,45}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:44 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_07_23_077}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)245> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_07_23_077}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)246> f(AwMapRes).
ok
(g@11.0.0.17)247> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:39.339"
(g@11.0.0.17)248> 04:07:42.106 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:07:42.105" Took=37766 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_07_35_119}],[],[],[],[],[],[],[],[]}}}}] 
04:07:42.107 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",44,44},{"delta_send",44,45},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",112,0},{"sub_cancel",0,0}] 
04:07:45.149 [error] C1 propagation "2020-08-06T04:07:45.149" 
04:07:45.171 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:07:45.262 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,46}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:45 
04:07:46.396 [error] Sending find_sub batch [] 
04:07:46.396 [error] Sending find_sub_aq batch [] 
04:07:46.396 [error] batched message propagation "2020-08-06T04:07:46.396" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_07_35_119}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)249> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_07_35_119}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)250> f(AwMapRes).
ok
(g@11.0.0.17)251> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:47.377"
(g@11.0.0.17)252> 04:07:49.136 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:07:49.136" Took=21806 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_07_41_143}],[],[]}}}}] 
04:07:49.137 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",45,45},{"delta_send",45,46},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",114,0},{"sub_cancel",0,0}] 
04:07:52.150 [error] C1 propagation "2020-08-06T04:07:52.150" 
04:07:52.190 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:07:52.190 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,47}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:46 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@11.0.0.17)253> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_07_41_143}],
         [],[]}}}}]
(g@11.0.0.17)254> f(AwMapRes).
ok
(g@11.0.0.17)255> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:55.410"
(g@11.0.0.17)256> 04:07:56.146 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:07:56.146" Took=33375 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_07_47_163}],[],[],[],[],[],[],[]}}}}] 
04:07:56.146 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",46,46},{"delta_send",46,47},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",116,0},{"sub_cancel",0,0}] 
04:07:56.398 [error] Sending find_sub batch [] 
04:07:56.398 [error] Sending find_sub_aq batch [] 
04:07:56.398 [error] batched message propagation "2020-08-06T04:07:56.398" 
04:07:59.153 [error] C1 propagation "2020-08-06T04:07:59.153" 
04:07:59.196 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:07:59.196 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,48}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:47 
04:08:03.145 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:08:03.145" Took=30278 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_07_53_183}],[],[],[],[]}}}}] 
04:08:03.146 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",47,47},{"delta_send",47,48},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",118,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_07_53_183}],
             [],[],...}}}}]}
(g@11.0.0.17)257> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_07_53_183}],
         [],[],[],[]}}}}]
(g@11.0.0.17)258> f(AwMapRes).
ok
(g@11.0.0.17)259> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:03.442"
(g@11.0.0.17)260> 04:08:05.905 [error] C3 propagation "2020-08-06T04:08:05.905"  
04:08:06.032 [error] C2 propagation "2020-08-06T04:08:06.322" 
04:08:06.154 [error] C1 propagation "2020-08-06T04:08:06.154" 
04:08:06.154 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:08:06.154 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,49}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:48 
04:08:06.400 [error] Sending find_sub batch [] 
04:08:06.400 [error] Sending find_sub_aq batch [] 
04:08:06.400 [error] batched message propagation "2020-08-06T04:08:06.400" 
04:08:10.156 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:08:10.156" Took=40106 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_07_59_203}],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:10.157 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",48,48},{"delta_send",48,49},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",120,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_07_59_203}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)261> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_07_59_203}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)262> f(AwMapRes).
ok
(g@11.0.0.17)263> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:11.480"
(g@11.0.0.17)264> 04:08:13.155 [error] C1 propagation "2020-08-06T04:08:13.155"  
04:08:13.156 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:08:13.156 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,50}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:49 
04:08:16.402 [error] Sending find_sub batch [] 
04:08:16.402 [error] Sending find_sub_aq batch [] 
04:08:16.402 [error] batched message propagation "2020-08-06T04:08:16.402" 
04:08:17.138 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:08:17.138" Took=23912 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_08_05_226}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:17.139 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",49,49},{"delta_send",49,50},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",122,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_08_05_226}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)265> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_08_05_226}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)266> f(AwMapRes).
ok
(g@11.0.0.17)267> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:19.518"
(g@11.0.0.17)268> 04:08:20.156 [error] C1 propagation "2020-08-06T04:08:20.156"  
04:08:20.156 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:08:20.156 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,51}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:50 
04:08:24.146 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:08:24.146" Took=27547 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_08_11_250}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:24.147 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",50,50},{"delta_send",50,51},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",124,0},{"sub_cancel",0,0}] 
04:08:26.403 [error] Sending find_sub batch [] 
04:08:26.403 [error] Sending find_sub_aq batch [] 
04:08:26.403 [error] batched message propagation "2020-08-06T04:08:26.403" 
04:08:27.158 [error] C1 propagation "2020-08-06T04:08:27.158" 
04:08:27.217 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:08:27.217 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,52}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:51 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_08_11_250}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)269> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_08_11_250}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)270> f(AwMapRes).
ok
(g@11.0.0.17)271> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:27.551"
(g@11.0.0.17)272> 04:08:31.171 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:08:31.170" Took=49883 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_23_293}],[],[],[]}}}}] 
04:08:31.171 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",51,51},{"delta_send",51,52},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",126,0},{"sub_cancel",0,0}] 
04:08:34.159 [error] C1 propagation "2020-08-06T04:08:34.159" 
04:08:34.159 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:08:34.159 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,53}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:52 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(g@11.0.0.17)273> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_08_23_293}],
         [],[],[]}}}}]
(g@11.0.0.17)274> f(AwMapRes).
ok
(g@11.0.0.17)275> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:35.587"
(g@11.0.0.17)276> 04:08:36.405 [error] Sending find_sub batch [] 
04:08:36.405 [error] Sending find_sub_aq batch [] 
04:08:36.405 [error] batched message propagation "2020-08-06T04:08:36.405" 
04:08:38.165 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:08:38.165" Took=41721 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_08_29_315}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:38.165 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",52,52},{"delta_send",52,53},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",128,0},{"sub_cancel",0,0}] 
04:08:41.160 [error] C1 propagation "2020-08-06T04:08:41.160" 
04:08:41.161 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:08:41.161 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,54}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:53 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_08_29_315}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)277> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_08_29_315}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)278> f(AwMapRes).
ok
(g@11.0.0.17)279> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:43.621"
(g@11.0.0.17)280> 04:08:45.153 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:08:45.153" Took=26598 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_35_340}],[],[],[]}}}}] 
04:08:45.154 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",53,53},{"delta_send",53,54},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",130,0},{"sub_cancel",0,0}] 
04:08:46.033 [error] C2 propagation "2020-08-06T04:08:46.332" 
04:08:46.407 [error] Sending find_sub batch [] 
04:08:46.407 [error] Sending find_sub_aq batch [] 
04:08:46.407 [error] batched message propagation "2020-08-06T04:08:46.407" 
04:08:48.161 [error] C1 propagation "2020-08-06T04:08:48.161" 
04:08:48.161 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:08:48.162 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,55}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:54 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(g@11.0.0.17)281> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_08_35_340}],
         [],[],[]}}}}]
(g@11.0.0.17)282> f(AwMapRes).
ok
(g@11.0.0.17)283> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:51.664"
(g@11.0.0.17)284> 04:08:52.154 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:08:52.153" Took=28231 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_08_41_359}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:52.154 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",54,54},{"delta_send",54,55},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",132,0},{"sub_cancel",0,0}] 
04:08:55.163 [error] C1 propagation "2020-08-06T04:08:55.163" 
04:08:55.191 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:08:55.191 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,56}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:55 
04:08:56.408 [error] Sending find_sub batch [] 
04:08:56.408 [error] Sending find_sub_aq batch [] 
04:08:56.408 [error] batched message propagation "2020-08-06T04:08:56.408" 
04:08:59.156 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:08:59.156" Took=30331 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_47_378}],[],[]}}}}] 
04:08:59.156 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",55,55},{"delta_send",55,56},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",134,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@11.0.0.17)285> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_08_47_378}],
         [],[]}}}}]
(g@11.0.0.17)286> f(AwMapRes).
ok
(g@11.0.0.17)287> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:59.699"
(g@11.0.0.17)288> 04:09:02.164 [error] C1 propagation "2020-08-06T04:09:02.164"  
04:09:02.179 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:09:02.179 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,57}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:56 
04:09:06.160 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:09:06.160" Took=33542 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_53_399}]}}}}] 
04:09:06.160 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",56,56},{"delta_send",56,57},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",136,0},{"sub_cancel",0,0}] 
04:09:06.409 [error] Sending find_sub batch [] 
04:09:06.409 [error] Sending find_sub_aq batch [] 
04:09:06.409 [error] batched message propagation "2020-08-06T04:09:06.409" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)289> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)290> f(AwMapRes).
ok
(g@11.0.0.17)291> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:07.740"
(g@11.0.0.17)292> 04:09:09.166 [error] C1 propagation "2020-08-06T04:09:09.166"  
04:09:09.222 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:09:09.222 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,58}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:57 
04:09:13.160 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:09:13.160" Took=30684 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_09_05_439}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:13.160 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",57,57},{"delta_send",57,58},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",138,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_09_05_439}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)293> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_09_05_439}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)294> f(AwMapRes).
ok
(g@11.0.0.17)295> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:15.772"
(g@11.0.0.17)296> 04:09:15.906 [error] C3 propagation "2020-08-06T04:09:15.906"  
04:09:16.168 [error] C1 propagation "2020-08-06T04:09:16.168" 
04:09:16.270 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:09:16.270 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,59}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:58 
04:09:16.411 [error] Sending find_sub batch [] 
04:09:16.411 [error] Sending find_sub_aq batch [] 
04:09:16.411 [error] batched message propagation "2020-08-06T04:09:16.411" 
04:09:20.267 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:09:20.267" Took=39760 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_09_11_460}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:20.268 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",58,58},{"delta_send",58,59},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",140,0},{"sub_cancel",0,0}] 
04:09:23.169 [error] C1 propagation "2020-08-06T04:09:23.169" 
04:09:23.235 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:09:23.235 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,60}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:59 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_09_11_460}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)297> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_09_11_460}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)298> f(AwMapRes).
ok
(g@11.0.0.17)299> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:23.806"
(g@11.0.0.17)300> 04:09:26.034 [error] C2 propagation "2020-08-06T04:09:26.342"  
04:09:26.413 [error] Sending find_sub batch [] 
04:09:26.413 [error] Sending find_sub_aq batch [] 
04:09:26.413 [error] batched message propagation "2020-08-06T04:09:26.413" 
04:09:27.251 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:09:27.251" Took=23821 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_09_17_481}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:27.251 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",59,59},{"delta_send",59,60},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",142,0},{"sub_cancel",0,0}] 
04:09:30.171 [error] C1 propagation "2020-08-06T04:09:30.171" 
04:09:30.199 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:09:30.199 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,61}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:60 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_09_17_481}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)301> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_09_17_481}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)302> f(AwMapRes).
ok
(g@11.0.0.17)303> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:31.838"
(g@11.0.0.17)304> 04:09:34.262 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:09:34.262" Took=30118 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_09_23_503}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:34.262 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",60,60},{"delta_send",60,61},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",144,0},{"sub_cancel",0,0}] 
04:09:36.414 [error] Sending find_sub batch [] 
04:09:36.414 [error] Sending find_sub_aq batch [] 
04:09:36.414 [error] batched message propagation "2020-08-06T04:09:36.414" 
04:09:37.173 [error] C1 propagation "2020-08-06T04:09:37.173" 
04:09:37.268 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:09:37.269 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,62}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:61 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_09_23_503}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)305> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_09_23_503}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)306> f(AwMapRes).
ok
(g@11.0.0.17)307> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:39.874"
(g@11.0.0.17)308> 04:09:41.263 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:09:41.263" Took=28364 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_09_29_523}],[],[],[],[],[],[],[],[]}}}}] 
04:09:41.263 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",61,61},{"delta_send",61,62},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",146,0},{"sub_cancel",0,0}] 
04:09:44.174 [error] C1 propagation "2020-08-06T04:09:44.174" 
04:09:44.175 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:09:44.175 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,63}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:62 
04:09:46.415 [error] Sending find_sub batch [] 
04:09:46.415 [error] Sending find_sub_aq batch [] 
04:09:46.415 [error] batched message propagation "2020-08-06T04:09:46.415" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_09_29_523}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)309> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_09_29_523}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)310> f(AwMapRes).
ok
(g@11.0.0.17)311> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:47.912"
(g@11.0.0.17)312> 04:09:48.295 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:09:48.295" Took=52296 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_09_35_543}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:48.296 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",62,62},{"delta_send",62,63},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",148,0},{"sub_cancel",0,0}] 
04:09:51.175 [error] C1 propagation "2020-08-06T04:09:51.175" 
04:09:51.175 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:09:51.175 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,64}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:63 
04:09:55.267 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:09:55.267" Took=28650 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_09_47_592}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:55.267 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",63,63},{"delta_send",63,64},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",150,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_09_47_592}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)313> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_09_47_592}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)314> f(AwMapRes).
ok
(g@11.0.0.17)315> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:55.950"
(g@11.0.0.17)316> 04:09:56.417 [error] Sending find_sub batch [] 
04:09:56.417 [error] Sending find_sub_aq batch [] 
04:09:56.417 [error] batched message propagation "2020-08-06T04:09:56.417" 
04:09:58.176 [error] C1 propagation "2020-08-06T04:09:58.176" 
04:09:58.193 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:09:58.226 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,65}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:64 
04:10:02.271 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:10:02.271" Took=32898 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_09_53_611}],[],[],[],[],[],[]}}}}] 
04:10:02.271 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",64,64},{"delta_send",64,65},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",152,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_09_53_611}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)317> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_09_53_611}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)318> f(AwMapRes).
ok
(g@11.0.0.17)319> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:03.985"
(g@11.0.0.17)320> 04:10:05.178 [error] C1 propagation "2020-08-06T04:10:05.178"  
04:10:05.234 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:10:05.265 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,66}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:65 
04:10:06.036 [error] C2 propagation "2020-08-06T04:10:06.362" 
04:10:06.419 [error] Sending find_sub batch [] 
04:10:06.419 [error] Sending find_sub_aq batch [] 
04:10:06.419 [error] batched message propagation "2020-08-06T04:10:06.419" 
04:10:09.272 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:10:09.272" Took=32641 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_09_59_631}],[],[],[],[],[],[],[],[]}}}}] 
04:10:09.273 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",65,65},{"delta_send",65,66},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",154,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_09_59_631}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)321> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_09_59_631}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)322> f(AwMapRes).
ok
(g@11.0.0.17)323> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:12.241"
(g@11.0.0.17)324> 04:10:12.179 [error] C1 propagation "2020-08-06T04:10:12.179"  
04:10:12.262 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:10:12.262 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,67}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:66 
04:10:16.267 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:10:16.267" Took=25471 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_05_655}]}}}}] 
04:10:16.269 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",66,66},{"delta_send",66,67},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",156,0},{"sub_cancel",0,0}] 
04:10:16.433 [error] Sending find_sub batch [] 
04:10:16.433 [error] Sending find_sub_aq batch [] 
04:10:16.433 [error] batched message propagation "2020-08-06T04:10:16.433" 
04:10:19.180 [error] C1 propagation "2020-08-06T04:10:19.180" 
04:10:19.180 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:10:19.180 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,68}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:67 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)325> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)326> f(AwMapRes).
ok
(g@11.0.0.17)327> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:20.627"
(g@11.0.0.17)328> 04:10:25.388 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:10:25.388" Took=25383 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_11_677}],[]}}}}] 
04:10:25.389 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",67,67},{"delta_send",67,68},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",158,0},{"sub_cancel",0,0}] 
04:10:25.907 [error] C3 propagation "2020-08-06T04:10:25.907" 
04:10:26.181 [error] C1 propagation "2020-08-06T04:10:26.181" 
04:10:26.206 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:10:26.206 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,69}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:68 
04:10:26.434 [error] Sending find_sub batch [] 
04:10:26.434 [error] Sending find_sub_aq batch [] 
04:10:26.434 [error] batched message propagation "2020-08-06T04:10:26.434" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)329> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@11.0.0.17)330> f(AwMapRes).
ok
(g@11.0.0.17)331> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:28.978"
(g@11.0.0.17)332> 04:10:30.280 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:10:30.280" Took=32935 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_10_17_699}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:10:30.281 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",68,68},{"delta_send",68,69},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",160,0},{"sub_cancel",0,0}] 
04:10:33.182 [error] C1 propagation "2020-08-06T04:10:33.182" 
04:10:33.182 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:10:33.182 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,70}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:69 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_10_17_699}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)333> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_10_17_699}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)334> f(AwMapRes).
ok
(g@11.0.0.17)335> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:36.129"
(g@11.0.0.17)336> 04:10:36.435 [error] Sending find_sub batch [] 
04:10:36.435 [error] Sending find_sub_aq batch [] 
04:10:36.435 [error] batched message propagation "2020-08-06T04:10:36.435" 
04:10:37.272 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:10:37.272" Took=26759 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_10_29_743}],[],[],[],[],[],[],[],[]}}}}] 
04:10:37.416 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",69,69},{"delta_send",69,70},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",162,0},{"sub_cancel",0,0}] 
04:10:40.184 [error] C1 propagation "2020-08-06T04:10:40.184" 
04:10:40.184 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:10:40.184 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,71}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:70 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_10_29_743}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)337> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_10_29_743}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)338> f(AwMapRes).
ok
(g@11.0.0.17)339> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:44.163"
(g@11.0.0.17)340> 04:10:44.348 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:10:44.348" Took=40562 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_35_767}],[],[],[],[],[]}}}}] 
04:10:44.349 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",70,70},{"delta_send",70,71},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",164,0},{"sub_cancel",0,0}] 
04:10:46.037 [error] C2 propagation "2020-08-06T04:10:46.372" 
04:10:46.437 [error] Sending find_sub batch [] 
04:10:46.437 [error] Sending find_sub_aq batch [] 
04:10:46.437 [error] batched message propagation "2020-08-06T04:10:46.437" 
04:10:47.186 [error] C1 propagation "2020-08-06T04:10:47.186" 
04:10:47.186 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:10:47.186 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,72}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:71 
04:10:51.275 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:10:51.275" Took=27469 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_41_788}],[],[],[],[],[]}}}}] 
04:10:51.275 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",71,71},{"delta_send",71,72},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",166,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_10_41_788}],
             [],[],[],...}}}}]}
(g@11.0.0.17)341> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_10_41_788}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)342> f(AwMapRes).
ok
(g@11.0.0.17)343> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:52.200"
(g@11.0.0.17)344> 04:10:54.187 [error] C1 propagation "2020-08-06T04:10:54.187"  
04:10:54.188 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:10:54.188 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,73}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:72 
04:10:56.439 [error] Sending find_sub batch [] 
04:10:56.439 [error] Sending find_sub_aq batch [] 
04:10:56.439 [error] batched message propagation "2020-08-06T04:10:56.439" 
04:10:58.289 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:10:58.289" Took=35681 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_10_47_811}],[],[],[],[],[],[],[],[]}}}}] 
04:10:58.289 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",72,72},{"delta_send",72,73},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",168,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_10_47_811}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)345> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_10_47_811}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)346> f(AwMapRes).
ok
(g@11.0.0.17)347> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:00.246"
(g@11.0.0.17)348> 04:11:01.188 [error] C1 propagation "2020-08-06T04:11:01.188"  
04:11:01.188 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:11:01.188 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,74}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:73 
04:11:05.286 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:11:05.286" Took=36509 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_10_53_831}],[],[],[],[],[],[],[]}}}}] 
04:11:05.286 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",73,73},{"delta_send",73,74},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",170,0},{"sub_cancel",0,0}] 
04:11:06.441 [error] Sending find_sub batch [] 
04:11:06.441 [error] Sending find_sub_aq batch [] 
04:11:06.441 [error] batched message propagation "2020-08-06T04:11:06.441" 
04:11:08.190 [error] C1 propagation "2020-08-06T04:11:08.190" 
04:11:08.214 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:11:08.214 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,75}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:74 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_10_53_831}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)349> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_10_53_831}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)350> f(AwMapRes).
ok
(g@11.0.0.17)351> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:08.350"
(g@11.0.0.17)352> 04:11:12.298 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:11:12.298" Took=44818 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_59_855}],[]}}}}] 
04:11:12.298 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",74,74},{"delta_send",74,75},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",172,0},{"sub_cancel",0,0}] 
04:11:15.192 [error] C1 propagation "2020-08-06T04:11:15.192" 
04:11:15.192 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:11:15.192 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,76}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:75 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)353> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@11.0.0.17)354> f(AwMapRes).
ok
(g@11.0.0.17)355> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:16.343"
(g@11.0.0.17)356> 04:11:16.442 [error] Sending find_sub batch [] 
04:11:16.442 [error] Sending find_sub_aq batch [] 
04:11:16.442 [error] batched message propagation "2020-08-06T04:11:16.442" 
04:11:19.298 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:11:19.297" Took=42297 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_11_11_899}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:11:19.298 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",75,75},{"delta_send",75,76},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",174,0},{"sub_cancel",0,0}] 
04:11:22.193 [error] C1 propagation "2020-08-06T04:11:22.193" 
04:11:22.193 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:11:22.193 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,77}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:76 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_11_11_899}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)357> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_11_11_899}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)358> f(AwMapRes).
ok
(g@11.0.0.17)359> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:24.375"
(g@11.0.0.17)360> 04:11:26.038 [error] C2 propagation "2020-08-06T04:11:26.382"  
04:11:26.444 [error] Sending find_sub batch [] 
04:11:26.444 [error] Sending find_sub_aq batch [] 
04:11:26.444 [error] batched message propagation "2020-08-06T04:11:26.444" 
04:11:27.773 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:11:27.772" Took=27631 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_11_17_919}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:11:27.773 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",76,76},{"delta_send",76,77},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",176,0},{"sub_cancel",0,0}] 
04:11:29.195 [error] C1 propagation "2020-08-06T04:11:29.195" 
04:11:29.195 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:11:29.195 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,78}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:77 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_11_17_919}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)361> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_11_17_919}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)362> f(AwMapRes).
ok
(g@11.0.0.17)363> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:32.414"
(g@11.0.0.17)364> 04:11:33.294 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:11:33.293" Took=35779 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_11_23_943}]}}}}] 
04:11:33.294 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",77,77},{"delta_send",77,78},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",178,0},{"sub_cancel",0,0}] 
04:11:35.908 [error] C3 propagation "2020-08-06T04:11:35.908" 
04:11:36.197 [error] C1 propagation "2020-08-06T04:11:36.197" 
04:11:36.197 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:11:36.197 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,79}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:78 
04:11:36.445 [error] Sending find_sub batch [] 
04:11:36.445 [error] Sending find_sub_aq batch [] 
04:11:36.445 [error] batched message propagation "2020-08-06T04:11:36.445" 
04:11:40.294 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:11:40.293" Took=33429 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_11_29_965}],[],[],[]}}}}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(g@11.0.0.17)365> 04:11:40.295 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",78,78},{"delta_send",78,79},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",180,0},{"sub_cancel",0,0}] 
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_11_29_965}],
         [],[],[]}}}}]
(g@11.0.0.17)366> f(AwMapRes).
ok
(g@11.0.0.17)367> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:40.450"
(g@11.0.0.17)368> 04:11:43.198 [error] C1 propagation "2020-08-06T04:11:43.198"  
04:11:43.198 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:11:43.198 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,80}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:79 
04:11:46.447 [error] Sending find_sub batch [] 
04:11:46.447 [error] Sending find_sub_aq batch [] 
04:11:46.447 [error] batched message propagation "2020-08-06T04:11:46.447" 
04:11:47.285 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:11:47.285" Took=22360 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_11_35_986}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:11:47.285 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",79,79},{"delta_send",79,80},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",182,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_11_35_986}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)369> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_11_35_986}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)370> f(AwMapRes).
ok
(g@11.0.0.17)371> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:48.486"
(g@11.0.0.17)372> 04:11:50.200 [error] C1 propagation "2020-08-06T04:11:50.200"  
04:11:50.200 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:11:50.200 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,81}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:80 
04:11:54.308 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:11:54.307" Took=42722 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_11_42_007}],[],[],[],[],[],[]}}}}] 
04:11:54.308 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",80,80},{"delta_send",80,81},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",184,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_11_42_007}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)373> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_11_42_007}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)374> 04:11:56.449 [error] Sending find_sub batch [] 
f(AwMapRes).
ok
(g@11.0.0.17)375> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:56.521"
(g@11.0.0.17)376> 04:11:56.449 [error] Sending find_sub_aq batch [] 
04:11:56.449 [error] batched message propagation "2020-08-06T04:11:56.449" 
04:11:57.201 [error] C1 propagation "2020-08-06T04:11:57.201" 
04:11:57.201 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:11:57.201 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,82}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:81 
04:12:01.299 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:12:01.299" Took=31053 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_11_54_070}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:01.299 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",81,81},{"delta_send",81,82},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",186,0},{"sub_cancel",0,0}] 
04:12:04.203 [error] C1 propagation "2020-08-06T04:12:04.203" 
04:12:04.240 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:12:04.240 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,83}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:82 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_11_54_070}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)377> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_11_54_070}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)378> f(AwMapRes).
ok
(g@11.0.0.17)379> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:04.558"
(g@11.0.0.17)380> 04:12:06.039 [error] C2 propagation "2020-08-06T04:12:06.392"  
04:12:06.451 [error] Sending find_sub batch [] 
04:12:06.451 [error] Sending find_sub_aq batch [] 
04:12:06.451 [error] batched message propagation "2020-08-06T04:12:06.451" 
04:12:10.116 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:12:10.116" Took=22047 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_12_00_092}],[],[],[],[],[],[],[]}}}}] 
04:12:10.117 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",82,82},{"delta_send",82,83},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",188,0},{"sub_cancel",0,0}] 
04:12:11.204 [error] C1 propagation "2020-08-06T04:12:11.204" 
04:12:11.237 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:12:11.237 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,84}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:83 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_12_00_092}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)381> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_12_00_092}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)382> f(AwMapRes).
ok
(g@11.0.0.17)383> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:12.592"
(g@11.0.0.17)384> 04:12:15.333 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:12:15.333" Took=38753 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_12_06_115}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:15.333 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",83,83},{"delta_send",83,84},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",190,0},{"sub_cancel",0,0}] 
04:12:16.452 [error] Sending find_sub batch [] 
04:12:16.452 [error] Sending find_sub_aq batch [] 
04:12:16.452 [error] batched message propagation "2020-08-06T04:12:16.452" 
04:12:18.205 [error] C1 propagation "2020-08-06T04:12:18.205" 
04:12:18.205 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:12:18.206 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,85}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:84 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_12_06_115}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)385> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_12_06_115}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)386> f(AwMapRes).
ok
(g@11.0.0.17)387> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:20.630"
(g@11.0.0.17)388> 04:12:25.206 [error] C1 propagation "2020-08-06T04:12:25.206"  
04:12:26.453 [error] Sending find_sub batch [] 
04:12:26.453 [error] Sending find_sub_aq batch [] 
04:12:26.453 [error] batched message propagation "2020-08-06T04:12:26.453" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_12_06_115}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)389> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_12_06_115}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)390> f(AwMapRes).
ok
(g@11.0.0.17)391> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:28.667"
(g@11.0.0.17)392> 04:12:29.355 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:12:29.355" Took=35129 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_12_17_763}],[]}}}}] 
04:12:29.355 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",84,84},{"delta_send",84,85},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",192,0},{"sub_cancel",0,0}] 
04:12:32.208 [error] C1 propagation "2020-08-06T04:12:32.208" 
04:12:32.287 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:12:32.288 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,86}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:85 
04:12:36.337 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:12:36.337" Took=37475 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_12_23_784}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:36.337 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",85,85},{"delta_send",85,86},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",194,0},{"sub_cancel",0,0}] 
04:12:36.455 [error] Sending find_sub batch [] 
04:12:36.455 [error] Sending find_sub_aq batch [] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_12_23_784}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)393> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_12_23_784}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)394> f(AwMapRes).
ok
(g@11.0.0.17)395> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:36.698"
(g@11.0.0.17)396> 04:12:36.455 [error] batched message propagation "2020-08-06T04:12:36.455" 
04:12:39.210 [error] C1 propagation "2020-08-06T04:12:39.210" 
04:12:39.210 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:12:39.210 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,87}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:86 
04:12:43.336 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:12:43.336" Took=35425 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_12_35_827}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:43.336 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",86,86},{"delta_send",86,87},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",196,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_12_35_827}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)397> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_12_35_827}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)398> f(AwMapRes).
ok
(g@11.0.0.17)399> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:44.737"
(g@11.0.0.17)400> 04:12:45.909 [error] C3 propagation "2020-08-06T04:12:45.909"  
04:12:46.040 [error] C2 propagation "2020-08-06T04:12:46.402" 
04:12:46.211 [error] C1 propagation "2020-08-06T04:12:46.211" 
04:12:46.337 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:12:46.337 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,88}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:87 
04:12:46.477 [error] Sending find_sub batch [] 
04:12:46.477 [error] Sending find_sub_aq batch [] 
04:12:46.477 [error] batched message propagation "2020-08-06T04:12:46.477" 
04:12:50.325 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:12:50.325" Took=23772 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_12_41_849}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:50.325 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",87,87},{"delta_send",87,88},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",198,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_12_41_849}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)401> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_12_41_849}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)402> f(AwMapRes).
ok
(g@11.0.0.17)403> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:52.776"
(g@11.0.0.17)404> 04:12:53.213 [error] C1 propagation "2020-08-06T04:12:53.213"  
04:12:53.294 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:12:53.294 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,89}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:88 
04:12:56.479 [error] Sending find_sub batch [] 
04:12:56.479 [error] Sending find_sub_aq batch [] 
04:12:56.479 [error] batched message propagation "2020-08-06T04:12:56.479" 
04:12:57.338 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:12:57.338" Took=34392 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_12_47_868}]}}}}] 
04:12:57.423 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",88,88},{"delta_send",88,89},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",200,0},{"sub_cancel",0,0}] 
04:13:00.215 [error] C1 propagation "2020-08-06T04:13:00.215" 
04:13:00.247 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:13:00.247 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,90}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:89 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)405> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)406> f(AwMapRes).
ok
(g@11.0.0.17)407> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:00.810"
(g@11.0.0.17)408> 04:13:04.326 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:13:04.326" Took=22702 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_12_53_891}],[],[],[],[],[],[],[],[]}}}}] 
04:13:04.328 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",89,89},{"delta_send",89,90},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",202,0},{"sub_cancel",0,0}] 
04:13:06.481 [error] Sending find_sub batch [] 
04:13:06.481 [error] Sending find_sub_aq batch [] 
04:13:06.481 [error] batched message propagation "2020-08-06T04:13:06.481" 
04:13:07.217 [error] C1 propagation "2020-08-06T04:13:07.217" 
04:13:07.328 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:13:07.328 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,91}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:90 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_12_53_891}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)409> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_12_53_891}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)410> f(AwMapRes).
ok
(g@11.0.0.17)411> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:08.848"
(g@11.0.0.17)412> 04:13:11.355 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:13:11.354" Took=48771 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_12_59_911}],[],[],[],[],[],[]}}}}] 
04:13:11.355 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",90,90},{"delta_send",90,91},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",204,0},{"sub_cancel",0,0}] 
04:13:14.218 [error] C1 propagation "2020-08-06T04:13:14.218" 
04:13:14.265 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:13:14.265 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,92}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:91 
04:13:16.483 [error] Sending find_sub batch [] 
04:13:16.483 [error] Sending find_sub_aq batch [] 
04:13:16.483 [error] batched message propagation "2020-08-06T04:13:16.483" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_12_59_911}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)413> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_12_59_911}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)414> f(AwMapRes).
ok
(g@11.0.0.17)415> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:16.892"
(g@11.0.0.17)416> 04:13:18.341 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:13:18.341" Took=25210 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_13_05_930}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:13:18.341 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",91,91},{"delta_send",91,92},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",206,0},{"sub_cancel",0,0}] 
04:13:21.219 [error] C1 propagation "2020-08-06T04:13:21.219" 
04:13:21.221 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:13:21.246 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,93}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:92 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_13_05_930}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)417> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_13_05_930}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)418> f(AwMapRes).
ok
(g@11.0.0.17)419> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:24.932"
(g@11.0.0.17)420> 04:13:25.336 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:13:25.336" Took=25107 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_13_17_972}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:13:25.339 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",92,92},{"delta_send",92,93},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",208,0},{"sub_cancel",0,0}] 
04:13:26.041 [error] C2 propagation "2020-08-06T04:13:26.417" 
04:13:26.484 [error] Sending find_sub batch [] 
04:13:26.484 [error] Sending find_sub_aq batch [] 
04:13:26.484 [error] batched message propagation "2020-08-06T04:13:26.484" 
04:13:28.220 [error] C1 propagation "2020-08-06T04:13:28.220" 
04:13:28.302 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:13:28.302 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,94}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:93 
04:13:32.350 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:13:32.350" Took=41653 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_13_24_010}],[],[],[],[]}}}}] 
04:13:32.350 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",93,93},{"delta_send",93,94},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",210,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_13_24_010}],
             [],[],...}}}}]}
(g@11.0.0.17)421> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_13_24_010}],
         [],[],[],[]}}}}]
(g@11.0.0.17)422> f(AwMapRes).
ok
(g@11.0.0.17)423> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:32.972"
(g@11.0.0.17)424> 04:13:35.221 [error] C1 propagation "2020-08-06T04:13:35.221"  
04:13:35.257 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:13:35.257 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,95}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:94 
04:13:36.485 [error] Sending find_sub batch [] 
04:13:36.485 [error] Sending find_sub_aq batch [] 
04:13:36.485 [error] batched message propagation "2020-08-06T04:13:36.485" 
04:13:39.355 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:13:39.354" Took=40538 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_13_30_035}],[],[]}}}}] 
04:13:39.355 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",94,94},{"delta_send",94,95},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",212,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@11.0.0.17)425> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_13_30_035}],
         [],[]}}}}]
(g@11.0.0.17)426> f(AwMapRes).
ok
(g@11.0.0.17)427> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:41.740"
(g@11.0.0.17)428> 04:13:42.222 [error] C1 propagation "2020-08-06T04:13:42.222"  
04:13:42.274 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:13:42.275 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,96}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:95 
04:13:46.414 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:13:46.414" Took=42027 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_13_36_052}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:13:46.414 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",95,95},{"delta_send",95,96},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",214,0},{"sub_cancel",0,0}] 
04:13:46.529 [error] Sending find_sub batch [] 
04:13:46.529 [error] Sending find_sub_aq batch [] 
04:13:46.530 [error] batched message propagation "2020-08-06T04:13:46.530" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_13_36_052}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)429> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_13_36_052}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)430> f(AwMapRes).
ok
(g@11.0.0.17)431> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:49.460"
(g@11.0.0.17)432> 04:13:49.224 [error] C1 propagation "2020-08-06T04:13:49.224"  
04:13:49.284 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:13:49.294 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,97}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:96 
04:13:53.360 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:13:53.360" Took=43312 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_13_42_071}],[],[],[],[],[],[]}}}}] 
04:13:53.360 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",96,96},{"delta_send",96,97},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",216,0},{"sub_cancel",0,0}] 
04:13:55.910 [error] C3 propagation "2020-08-06T04:13:55.910" 
04:13:56.225 [error] C1 propagation "2020-08-06T04:13:56.225" 
04:13:56.278 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:13:56.278 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,98}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:97 
04:13:56.531 [error] Sending find_sub batch [] 
04:13:56.531 [error] Sending find_sub_aq batch [] 
04:13:56.531 [error] batched message propagation "2020-08-06T04:13:56.531" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_13_42_071}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)433> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_13_42_071}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)434> f(AwMapRes).
ok
(g@11.0.0.17)435> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:57.811"
(g@11.0.0.17)436> 04:14:00.363 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:14:00.363" Took=39912 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_13_48_095}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:00.364 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",97,97},{"delta_send",97,98},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",218,0},{"sub_cancel",0,0}] 
04:14:03.226 [error] C1 propagation "2020-08-06T04:14:03.226" 
04:14:03.282 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:14:03.297 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,99}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:98 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_13_48_095}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)437> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_13_48_095}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)438> f(AwMapRes).
ok
(g@11.0.0.17)439> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:05.115"
(g@11.0.0.17)440> 04:14:06.043 [error] C2 propagation "2020-08-06T04:14:06.432"  
04:14:06.533 [error] Sending find_sub batch [] 
04:14:06.533 [error] Sending find_sub_aq batch [] 
04:14:06.533 [error] batched message propagation "2020-08-06T04:14:06.533" 
04:14:07.356 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:14:07.356" Took=37209 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_14_00_141}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:07.356 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",98,98},{"delta_send",98,99},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",220,0},{"sub_cancel",0,0}] 
04:14:10.227 [error] C1 propagation "2020-08-06T04:14:10.227" 
04:14:10.227 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:14:10.228 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,100}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:99 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_14_00_141}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)441> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_14_00_141}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)442> f(AwMapRes).
ok
(g@11.0.0.17)443> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:13.151"
(g@11.0.0.17)444> 04:14:14.360 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:14:14.360" Took=41588 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_14_06_163}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:14.360 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",99,99},{"delta_send",99,100},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",222,0},{"sub_cancel",0,0}] 
04:14:16.534 [error] Sending find_sub batch [] 
04:14:16.534 [error] Sending find_sub_aq batch [] 
04:14:16.534 [error] batched message propagation "2020-08-06T04:14:16.534" 
04:14:17.229 [error] C1 propagation "2020-08-06T04:14:17.229" 
04:14:17.255 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:14:17.255 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,101}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:100 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_14_06_163}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)445> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_14_06_163}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)446> f(AwMapRes).
ok
(g@11.0.0.17)447> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:21.182"
(g@11.0.0.17)448> 04:14:21.343 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:14:21.343" Took=23766 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_14_12_187}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:21.346 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",100,100},{"delta_send",100,101},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",224,0},{"sub_cancel",0,0}] 
04:14:24.231 [error] C1 propagation "2020-08-06T04:14:24.231" 
04:14:24.267 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:14:24.267 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,102}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:101 
04:14:26.536 [error] Sending find_sub batch [] 
04:14:26.536 [error] Sending find_sub_aq batch [] 
04:14:26.536 [error] batched message propagation "2020-08-06T04:14:26.536" 
04:14:28.350 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:14:28.349" Took=27142 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_14_18_207}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:28.350 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",101,101},{"delta_send",101,102},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",226,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_14_18_207}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)449> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_14_18_207}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)450> f(AwMapRes).
ok
(g@11.0.0.17)451> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:29.217"
(g@11.0.0.17)452> 04:14:31.233 [error] C1 propagation "2020-08-06T04:14:31.233"  
04:14:31.233 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:14:31.234 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,103}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:102 
04:14:35.412 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:14:35.412" Took=33404 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_24_227}],[],[]}}}}] 
04:14:35.413 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",102,102},{"delta_send",102,103},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",228,0},{"sub_cancel",0,0}] 
04:14:36.537 [error] Sending find_sub batch [] 
04:14:36.537 [error] Sending find_sub_aq batch [] 
04:14:36.537 [error] batched message propagation "2020-08-06T04:14:36.537" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@11.0.0.17)453> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_14_24_227}],
         [],[]}}}}]
(g@11.0.0.17)454> f(AwMapRes).
ok
(g@11.0.0.17)455> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:37.251"
(g@11.0.0.17)456> 04:14:38.235 [error] C1 propagation "2020-08-06T04:14:38.235"  
04:14:38.312 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:14:38.312 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,104}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:103 
04:14:42.395 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:14:42.395" Took=23005 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_30_247}],[],[],[],[],[]}}}}] 
04:14:42.395 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",103,103},{"delta_send",103,104},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",230,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_14_30_247}],
             [],[],[],...}}}}]}
(g@11.0.0.17)457> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_14_30_247}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)458> 04:14:45.237 [error] C1 propagation "2020-08-06T04:14:45.237"  
f(AwMapRes).
ok
(g@11.0.0.17)459> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:45.290"
(g@11.0.0.17)460> 04:14:45.237 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:14:45.237 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,105}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:104 
04:14:46.044 [error] C2 propagation "2020-08-06T04:14:46.442" 
04:14:46.539 [error] Sending find_sub batch [] 
04:14:46.539 [error] Sending find_sub_aq batch [] 
04:14:46.539 [error] batched message propagation "2020-08-06T04:14:46.539" 
04:14:49.405 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:14:49.405" Took=29422 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_42_291}]}}}}] 
04:14:49.406 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",104,104},{"delta_send",104,105},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",232,0},{"sub_cancel",0,0}] 
04:14:52.238 [error] C1 propagation "2020-08-06T04:14:52.238" 
04:14:52.238 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:14:52.238 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,106}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:105 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)461> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)462> f(AwMapRes).
ok
(g@11.0.0.17)463> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:53.324"
(g@11.0.0.17)464> 04:14:56.414 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:14:56.414" Took=37577 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_48_307}],[],[],[],[],[]}}}}] 
04:14:56.415 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",105,105},{"delta_send",105,106},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",234,0},{"sub_cancel",0,0}] 
04:14:56.607 [error] Sending find_sub batch [] 
04:14:56.607 [error] Sending find_sub_aq batch [] 
04:14:56.607 [error] batched message propagation "2020-08-06T04:14:56.607" 
04:14:59.240 [error] C1 propagation "2020-08-06T04:14:59.240" 
04:14:59.248 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:14:59.248 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,107}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:106 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_14_48_307}],
             [],[],[],...}}}}]}
(g@11.0.0.17)465> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_14_48_307}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)466> f(AwMapRes).
ok
(g@11.0.0.17)467> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:01.367"
(g@11.0.0.17)468> 04:15:03.421 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:15:03.421" Took=38148 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_54_327}]}}}}] 
04:15:03.421 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",106,106},{"delta_send",106,107},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",236,0},{"sub_cancel",0,0}] 
04:15:05.912 [error] C3 propagation "2020-08-06T04:15:05.912" 
04:15:06.241 [error] C1 propagation "2020-08-06T04:15:06.241" 
04:15:06.270 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:15:06.270 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,108}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:107 
04:15:06.609 [error] Sending find_sub batch [] 
04:15:06.609 [error] Sending find_sub_aq batch [] 
04:15:06.609 [error] batched message propagation "2020-08-06T04:15:06.609" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)469> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)470> f(AwMapRes).
ok
(g@11.0.0.17)471> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:09.408"
(g@11.0.0.17)472> 04:15:10.419 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:15:10.419" Took=32355 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_00_346}]}}}}] 
04:15:10.419 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",107,107},{"delta_send",107,108},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",238,0},{"sub_cancel",0,0}] 
04:15:13.243 [error] C1 propagation "2020-08-06T04:15:13.243" 
04:15:13.243 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:15:13.243 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,109}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:108 
04:15:16.610 [error] Sending find_sub batch [] 
04:15:16.610 [error] Sending find_sub_aq batch [] 
04:15:16.610 [error] batched message propagation "2020-08-06T04:15:16.610" 
04:15:17.406 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:15:17.406" Took=23640 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_15_06_367}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_15_06_367}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)473> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_15_06_367}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)474> f(AwMapRes).
ok
(g@11.0.0.17)475> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:17.477"
(g@11.0.0.17)476> 04:15:17.407 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",108,108},{"delta_send",108,109},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",240,0},{"sub_cancel",0,0}] 
04:15:20.244 [error] C1 propagation "2020-08-06T04:15:20.244" 
04:15:20.245 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:15:20.245 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,110}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:109 
04:15:24.410 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:15:24.409" Took=28915 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_15_12_391}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:15:24.410 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",109,109},{"delta_send",109,110},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",242,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_15_12_391}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)477> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_15_12_391}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)478> f(AwMapRes).
ok
(g@11.0.0.17)479> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:25.484"
(g@11.0.0.17)480> 04:15:26.045 [error] C2 propagation "2020-08-06T04:15:26.453"  
04:15:26.612 [error] Sending find_sub batch [] 
04:15:26.612 [error] Sending find_sub_aq batch [] 
04:15:26.612 [error] batched message propagation "2020-08-06T04:15:26.612" 
04:15:27.245 [error] C1 propagation "2020-08-06T04:15:27.245" 
04:15:27.249 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:15:27.249 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,111}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:110 
04:15:31.408 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:15:31.408" Took=25758 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_18_415}],[],[],[],[],[],[]}}}}] 
04:15:31.409 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",110,110},{"delta_send",110,111},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",244,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_15_18_415}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)481> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_15_18_415}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)482> f(AwMapRes).
ok
(g@11.0.0.17)483> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:33.523"
(g@11.0.0.17)484> 04:15:34.246 [error] C1 propagation "2020-08-06T04:15:34.246"  
04:15:34.287 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:15:34.287 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,112}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:111 
04:15:36.613 [error] Sending find_sub batch [] 
04:15:36.613 [error] Sending find_sub_aq batch [] 
04:15:36.613 [error] batched message propagation "2020-08-06T04:15:36.613" 
04:15:38.417 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:15:38.417" Took=34239 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_15_30_458}],[],[],[],[],[],[],[],[],[]}}}}] 
04:15:38.418 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",111,111},{"delta_send",111,112},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",246,0},{"sub_cancel",0,0}] 
04:15:41.247 [error] C1 propagation "2020-08-06T04:15:41.247" 
04:15:41.269 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:15:41.270 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,113}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:112 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_15_30_458}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)485> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_15_30_458}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)486> f(AwMapRes).
ok
(g@11.0.0.17)487> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:41.575"
(g@11.0.0.17)488> 04:15:45.421 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:15:45.421" Took=33868 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_36_478}],[],[]}}}}] 
04:15:45.421 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",112,112},{"delta_send",112,113},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",248,0},{"sub_cancel",0,0}] 
04:15:46.614 [error] Sending find_sub batch [] 
04:15:46.614 [error] Sending find_sub_aq batch [] 
04:15:46.614 [error] batched message propagation "2020-08-06T04:15:46.614" 
04:15:48.248 [error] C1 propagation "2020-08-06T04:15:48.248" 
04:15:48.301 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:15:48.301 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,114}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:113 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@11.0.0.17)489> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_15_36_478}],
         [],[]}}}}]
(g@11.0.0.17)490> f(AwMapRes).
ok
(g@11.0.0.17)491> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:49.611"
(g@11.0.0.17)492> 04:15:52.426 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:15:52.426" Took=34671 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_42_499}]}}}}] 
04:15:52.427 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",113,113},{"delta_send",113,114},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",250,0},{"sub_cancel",0,0}] 
04:15:55.249 [error] C1 propagation "2020-08-06T04:15:55.249" 
04:15:55.289 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:15:55.289 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,115}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:114 
04:15:56.616 [error] Sending find_sub batch [] 
04:15:56.616 [error] Sending find_sub_aq batch [] 
04:15:56.616 [error] batched message propagation "2020-08-06T04:15:56.616" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)493> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)494> f(AwMapRes).
ok
(g@11.0.0.17)495> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:57.647"
(g@11.0.0.17)496> 04:15:59.434 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:15:59.434" Took=44732 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_15_48_519}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:15:59.435 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",114,114},{"delta_send",114,115},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",252,0},{"sub_cancel",0,0}] 
04:16:02.251 [error] C1 propagation "2020-08-06T04:16:02.251" 
04:16:02.263 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:16:02.312 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,116}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:115 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_15_48_519}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)497> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_15_48_519}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)498> f(AwMapRes).
ok
(g@11.0.0.17)499> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:05.685"
(g@11.0.0.17)500> 04:16:06.046 [error] C2 propagation "2020-08-06T04:16:06.462"  
04:16:06.422 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:16:06.422" Took=23474 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_15_54_539}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:06.422 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",115,115},{"delta_send",115,116},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",254,0},{"sub_cancel",0,0}] 
04:16:06.618 [error] Sending find_sub batch [] 
04:16:06.618 [error] Sending find_sub_aq batch [] 
04:16:06.618 [error] batched message propagation "2020-08-06T04:16:06.618" 
04:16:09.253 [error] C1 propagation "2020-08-06T04:16:09.253" 
04:16:09.253 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:16:09.254 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,117}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:116 
04:16:13.488 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:16:13.488" Took=31961 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_16_00_559}],[],[],[],[],[]}}}}] 
04:16:13.488 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",116,116},{"delta_send",116,117},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",256,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_16_00_559}],
             [],[],[],...}}}}]}
(g@11.0.0.17)501> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_16_00_559}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)502> f(AwMapRes).
ok
(g@11.0.0.17)503> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:13.721"
(g@11.0.0.17)504> 04:16:15.913 [error] C3 propagation "2020-08-06T04:16:15.913"  
04:16:16.254 [error] C1 propagation "2020-08-06T04:16:16.254" 
04:16:16.313 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:16:16.313 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,118}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:117 
04:16:16.619 [error] Sending find_sub batch [] 
04:16:16.619 [error] Sending find_sub_aq batch [] 
04:16:16.619 [error] batched message propagation "2020-08-06T04:16:16.619" 
04:16:20.441 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:16:20.441" Took=39502 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_16_12_602}],[],[],[],[],[],[],[],[]}}}}] 
04:16:20.441 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",117,117},{"delta_send",117,118},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",258,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_16_12_602}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)505> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_16_12_602}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)506> f(AwMapRes).
ok
(g@11.0.0.17)507> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:21.759"
(g@11.0.0.17)508> 04:16:23.255 [error] C1 propagation "2020-08-06T04:16:23.255"  
04:16:23.299 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:16:23.307 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,119}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:118 
04:16:26.621 [error] Sending find_sub batch [] 
04:16:26.621 [error] Sending find_sub_aq batch [] 
04:16:26.621 [error] batched message propagation "2020-08-06T04:16:26.621" 
04:16:27.436 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:16:27.436" Took=34373 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_16_18_623}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:27.436 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",118,118},{"delta_send",118,119},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",260,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_16_18_623}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)509> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_16_18_623}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)510> f(AwMapRes).
ok
(g@11.0.0.17)511> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:29.793"
(g@11.0.0.17)512> 04:16:30.256 [error] C1 propagation "2020-08-06T04:16:30.256"  
04:16:30.334 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:16:30.334 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,120}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:119 
04:16:34.434 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:16:34.434" Took=26564 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_16_24_642}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:34.434 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",119,119},{"delta_send",119,120},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",262,0},{"sub_cancel",0,0}] 
04:16:36.623 [error] Sending find_sub batch [] 
04:16:36.623 [error] Sending find_sub_aq batch [] 
04:16:36.623 [error] batched message propagation "2020-08-06T04:16:36.623" 
04:16:37.258 [error] C1 propagation "2020-08-06T04:16:37.258" 
04:16:37.375 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:16:37.376 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,121}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:120 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_16_24_642}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)513> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_16_24_642}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)514> f(AwMapRes).
ok
(g@11.0.0.17)515> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:37.830"
(g@11.0.0.17)516> 04:16:41.455 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:16:41.455" Took=46783 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_16_30_665}],[],[],[],[]}}}}] 
04:16:41.455 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",120,120},{"delta_send",120,121},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",264,0},{"sub_cancel",0,0}] 
04:16:44.260 [error] C1 propagation "2020-08-06T04:16:44.260" 
04:16:44.292 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:16:44.292 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,122}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:121 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_16_30_665}],
             [],[],...}}}}]}
(g@11.0.0.17)517> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_16_30_665}],
         [],[],[],[]}}}}]
(g@11.0.0.17)518> f(AwMapRes).
ok
(g@11.0.0.17)519> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:45.865"
(g@11.0.0.17)520> 04:16:46.048 [error] C2 propagation "2020-08-06T04:16:46.483"  
04:16:46.625 [error] Sending find_sub batch [] 
04:16:46.625 [error] Sending find_sub_aq batch [] 
04:16:46.625 [error] batched message propagation "2020-08-06T04:16:46.625" 
04:16:48.453 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:16:48.452" Took=42817 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_16_36_687}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:48.453 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",121,121},{"delta_send",121,122},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",266,0},{"sub_cancel",0,0}] 
04:16:51.261 [error] C1 propagation "2020-08-06T04:16:51.261" 
04:16:51.305 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:16:51.306 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,123}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:122 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_16_36_687}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)521> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_16_36_687}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)522> f(AwMapRes).
ok
(g@11.0.0.17)523> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:53.901"
(g@11.0.0.17)524> 04:16:55.449 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:16:55.449" Took=39392 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_16_42_707}],[],[],[],[],[],[],[]}}}}] 
04:16:55.449 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",122,122},{"delta_send",122,123},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",268,0},{"sub_cancel",0,0}] 
04:16:56.627 [error] Sending find_sub batch [] 
04:16:56.627 [error] Sending find_sub_aq batch [] 
04:16:56.627 [error] batched message propagation "2020-08-06T04:16:56.627" 
04:16:58.263 [error] C1 propagation "2020-08-06T04:16:58.263" 
04:16:58.328 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:16:58.328 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,124}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:123 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_16_42_707}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)525> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_16_42_707}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)526> f(AwMapRes).
ok
(g@11.0.0.17)527> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:01.943"
(g@11.0.0.17)528> 04:17:02.446 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:17:02.446" Took=30181 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_16_54_751}],[],[],[],[]}}}}] 
04:17:02.446 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",123,123},{"delta_send",123,124},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",270,0},{"sub_cancel",0,0}] 
04:17:05.265 [error] C1 propagation "2020-08-06T04:17:05.265" 
04:17:05.266 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:17:05.266 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,125}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:124 
04:17:06.629 [error] Sending find_sub batch [] 
04:17:06.629 [error] Sending find_sub_aq batch [] 
04:17:06.629 [error] batched message propagation "2020-08-06T04:17:06.629" 
04:17:09.444 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:17:09.444" Took=30967 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_00_768}],[],[],[],[],[]}}}}] 
04:17:09.444 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",124,124},{"delta_send",124,125},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",272,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_17_00_768}],
             [],[],[],...}}}}]}
(g@11.0.0.17)529> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_17_00_768}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)530> f(AwMapRes).
ok
(g@11.0.0.17)531> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:09.977"
(g@11.0.0.17)532> 04:17:12.266 [error] C1 propagation "2020-08-06T04:17:12.266"  
04:17:12.266 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:17:12.266 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,126}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:125 
04:17:16.445 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:17:16.445" Took=31778 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_06_799}],[],[],[]}}}}] 
04:17:16.446 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",125,125},{"delta_send",125,126},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",274,0},{"sub_cancel",0,0}] 
04:17:16.630 [error] Sending find_sub batch [] 
04:17:16.630 [error] Sending find_sub_aq batch [] 
04:17:16.630 [error] batched message propagation "2020-08-06T04:17:16.630" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(g@11.0.0.17)533> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_17_06_799}],
         [],[],[]}}}}]
(g@11.0.0.17)534> f(AwMapRes).
ok
(g@11.0.0.17)535> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:18.101"
(g@11.0.0.17)536> 04:17:19.267 [error] C1 propagation "2020-08-06T04:17:19.267"  
04:17:19.267 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:17:19.268 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,127}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:126 
04:17:23.475 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:17:23.475" Took=31289 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_12_820}],[]}}}}] 
04:17:23.476 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",126,126},{"delta_send",126,127},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",276,0},{"sub_cancel",0,0}] 
04:17:25.914 [error] C3 propagation "2020-08-06T04:17:25.914" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)537> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@11.0.0.17)538> f(AwMapRes).
ok
(g@11.0.0.17)539> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:26.485"
(g@11.0.0.17)540> 04:17:26.050 [error] C2 propagation "2020-08-06T04:17:26.502"  
04:17:26.269 [error] C1 propagation "2020-08-06T04:17:26.269" 
04:17:26.365 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:17:26.415 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,128}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:127 
04:17:26.632 [error] Sending find_sub batch [] 
04:17:26.632 [error] Sending find_sub_aq batch [] 
04:17:26.632 [error] batched message propagation "2020-08-06T04:17:26.632" 
04:17:33.270 [error] C1 propagation "2020-08-06T04:17:33.270" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)541> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@11.0.0.17)542> f(AwMapRes).
ok
(g@11.0.0.17)543> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:34.876"
(g@11.0.0.17)544> 04:17:36.634 [error] Sending find_sub batch [] 
04:17:36.634 [error] Sending find_sub_aq batch [] 
04:17:36.634 [error] batched message propagation "2020-08-06T04:17:36.634" 
04:17:37.479 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:17:37.479" Took=35169 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_17_24_422}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:17:37.479 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",127,127},{"delta_send",127,128},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",278,0},{"sub_cancel",0,0}] 
04:17:40.272 [error] C1 propagation "2020-08-06T04:17:40.272" 
04:17:40.272 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:17:40.272 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,129}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:128 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_17_24_422}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)545> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_17_24_422}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)546> f(AwMapRes).
ok
(g@11.0.0.17)547> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:42.129"
(g@11.0.0.17)548> 04:17:46.091 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:17:46.913" Took=27858 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_36_467}],[],[],[],[],[]}}}}] 
04:17:46.091 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",128,128},{"delta_send",128,129},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",280,0},{"sub_cancel",0,0}] 
04:17:46.636 [error] Sending find_sub batch [] 
04:17:46.636 [error] Sending find_sub_aq batch [] 
04:17:46.636 [error] batched message propagation "2020-08-06T04:17:46.636" 
04:17:47.274 [error] C1 propagation "2020-08-06T04:17:47.274" 
04:17:47.274 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:17:47.274 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,130}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:129 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_17_36_467}],
             [],[],[],...}}}}]}
(g@11.0.0.17)549> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_17_36_467}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)550> f(AwMapRes).
ok
(g@11.0.0.17)551> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:50.171"
(g@11.0.0.17)552> 04:17:51.496 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:17:51.496" Took=37437 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_42_490}]}}}}] 
04:17:51.497 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",129,129},{"delta_send",129,130},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",282,0},{"sub_cancel",0,0}] 
04:17:54.275 [error] C1 propagation "2020-08-06T04:17:54.275" 
04:17:54.314 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:17:54.314 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,131}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:130 
04:17:56.637 [error] Sending find_sub batch [] 
04:17:56.637 [error] Sending find_sub_aq batch [] 
04:17:56.638 [error] batched message propagation "2020-08-06T04:17:56.637" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)553> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)554> f(AwMapRes).
ok
(g@11.0.0.17)555> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:58.216"
(g@11.0.0.17)556> 04:17:58.497 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:17:58.497" Took=33019 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_17_48_512}],[],[],[],[],[],[],[]}}}}] 
04:17:58.497 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",130,130},{"delta_send",130,131},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",284,0},{"sub_cancel",0,0}] 
04:18:01.276 [error] C1 propagation "2020-08-06T04:18:01.276" 
04:18:01.339 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:18:01.339 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,132}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:131 
04:18:05.521 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:18:05.521" Took=39354 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_54_535}],[],[]}}}}] 
04:18:05.521 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",131,131},{"delta_send",131,132},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",286,0},{"sub_cancel",0,0}] 
04:18:06.051 [error] C2 propagation "2020-08-06T04:18:06.512" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@11.0.0.17)557> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_17_54_535}],
         [],[]}}}}]
(g@11.0.0.17)558> f(AwMapRes).
ok
(g@11.0.0.17)559> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:06.250"
(g@11.0.0.17)560> 04:18:06.639 [error] Sending find_sub batch [] 
04:18:06.639 [error] Sending find_sub_aq batch [] 
04:18:06.639 [error] batched message propagation "2020-08-06T04:18:06.639" 
04:18:08.277 [error] C1 propagation "2020-08-06T04:18:08.277" 
04:18:08.353 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:18:08.353 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,133}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:132 
04:18:12.496 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:18:12.496" Took=34778 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_18_00_554}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:12.496 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",132,132},{"delta_send",132,133},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",288,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_18_00_554}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)561> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_18_00_554}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)562> f(AwMapRes).
ok
(g@11.0.0.17)563> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:14.284"
(g@11.0.0.17)564> 04:18:15.278 [error] C1 propagation "2020-08-06T04:18:15.278"  
04:18:15.286 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:18:15.287 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,134}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:133 
04:18:16.640 [error] Sending find_sub batch [] 
04:18:16.640 [error] Sending find_sub_aq batch [] 
04:18:16.640 [error] batched message propagation "2020-08-06T04:18:16.640" 
04:18:19.487 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:18:19.486" Took=25890 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_18_06_579}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:19.490 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",133,133},{"delta_send",133,134},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",290,0},{"sub_cancel",0,0}] 
04:18:22.279 [error] C1 propagation "2020-08-06T04:18:22.279" 
04:18:22.296 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_18_06_579}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)565> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_18_06_579}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)566> f(AwMapRes).
ok
(g@11.0.0.17)567> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:22.416"
(g@11.0.0.17)568> 04:18:22.296 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,135}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:134 
04:18:26.520 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:18:26.520" Took=25607 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_18_18_626}],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:26.521 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",134,134},{"delta_send",134,135},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",292,0},{"sub_cancel",0,0}] 
04:18:26.691 [error] Sending find_sub batch [] 
04:18:26.691 [error] Sending find_sub_aq batch [] 
04:18:26.691 [error] batched message propagation "2020-08-06T04:18:26.691" 
04:18:29.280 [error] C1 propagation "2020-08-06T04:18:29.280" 
04:18:29.280 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:18:29.280 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,136}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:135 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_18_18_626}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)569> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_18_18_626}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)570> f(AwMapRes).
ok
(g@11.0.0.17)571> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:30.360"
(g@11.0.0.17)572> 04:18:33.509 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:18:33.509" Took=30072 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_18_24_647}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:33.511 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",135,135},{"delta_send",135,136},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",294,0},{"sub_cancel",0,0}] 
04:18:35.915 [error] C3 propagation "2020-08-06T04:18:35.915" 
04:18:36.282 [error] C1 propagation "2020-08-06T04:18:36.282" 
04:18:36.323 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:18:36.323 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,137}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:136 
04:18:36.692 [error] Sending find_sub batch [] 
04:18:36.692 [error] Sending find_sub_aq batch [] 
04:18:36.692 [error] batched message propagation "2020-08-06T04:18:36.692" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_18_24_647}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)573> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_18_24_647}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)574> f(AwMapRes).
ok
(g@11.0.0.17)575> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:38.399"
(g@11.0.0.17)576> 04:18:40.504 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:18:40.503" Took=35054 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_18_30_671}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:40.506 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",136,136},{"delta_send",136,137},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",296,0},{"sub_cancel",0,0}] 
04:18:43.283 [error] C1 propagation "2020-08-06T04:18:43.283" 
04:18:43.284 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:18:43.284 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,138}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:137 
04:18:46.052 [error] C2 propagation "2020-08-06T04:18:46.522" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_18_30_671}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)577> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_18_30_671}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)578> f(AwMapRes).
ok
(g@11.0.0.17)579> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:46.437"
(g@11.0.0.17)580> 04:18:46.694 [error] Sending find_sub batch [] 
04:18:46.694 [error] Sending find_sub_aq batch [] 
04:18:46.694 [error] batched message propagation "2020-08-06T04:18:46.694" 
04:18:47.528 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:18:47.528" Took=23644 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_18_36_691}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:47.528 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",137,137},{"delta_send",137,138},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",298,0},{"sub_cancel",0,0}] 
04:18:50.285 [error] C1 propagation "2020-08-06T04:18:50.285" 
04:18:50.285 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:18:50.285 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,139}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:138 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_18_36_691}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)581> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_18_36_691}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)582> f(AwMapRes).
ok
(g@11.0.0.17)583> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:54.477"
(g@11.0.0.17)584> 04:18:54.543 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:18:54.543" Took=35996 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_18_42_711}],[],[],[],[],[],[],[],[]}}}}] 
04:18:54.545 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",138,138},{"delta_send",138,139},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",300,0},{"sub_cancel",0,0}] 
04:18:56.695 [error] Sending find_sub batch [] 
04:18:56.695 [error] Sending find_sub_aq batch [] 
04:18:56.695 [error] batched message propagation "2020-08-06T04:18:56.695" 
04:18:57.287 [error] C1 propagation "2020-08-06T04:18:57.287" 
04:18:57.336 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:18:57.336 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,140}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:139 
04:19:01.549 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:19:01.549" Took=39394 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_18_48_737}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:19:01.549 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",139,139},{"delta_send",139,140},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",302,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_18_48_737}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)585> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_18_48_737}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)586> f(AwMapRes).
ok
(g@11.0.0.17)587> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:02.513"
(g@11.0.0.17)588> 04:19:04.288 [error] C1 propagation "2020-08-06T04:19:04.288"  
04:19:04.354 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:19:04.362 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,141}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:140 
04:19:06.697 [error] Sending find_sub batch [] 
04:19:06.697 [error] Sending find_sub_aq batch [] 
04:19:06.697 [error] batched message propagation "2020-08-06T04:19:06.697" 
04:19:08.533 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:19:08.533" Took=23460 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_19_00_782}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:19:08.535 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",140,140},{"delta_send",140,141},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",304,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_19_00_782}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)589> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_19_00_782}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)590> f(AwMapRes).
ok
(g@11.0.0.17)591> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:10.557"
(g@11.0.0.17)592> 04:19:11.290 [error] C1 propagation "2020-08-06T04:19:11.290"  
04:19:11.297 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:19:11.298 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,142}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:141 
04:19:15.534 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:19:15.534" Took=24460 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_06_806}],[],[],[],[],[]}}}}] 
04:19:15.535 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",141,141},{"delta_send",141,142},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",306,0},{"sub_cancel",0,0}] 
04:19:16.698 [error] Sending find_sub batch [] 
04:19:16.698 [error] Sending find_sub_aq batch [] 
04:19:16.698 [error] batched message propagation "2020-08-06T04:19:16.698" 
04:19:18.291 [error] C1 propagation "2020-08-06T04:19:18.291" 
04:19:18.351 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:19:18.351 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,143}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:142 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_19_06_806}],
             [],[],[],...}}}}]}
(g@11.0.0.17)593> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_19_06_806}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)594> f(AwMapRes).
ok
(g@11.0.0.17)595> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:18.595"
(g@11.0.0.17)596> 04:19:22.545 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:19:22.545" Took=34438 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_19_12_827}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:19:22.545 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",142,142},{"delta_send",142,143},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",308,0},{"sub_cancel",0,0}] 
04:19:25.292 [error] C1 propagation "2020-08-06T04:19:25.292" 
04:19:25.323 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:19:25.323 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,144}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:143 
04:19:26.053 [error] C2 propagation "2020-08-06T04:19:26.532" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_19_12_827}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)597> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_19_12_827}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)598> f(AwMapRes).
ok
(g@11.0.0.17)599> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:26.635"
(g@11.0.0.17)600> 04:19:26.700 [error] Sending find_sub batch [] 
04:19:26.700 [error] Sending find_sub_aq batch [] 
04:19:26.700 [error] batched message propagation "2020-08-06T04:19:26.700" 
04:19:29.551 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:19:29.550" Took=29815 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_18_848}],[],[],[],[]}}}}] 
04:19:29.552 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",143,143},{"delta_send",143,144},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",310,0},{"sub_cancel",0,0}] 
04:19:32.293 [error] C1 propagation "2020-08-06T04:19:32.293" 
04:19:32.364 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:19:32.381 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,145}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:144 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_19_18_848}],
             [],[],...}}}}]}
(g@11.0.0.17)601> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_19_18_848}],
         [],[],[],[]}}}}]
(g@11.0.0.17)602> f(AwMapRes).
ok
(g@11.0.0.17)603> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:34.672"
(g@11.0.0.17)604> 04:19:36.544 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:19:36.544" Took=25036 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_24_870}],[],[],[],[]}}}}] 
04:19:36.544 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",144,144},{"delta_send",144,145},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",312,0},{"sub_cancel",0,0}] 
04:19:36.766 [error] Sending find_sub batch [] 
04:19:36.766 [error] Sending find_sub_aq batch [] 
04:19:36.767 [error] batched message propagation "2020-08-06T04:19:36.766" 
04:19:39.295 [error] C1 propagation "2020-08-06T04:19:39.295" 
04:19:39.298 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:19:39.298 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,146}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:145 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_19_24_870}],
             [],[],...}}}}]}
(g@11.0.0.17)605> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_19_24_870}],
         [],[],[],[]}}}}]
(g@11.0.0.17)606> f(AwMapRes).
ok
(g@11.0.0.17)607> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:42.709"
(g@11.0.0.17)608> 04:19:43.576 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:19:43.576" Took=39505 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_30_891}],[],[],[],[]}}}}] 
04:19:43.577 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",145,145},{"delta_send",145,146},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",314,0},{"sub_cancel",0,0}] 
04:19:45.917 [error] C3 propagation "2020-08-06T04:19:45.917" 
04:19:46.296 [error] C1 propagation "2020-08-06T04:19:46.296" 
04:19:46.391 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:19:46.392 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,147}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:146 
04:19:46.768 [error] Sending find_sub batch [] 
04:19:46.768 [error] Sending find_sub_aq batch [] 
04:19:46.768 [error] batched message propagation "2020-08-06T04:19:46.768" 
04:19:50.553 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:19:50.552" Took=34500 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_19_42_935}],[],[],[],[],[],[],[],[]}}}}] 
04:19:50.553 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",146,146},{"delta_send",146,147},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",316,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_19_42_935}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)609> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_19_42_935}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)610> f(AwMapRes).
ok
(g@11.0.0.17)611> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:50.757"
(g@11.0.0.17)612> 04:19:53.297 [error] C1 propagation "2020-08-06T04:19:53.297"  
04:19:53.297 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:19:53.297 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,148}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:147 
04:19:56.770 [error] Sending find_sub batch [] 
04:19:56.770 [error] Sending find_sub_aq batch [] 
04:19:56.770 [error] batched message propagation "2020-08-06T04:19:56.770" 
04:19:57.548 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:19:57.548" Took=25505 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_19_48_958}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:19:57.634 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",147,147},{"delta_send",147,148},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",318,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_19_48_958}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)613> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_19_48_958}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)614> f(AwMapRes).
ok
(g@11.0.0.17)615> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:58.791"
(g@11.0.0.17)616> 04:20:00.298 [error] C1 propagation "2020-08-06T04:20:00.298"  
04:20:00.336 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:20:00.336 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,149}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:148 
04:20:04.557 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:20:04.557" Took=35080 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_19_54_980}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:20:04.558 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",148,148},{"delta_send",148,149},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",320,0},{"sub_cancel",0,0}] 
04:20:06.055 [error] C2 propagation "2020-08-06T04:20:06.552" 
04:20:06.772 [error] Sending find_sub batch [] 
04:20:06.772 [error] Sending find_sub_aq batch [] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_19_54_980}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)617> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_19_54_980}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)618> f(AwMapRes).
ok
(g@11.0.0.17)619> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:06.902"
(g@11.0.0.17)620> 04:20:06.772 [error] batched message propagation "2020-08-06T04:20:06.772" 
04:20:07.300 [error] C1 propagation "2020-08-06T04:20:07.300" 
04:20:07.301 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:20:07.301 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,150}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:149 
04:20:11.563 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:20:11.563" Took=39094 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_20_01_004}],[],[],[],[],[],[],[]}}}}] 
04:20:11.564 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",149,149},{"delta_send",149,150},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",322,0},{"sub_cancel",0,0}] 
04:20:14.301 [error] C1 propagation "2020-08-06T04:20:14.301" 
04:20:14.328 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:20:14.329 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,151}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:150 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_01_004}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)621> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_01_004}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)622> f(AwMapRes).
ok
(g@11.0.0.17)623> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:14.882"
(g@11.0.0.17)624> 04:20:16.774 [error] Sending find_sub batch [] 
04:20:16.774 [error] Sending find_sub_aq batch [] 
04:20:16.774 [error] batched message propagation "2020-08-06T04:20:16.774" 
04:20:18.546 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:20:18.546" Took=20920 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_07_023}],[],[],[],[],[],[]}}}}] 
04:20:18.546 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",150,150},{"delta_send",150,151},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",324,0},{"sub_cancel",0,0}] 
04:20:21.302 [error] C1 propagation "2020-08-06T04:20:21.302" 
04:20:21.324 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:20:21.324 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,152}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:151 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_07_023}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)625> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_07_023}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)626> f(AwMapRes).
ok
(g@11.0.0.17)627> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:22.921"
(g@11.0.0.17)628> 04:20:25.567 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:20:25.567" Took=39633 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_20_13_042}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:20:25.567 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",151,151},{"delta_send",151,152},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",326,0},{"sub_cancel",0,0}] 
04:20:26.776 [error] Sending find_sub batch [] 
04:20:26.776 [error] Sending find_sub_aq batch [] 
04:20:26.776 [error] batched message propagation "2020-08-06T04:20:26.776" 
04:20:28.304 [error] C1 propagation "2020-08-06T04:20:28.304" 
04:20:28.373 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:20:28.373 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,153}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:152 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_20_13_042}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)629> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_20_13_042}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)630> f(AwMapRes).
ok
(g@11.0.0.17)631> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:30.962"
(g@11.0.0.17)632> 04:20:32.555 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:20:32.554" Took=24150 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_20_25_093}],[],[],[],[],[],[],[]}}}}] 
04:20:32.555 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",152,152},{"delta_send",152,153},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",328,0},{"sub_cancel",0,0}] 
04:20:35.305 [error] C1 propagation "2020-08-06T04:20:35.305" 
04:20:35.335 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:20:35.336 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,154}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:153 
04:20:36.778 [error] Sending find_sub batch [] 
04:20:36.778 [error] Sending find_sub_aq batch [] 
04:20:36.778 [error] batched message propagation "2020-08-06T04:20:36.778" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_25_093}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)633> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_25_093}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)634> f(AwMapRes).
ok
(g@11.0.0.17)635> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:38.996"
(g@11.0.0.17)636> 04:20:39.571 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:20:39.571" Took=37965 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_31_127}],[],[]}}}}] 
04:20:39.571 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",153,153},{"delta_send",153,154},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",330,0},{"sub_cancel",0,0}] 
04:20:42.306 [error] C1 propagation "2020-08-06T04:20:42.306" 
04:20:42.327 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:20:42.327 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,155}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:154 
04:20:46.057 [error] C2 propagation "2020-08-06T04:20:46.572" 
04:20:46.615 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:20:46.614" Took=32484 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_20_37_147}],[],[],[],[],[],[],[],[]}}}}] 
04:20:46.673 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",154,154},{"delta_send",154,155},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",332,0},{"sub_cancel",0,0}] 
04:20:46.780 [error] Sending find_sub batch [] 
04:20:46.780 [error] Sending find_sub_aq batch [] 
04:20:46.780 [error] batched message propagation "2020-08-06T04:20:46.780" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_20_37_147}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)637> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_20_37_147}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)638> f(AwMapRes).
ok
(g@11.0.0.17)639> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:47.354"
(g@11.0.0.17)640> 04:20:49.307 [error] C1 propagation "2020-08-06T04:20:49.307"  
04:20:49.359 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:20:49.359 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,156}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:155 
04:20:53.562 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:20:53.562" Took=28116 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_43_168}],[]}}}}] 
04:20:53.565 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",155,155},{"delta_send",155,156},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",334,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)641> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@11.0.0.17)642> f(AwMapRes).
ok
(g@11.0.0.17)643> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:55.751"
(g@11.0.0.17)644> 04:20:55.918 [error] C3 propagation "2020-08-06T04:20:55.918"  
04:20:56.308 [error] C1 propagation "2020-08-06T04:20:56.308" 
04:20:56.308 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:20:56.308 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,157}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:156 
04:20:56.782 [error] Sending find_sub batch [] 
04:20:56.782 [error] Sending find_sub_aq batch [] 
04:20:56.782 [error] batched message propagation "2020-08-06T04:20:56.782" 
04:21:00.558 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:21:00.558" Took=22867 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_49_189}],[],[],[],[],[]}}}}] 
04:21:00.559 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",156,156},{"delta_send",156,157},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",336,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_49_189}],
             [],[],[],...}}}}]}
(g@11.0.0.17)645> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_49_189}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)646> f(AwMapRes).
ok
(g@11.0.0.17)647> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:03.114"
(g@11.0.0.17)648> 04:21:03.309 [error] C1 propagation "2020-08-06T04:21:03.309"  
04:21:03.310 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:21:03.310 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,158}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:157 
04:21:06.784 [error] Sending find_sub batch [] 
04:21:06.784 [error] Sending find_sub_aq batch [] 
04:21:06.784 [error] batched message propagation "2020-08-06T04:21:06.784" 
04:21:07.569 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:21:07.569" Took=31989 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_20_55_212}],[],[],[],[],[],[],[]}}}}] 
04:21:07.569 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",157,157},{"delta_send",157,158},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",338,0},{"sub_cancel",0,0}] 
04:21:10.310 [error] C1 propagation "2020-08-06T04:21:10.310" 
04:21:10.311 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:21:10.311 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,159}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:158 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_55_212}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)649> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_55_212}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)650> f(AwMapRes).
ok
(g@11.0.0.17)651> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:11.153"
(g@11.0.0.17)652> 04:21:14.575 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:21:14.575" Took=34240 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_07_253}],[]}}}}] 
04:21:14.576 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",158,158},{"delta_send",158,159},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",340,0},{"sub_cancel",0,0}] 
04:21:16.786 [error] Sending find_sub batch [] 
04:21:16.786 [error] Sending find_sub_aq batch [] 
04:21:16.786 [error] batched message propagation "2020-08-06T04:21:16.786" 
04:21:17.312 [error] C1 propagation "2020-08-06T04:21:17.312" 
04:21:17.402 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:21:17.402 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,160}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:159 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)653> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@11.0.0.17)654> f(AwMapRes).
ok
(g@11.0.0.17)655> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:19.193"
(g@11.0.0.17)656> 04:21:21.568 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:21:21.568" Took=26468 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_13_271}]}}}}] 
04:21:21.570 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",159,159},{"delta_send",159,160},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",342,0},{"sub_cancel",0,0}] 
04:21:24.313 [error] C1 propagation "2020-08-06T04:21:24.313" 
04:21:24.320 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:21:24.354 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,161}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:160 
04:21:26.058 [error] C2 propagation "2020-08-06T04:21:26.584" 
04:21:26.788 [error] Sending find_sub batch [] 
04:21:26.788 [error] Sending find_sub_aq batch [] 
04:21:26.788 [error] batched message propagation "2020-08-06T04:21:26.788" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)657> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)658> f(AwMapRes).
ok
(g@11.0.0.17)659> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:27.228"
(g@11.0.0.17)660> 04:21:28.575 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:21:28.575" Took=31794 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_21_19_295}],[],[],[],[],[],[],[]}}}}] 
04:21:28.575 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",160,160},{"delta_send",160,161},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",344,0},{"sub_cancel",0,0}] 
04:21:31.314 [error] C1 propagation "2020-08-06T04:21:31.314" 
04:21:31.314 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:21:31.314 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,162}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:161 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_21_19_295}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)661> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_19_295}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)662> f(AwMapRes).
ok
(g@11.0.0.17)663> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:35.268"
(g@11.0.0.17)664> 04:21:35.580 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:21:35.580" Took=34311 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_25_319}],[],[]}}}}] 
04:21:35.582 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",161,161},{"delta_send",161,162},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",346,0},{"sub_cancel",0,0}] 
04:21:36.789 [error] Sending find_sub batch [] 
04:21:36.789 [error] Sending find_sub_aq batch [] 
04:21:36.789 [error] batched message propagation "2020-08-06T04:21:36.789" 
04:21:38.315 [error] C1 propagation "2020-08-06T04:21:38.315" 
04:21:38.316 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:21:38.316 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,163}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:162 
04:21:42.581 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:21:42.581" Took=33936 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_31_340}],[],[],[],[],[],[]}}}}] 
04:21:42.582 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",162,162},{"delta_send",162,163},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",348,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_21_31_340}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)665> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_31_340}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)666> f(AwMapRes).
ok
(g@11.0.0.17)667> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:43.307"
(g@11.0.0.17)668> 04:21:45.316 [error] C1 propagation "2020-08-06T04:21:45.316"  
04:21:45.316 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:21:45.316 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,164}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:163 
04:21:46.791 [error] Sending find_sub batch [] 
04:21:46.791 [error] Sending find_sub_aq batch [] 
04:21:46.791 [error] batched message propagation "2020-08-06T04:21:46.791" 
04:21:49.583 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:21:49.582" Took=37418 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_37_359}],[],[],[],[],[],[]}}}}] 
04:21:49.583 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",163,163},{"delta_send",163,164},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",350,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_21_37_359}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)669> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_37_359}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)670> f(AwMapRes).
ok
(g@11.0.0.17)671> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:51.345"
(g@11.0.0.17)672> 04:21:52.317 [error] C1 propagation "2020-08-06T04:21:52.317"  
04:21:52.317 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:21:52.317 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,165}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:164 
04:21:56.578 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:21:56.578" Took=28907 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_21_49_399}],[],[],[],[],[],[],[],[],[]}}}}] 
04:21:56.578 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",164,164},{"delta_send",164,165},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",352,0},{"sub_cancel",0,0}] 
04:21:56.793 [error] Sending find_sub batch [] 
04:21:56.793 [error] Sending find_sub_aq batch [] 
04:21:56.793 [error] batched message propagation "2020-08-06T04:21:56.793" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_21_49_399}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)673> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_21_49_399}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)674> 04:21:59.318 [error] C1 propagation "2020-08-06T04:21:59.318"  
04:21:59.318 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
f(AwMapRes).
04:21:59.318 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,166}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:165 
ok
(g@11.0.0.17)675> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:59.557"
(g@11.0.0.17)676> 04:22:03.591 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:22:03.591" Took=39758 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_21_55_419}],[],[],[],[],[],[],[]}}}}] 
04:22:03.591 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",165,165},{"delta_send",165,166},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",354,0},{"sub_cancel",0,0}] 
04:22:05.919 [error] C3 propagation "2020-08-06T04:22:05.919" 
04:22:06.059 [error] C2 propagation "2020-08-06T04:22:06.591" 
04:22:06.319 [error] C1 propagation "2020-08-06T04:22:06.319" 
04:22:06.396 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:22:06.397 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,167}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:166 
04:22:06.794 [error] Sending find_sub batch [] 
04:22:06.794 [error] Sending find_sub_aq batch [] 
04:22:06.794 [error] batched message propagation "2020-08-06T04:22:06.794" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_21_55_419}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)677> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_55_419}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)678> f(AwMapRes).
ok
(g@11.0.0.17)679> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:07.429"
(g@11.0.0.17)680> 04:22:10.590 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:22:10.589" Took=41536 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_22_01_442}],[],[],[]}}}}] 
04:22:10.590 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",166,166},{"delta_send",166,167},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",356,0},{"sub_cancel",0,0}] 
04:22:13.320 [error] C1 propagation "2020-08-06T04:22:13.320" 
04:22:13.320 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:22:13.320 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,168}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:167 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(g@11.0.0.17)681> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_22_01_442}],
         [],[],[]}}}}]
(g@11.0.0.17)682> f(AwMapRes).
ok
(g@11.0.0.17)683> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:15.469"
(g@11.0.0.17)684> 04:22:16.796 [error] Sending find_sub batch [] 
04:22:16.796 [error] Sending find_sub_aq batch [] 
04:22:16.796 [error] batched message propagation "2020-08-06T04:22:16.796" 
04:22:17.582 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:22:17.581" Took=26943 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_22_07_458}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:17.582 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",167,167},{"delta_send",167,168},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",358,0},{"sub_cancel",0,0}] 
04:22:20.321 [error] C1 propagation "2020-08-06T04:22:20.321" 
04:22:20.321 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:22:20.321 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,169}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:168 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_22_07_458}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)685> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_22_07_458}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)686> f(AwMapRes).
ok
(g@11.0.0.17)687> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:23.505"
(g@11.0.0.17)688> 04:22:24.605 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:22:24.605" Took=33630 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_22_13_479}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:24.605 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",168,168},{"delta_send",168,169},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",360,0},{"sub_cancel",0,0}] 
04:22:26.797 [error] Sending find_sub batch [] 
04:22:26.797 [error] Sending find_sub_aq batch [] 
04:22:26.797 [error] batched message propagation "2020-08-06T04:22:26.797" 
04:22:27.323 [error] C1 propagation "2020-08-06T04:22:27.323" 
04:22:27.323 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:22:27.323 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,170}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:169 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_22_13_479}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)689> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_22_13_479}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)690> f(AwMapRes).
ok
(g@11.0.0.17)691> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:31.540"
(g@11.0.0.17)692> 04:22:31.582 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:22:31.582" Took=28035 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_22_19_499}],[],[],[],[],[]}}}}] 
04:22:31.583 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",169,169},{"delta_send",169,170},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",362,0},{"sub_cancel",0,0}] 
04:22:34.324 [error] C1 propagation "2020-08-06T04:22:34.324" 
04:22:34.325 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:22:34.325 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,171}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:170 
04:22:36.798 [error] Sending find_sub batch [] 
04:22:36.798 [error] Sending find_sub_aq batch [] 
04:22:36.798 [error] batched message propagation "2020-08-06T04:22:36.798" 
04:22:38.593 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:22:38.593" Took=37828 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_22_31_098}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:38.594 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",170,170},{"delta_send",170,171},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",364,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_22_31_098}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)693> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_22_31_098}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)694> f(AwMapRes).
ok
(g@11.0.0.17)695> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:39.578"
(g@11.0.0.17)696> 04:22:41.326 [error] C1 propagation "2020-08-06T04:22:41.326"  
04:22:41.326 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:22:41.326 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,172}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:171 
04:22:45.587 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:22:45.586" Took=27365 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_22_37_115}],[]}}}}] 
04:22:45.587 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",171,171},{"delta_send",171,172},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",366,0},{"sub_cancel",0,0}] 
04:22:46.061 [error] C2 propagation "2020-08-06T04:22:46.615" 
04:22:46.802 [error] Sending find_sub batch [] 
04:22:46.803 [error] Sending find_sub_aq batch [] 
04:22:46.803 [error] batched message propagation "2020-08-06T04:22:46.803" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)697> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@11.0.0.17)698> f(AwMapRes).
ok
(g@11.0.0.17)699> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:47.618"
(g@11.0.0.17)700> 04:22:48.327 [error] C1 propagation "2020-08-06T04:22:48.327"  
04:22:48.327 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:22:48.327 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,173}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:172 
04:22:52.591 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:22:52.591" Took=29978 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_22_43_136}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:52.591 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",172,172},{"delta_send",172,173},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",368,0},{"sub_cancel",0,0}] 
04:22:55.329 [error] C1 propagation "2020-08-06T04:22:55.329" 
04:22:55.329 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:22:55.329 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,174}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:173 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_22_43_136}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)701> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_22_43_136}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)702> f(AwMapRes).
ok
(g@11.0.0.17)703> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:55.659"
(g@11.0.0.17)704> 04:22:56.804 [error] Sending find_sub batch [] 
04:22:56.804 [error] Sending find_sub_aq batch [] 
04:22:56.804 [error] batched message propagation "2020-08-06T04:22:56.804" 
04:22:59.653 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:22:59.653" Took=29613 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_22_49_159}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:59.654 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",173,173},{"delta_send",173,174},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",370,0},{"sub_cancel",0,0}] 
04:23:02.331 [error] C1 propagation "2020-08-06T04:23:02.331" 
04:23:02.331 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:23:02.331 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,175}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:174 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_22_49_159}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)705> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_22_49_159}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)706> f(AwMapRes).
ok
(g@11.0.0.17)707> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:03.696"
(g@11.0.0.17)708> 04:23:06.588 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:23:06.588" Took=26755 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_22_55_179}],[],[],[],[],[],[],[],[]}}}}] 
04:23:06.589 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",174,174},{"delta_send",174,175},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",372,0},{"sub_cancel",0,0}] 
04:23:06.806 [error] Sending find_sub batch [] 
04:23:06.806 [error] Sending find_sub_aq batch [] 
04:23:06.806 [error] batched message propagation "2020-08-06T04:23:06.806" 
04:23:09.332 [error] C1 propagation "2020-08-06T04:23:09.332" 
04:23:09.332 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:23:09.332 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,176}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:175 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_22_55_179}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)709> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_22_55_179}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)710> f(AwMapRes).
ok
(g@11.0.0.17)711> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:11.727"
(g@11.0.0.17)712> 04:23:13.585 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:23:13.585" Took=21413 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_23_01_208}],[],[],[],[],[],[],[]}}}}] 
04:23:13.586 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",175,175},{"delta_send",175,176},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",374,0},{"sub_cancel",0,0}] 
04:23:15.920 [error] C3 propagation "2020-08-06T04:23:15.920" 
04:23:16.333 [error] C1 propagation "2020-08-06T04:23:16.333" 
04:23:16.415 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:23:16.415 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,177}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:176 
04:23:16.807 [error] Sending find_sub batch [] 
04:23:16.807 [error] Sending find_sub_aq batch [] 
04:23:16.807 [error] batched message propagation "2020-08-06T04:23:16.807" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_23_01_208}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)713> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_01_208}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)714> f(AwMapRes).
ok
(g@11.0.0.17)715> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:19.765"
(g@11.0.0.17)716> 04:23:20.607 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:23:20.607" Took=39418 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_23_13_250}],[],[],[],[],[]}}}}] 
04:23:20.607 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",176,176},{"delta_send",176,177},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",376,0},{"sub_cancel",0,0}] 
04:23:23.335 [error] C1 propagation "2020-08-06T04:23:23.335" 
04:23:23.369 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:23:23.427 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,178}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:177 
04:23:26.063 [error] C2 propagation "2020-08-06T04:23:26.632" 
04:23:26.808 [error] Sending find_sub batch [] 
04:23:26.808 [error] Sending find_sub_aq batch [] 
04:23:26.808 [error] batched message propagation "2020-08-06T04:23:26.808" 
04:23:27.602 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:23:27.602" Took=34541 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_23_19_275}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_23_19_275}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)717> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_23_19_275}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)718> f(AwMapRes).
ok
(g@11.0.0.17)719> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:27.802"
(g@11.0.0.17)720> 04:23:27.603 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",177,177},{"delta_send",177,178},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",378,0},{"sub_cancel",0,0}] 
04:23:30.336 [error] C1 propagation "2020-08-06T04:23:30.336" 
04:23:30.336 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:23:30.336 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,179}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:178 
04:23:34.603 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:23:34.603" Took=30883 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_23_25_295}],[],[]}}}}] 
04:23:34.603 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",178,178},{"delta_send",178,179},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",380,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@11.0.0.17)721> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_25_295}],
         [],[]}}}}]
(g@11.0.0.17)722> f(AwMapRes).
ok
(g@11.0.0.17)723> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:35.845"
(g@11.0.0.17)724> 04:23:36.809 [error] Sending find_sub batch [] 
04:23:36.809 [error] Sending find_sub_aq batch [] 
04:23:36.809 [error] batched message propagation "2020-08-06T04:23:36.809" 
04:23:37.338 [error] C1 propagation "2020-08-06T04:23:37.338" 
04:23:37.379 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:23:37.379 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,180}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:179 
04:23:41.607 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:23:41.607" Took=34225 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_23_31_312}],[],[],[],[],[],[],[]}}}}] 
04:23:41.608 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",179,179},{"delta_send",179,180},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",382,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_23_31_312}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)725> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_31_312}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)726> f(AwMapRes).
ok
(g@11.0.0.17)727> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:43.886"
(g@11.0.0.17)728> 04:23:44.340 [error] C1 propagation "2020-08-06T04:23:44.340"  
04:23:44.344 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:23:44.344 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,181}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:180 
04:23:46.811 [error] Sending find_sub batch [] 
04:23:46.811 [error] Sending find_sub_aq batch [] 
04:23:46.811 [error] batched message propagation "2020-08-06T04:23:46.811" 
04:23:48.598 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:23:48.598" Took=26203 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_23_37_335}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:23:48.599 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",180,180},{"delta_send",180,181},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",384,0},{"sub_cancel",0,0}] 
04:23:51.342 [error] C1 propagation "2020-08-06T04:23:51.342" 
04:23:51.342 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:23:51.342 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,182}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:181 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_23_37_335}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)729> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_23_37_335}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)730> f(AwMapRes).
ok
(g@11.0.0.17)731> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:51.925"
(g@11.0.0.17)732> 04:23:55.621 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:23:55.621" Took=48097 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_23_43_354}],[],[],[],[],[],[]}}}}] 
04:23:55.621 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",181,181},{"delta_send",181,182},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",386,0},{"sub_cancel",0,0}] 
04:23:56.812 [error] Sending find_sub batch [] 
04:23:56.812 [error] Sending find_sub_aq batch [] 
04:23:56.812 [error] batched message propagation "2020-08-06T04:23:56.812" 
04:23:58.344 [error] C1 propagation "2020-08-06T04:23:58.344" 
04:23:58.345 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:23:58.345 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,183}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:182 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_23_43_354}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)733> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_43_354}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)734> f(AwMapRes).
ok
(g@11.0.0.17)735> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:59.964"
(g@11.0.0.17)736> 04:24:02.614 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:24:02.614" Took=38287 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_23_55_395}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:02.614 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",182,182},{"delta_send",182,183},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",388,0},{"sub_cancel",0,0}] 
04:24:05.345 [error] C1 propagation "2020-08-06T04:24:05.345" 
04:24:05.345 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:24:05.345 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,184}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:183 
04:24:06.065 [error] C2 propagation "2020-08-06T04:24:06.652" 
04:24:06.814 [error] Sending find_sub batch [] 
04:24:06.814 [error] Sending find_sub_aq batch [] 
04:24:06.814 [error] batched message propagation "2020-08-06T04:24:06.814" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_23_55_395}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)737> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_23_55_395}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)738> f(AwMapRes).
ok
(g@11.0.0.17)739> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:08.166"
(g@11.0.0.17)740> 04:24:09.601 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:24:09.600" Took=26575 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_24_01_415}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:09.602 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",183,183},{"delta_send",183,184},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",390,0},{"sub_cancel",0,0}] 
04:24:12.346 [error] C1 propagation "2020-08-06T04:24:12.346" 
04:24:12.346 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:24:12.346 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,185}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:184 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_24_01_415}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)741> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_24_01_415}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)742> f(AwMapRes).
ok
(g@11.0.0.17)743> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:16.452"
(g@11.0.0.17)744> 04:24:16.607 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:24:16.606" Took=27649 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_24_07_434}],[],[],[],[]}}}}] 
04:24:16.608 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",184,184},{"delta_send",184,185},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",392,0},{"sub_cancel",0,0}] 
04:24:16.816 [error] Sending find_sub batch [] 
04:24:16.816 [error] Sending find_sub_aq batch [] 
04:24:16.816 [error] batched message propagation "2020-08-06T04:24:16.816" 
04:24:19.348 [error] C1 propagation "2020-08-06T04:24:19.348" 
04:24:19.348 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:24:19.348 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,186}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:185 
04:24:23.609 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:24:23.609" Took=28040 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_24_13_457}],[],[],[],[],[],[],[],[]}}}}] 
04:24:23.610 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",185,185},{"delta_send",185,186},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",394,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_24_13_457}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)745> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_24_13_457}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)746> f(AwMapRes).
ok
(g@11.0.0.17)747> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:24.820"
(g@11.0.0.17)748> 04:24:25.922 [error] C3 propagation "2020-08-06T04:24:25.922"  
04:24:26.350 [error] C1 propagation "2020-08-06T04:24:26.350" 
04:24:26.380 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:24:26.380 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,187}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:186 
04:24:26.818 [error] Sending find_sub batch [] 
04:24:26.818 [error] Sending find_sub_aq batch [] 
04:24:26.818 [error] batched message propagation "2020-08-06T04:24:26.818" 
04:24:30.437 [warning] global: 'g@11.0.0.17' failed to connect to 'a@12.0.0.11'
04:24:30.440 [warning] global: 'g@11.0.0.17' failed to connect to 'a@15.0.0.11'
04:24:30.440 [warning] global: 'g@11.0.0.17' failed to connect to 'a@14.0.0.11'
04:24:30.440 [warning] global: 'g@11.0.0.17' failed to connect to 'a@13.0.0.11'
04:24:30.441 [warning] global: 'g@11.0.0.17' failed to connect to 'a@16.0.0.11'
04:24:30.441 [warning] global: 'g@11.0.0.17' failed to connect to 'a@17.0.0.11'
04:24:30.442 [warning] global: 'g@11.0.0.17' failed to connect to 'a@18.0.0.11'
04:24:30.443 [warning] global: 'g@11.0.0.17' failed to connect to 'a@10.0.0.11'
04:24:30.443 [warning] global: 'g@11.0.0.17' failed to connect to 'a@19.0.0.11'
04:24:30.604 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:24:30.604" Took=23892 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_24_19_479}],[],[]}}}}] 
04:24:30.605 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",186,186},{"delta_send",186,187},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",396,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@11.0.0.17)749> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_24_19_479}],
         [],[]}}}}]
(g@11.0.0.17)750> f(AwMapRes).
ok
(g@11.0.0.17)751> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:32.120"
(g@11.0.0.17)752> 04:24:33.351 [error] C1 propagation "2020-08-06T04:24:33.351"  
04:24:33.351 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:24:33.351 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,188}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:187 
04:24:36.820 [error] Sending find_sub batch [] 
04:24:36.820 [error] Sending find_sub_aq batch [] 
04:24:36.820 [error] batched message propagation "2020-08-06T04:24:36.820" 
04:24:37.612 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:24:37.612" Took=32791 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_24_25_499}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:37.689 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",187,187},{"delta_send",187,188},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",398,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_24_25_499}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)753> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_24_25_499}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)754> f(AwMapRes).
ok
(g@11.0.0.17)755> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:40.168"
(g@11.0.0.17)756> 04:24:40.352 [error] C1 propagation "2020-08-06T04:24:40.352"  
04:24:40.352 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:24:40.352 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,189}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:188 
04:24:44.631 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:24:44.631" Took=38785 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_24_37_543}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:44.632 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",188,188},{"delta_send",188,189},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",400,0},{"sub_cancel",0,0}] 
04:24:46.066 [error] C2 propagation "2020-08-06T04:24:46.662" 
04:24:46.822 [error] Sending find_sub batch [] 
04:24:46.822 [error] Sending find_sub_aq batch [] 
04:24:46.822 [error] batched message propagation "2020-08-06T04:24:46.822" 
04:24:47.354 [error] C1 propagation "2020-08-06T04:24:47.354" 
04:24:47.354 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:24:47.354 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,190}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:189 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_24_37_543}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)757> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_24_37_543}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)758> f(AwMapRes).
ok
(g@11.0.0.17)759> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:48.208"
(g@11.0.0.17)760> 04:24:51.632 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:24:51.632" Took=40022 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_24_43_563}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:51.632 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",189,189},{"delta_send",189,190},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",402,0},{"sub_cancel",0,0}] 
04:24:54.355 [error] C1 propagation "2020-08-06T04:24:54.355" 
04:24:54.355 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:24:54.355 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,191}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:190 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_24_43_563}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)761> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_24_43_563}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)762> f(AwMapRes).
ok
(g@11.0.0.17)763> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:56.244"
(g@11.0.0.17)764> 04:24:56.824 [error] Sending find_sub batch [] 
04:24:56.824 [error] Sending find_sub_aq batch [] 
04:24:56.824 [error] batched message propagation "2020-08-06T04:24:56.824" 
04:24:58.630 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:24:58.629" Took=40204 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_24_49_586}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:58.630 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",190,190},{"delta_send",190,191},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",404,0},{"sub_cancel",0,0}] 
04:25:01.357 [error] C1 propagation "2020-08-06T04:25:01.357" 
04:25:01.357 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:25:01.358 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,192}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:191 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_24_49_586}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)765> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_24_49_586}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)766> f(AwMapRes).
ok
(g@11.0.0.17)767> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:04.281"
(g@11.0.0.17)768> 04:25:05.686 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:25:05.686" Took=25915 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_24_55_609}],[],[],[],[],[],[],[]}}}}] 
04:25:05.686 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",191,191},{"delta_send",191,192},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",406,0},{"sub_cancel",0,0}] 
04:25:06.826 [error] Sending find_sub batch [] 
04:25:06.826 [error] Sending find_sub_aq batch [] 
04:25:06.826 [error] batched message propagation "2020-08-06T04:25:06.826" 
04:25:08.358 [error] C1 propagation "2020-08-06T04:25:08.358" 
04:25:08.378 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:25:08.378 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,193}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:192 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_24_55_609}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)769> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_24_55_609}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)770> f(AwMapRes).
ok
(g@11.0.0.17)771> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:12.321"
(g@11.0.0.17)772> 04:25:12.738 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:25:12.738" Took=33454 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_01_627}],[],[],[],[],[]}}}}] 
04:25:12.738 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",192,192},{"delta_send",192,193},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",408,0},{"sub_cancel",0,0}] 
04:25:15.359 [error] C1 propagation "2020-08-06T04:25:15.359" 
04:25:15.433 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:25:15.433 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,194}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:193 
04:25:16.827 [error] Sending find_sub batch [] 
04:25:16.827 [error] Sending find_sub_aq batch [] 
04:25:16.827 [error] batched message propagation "2020-08-06T04:25:16.827" 
04:25:19.638 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:25:19.637" Took=43786 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_07_644}],[],[],[],[],[],[]}}}}] 
04:25:19.638 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",193,193},{"delta_send",193,194},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",410,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_25_07_644}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)773> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_25_07_644}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)774> f(AwMapRes).
ok
(g@11.0.0.17)775> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:20.361"
(g@11.0.0.17)776> 04:25:22.360 [error] C1 propagation "2020-08-06T04:25:22.360"  
04:25:22.360 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:25:22.360 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,195}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:194 
04:25:26.067 [error] C2 propagation "2020-08-06T04:25:26.672" 
04:25:26.626 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:25:26.626" Took=36016 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_13_667}],[],[],[],[]}}}}] 
04:25:26.664 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",194,194},{"delta_send",194,195},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",412,0},{"sub_cancel",0,0}] 
04:25:26.829 [error] Sending find_sub batch [] 
04:25:26.829 [error] Sending find_sub_aq batch [] 
04:25:26.829 [error] batched message propagation "2020-08-06T04:25:26.829" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_25_13_667}],
             [],[],...}}}}]}
(g@11.0.0.17)777> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_25_13_667}],
         [],[],[],[]}}}}]
(g@11.0.0.17)778> f(AwMapRes).
ok
(g@11.0.0.17)779> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:28.396"
(g@11.0.0.17)780> 04:25:29.362 [error] C1 propagation "2020-08-06T04:25:29.362"  
04:25:29.379 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:25:29.427 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,196}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:195 
04:25:33.637 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:25:33.637" Took=43390 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_25_25_705}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:25:33.637 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",195,195},{"delta_send",195,196},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",414,0},{"sub_cancel",0,0}] 
04:25:35.924 [error] C3 propagation "2020-08-06T04:25:35.924" 
04:25:36.363 [error] C1 propagation "2020-08-06T04:25:36.363" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
04:25:36.363 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_25_25_705}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)781> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_25_25_705}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)782> f(AwMapRes).
ok
(g@11.0.0.17)783> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:36.514"
(g@11.0.0.17)784> 04:25:36.363 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,197}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:196 
04:25:36.830 [error] Sending find_sub batch [] 
04:25:36.830 [error] Sending find_sub_aq batch [] 
04:25:36.830 [error] batched message propagation "2020-08-06T04:25:36.830" 
04:25:40.633 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:25:40.633" Took=40955 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_25_31_727}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:25:40.634 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",196,196},{"delta_send",196,197},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",416,0},{"sub_cancel",0,0}] 
04:25:43.365 [error] C1 propagation "2020-08-06T04:25:43.365" 
04:25:43.366 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:25:43.366 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,198}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:197 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_25_31_727}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)785> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_25_31_727}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)786> f(AwMapRes).
ok
(g@11.0.0.17)787> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:44.479"
(g@11.0.0.17)788> 04:25:46.831 [error] Sending find_sub batch [] 
04:25:46.831 [error] Sending find_sub_aq batch [] 
04:25:46.832 [error] batched message propagation "2020-08-06T04:25:46.832" 
04:25:47.629 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:25:47.629" Took=28700 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_25_37_747}],[],[],[],[],[],[],[],[]}}}}] 
04:25:47.629 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",197,197},{"delta_send",197,198},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",418,0},{"sub_cancel",0,0}] 
04:25:50.366 [error] C1 propagation "2020-08-06T04:25:50.366" 
04:25:50.366 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:25:50.367 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,199}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:198 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_25_37_747}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)789> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_25_37_747}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)790> f(AwMapRes).
ok
(g@11.0.0.17)791> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:52.514"
(g@11.0.0.17)792> 04:25:54.634 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:25:54.634" Took=37451 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_43_767}],[],[],[],[],[],[]}}}}] 
04:25:54.634 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",198,198},{"delta_send",198,199},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",420,0},{"sub_cancel",0,0}] 
04:25:56.833 [error] Sending find_sub batch [] 
04:25:56.833 [error] Sending find_sub_aq batch [] 
04:25:56.833 [error] batched message propagation "2020-08-06T04:25:56.833" 
04:25:57.368 [error] C1 propagation "2020-08-06T04:25:57.368" 
04:25:57.368 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:25:57.368 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,200}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:199 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_25_43_767}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)793> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_25_43_767}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)794> f(AwMapRes).
ok
(g@11.0.0.17)795> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:00.553"
(g@11.0.0.17)796> 04:26:01.630 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:26:01.630" Took=30940 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_49_787}]}}}}] 
04:26:01.630 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",199,199},{"delta_send",199,200},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",422,0},{"sub_cancel",0,0}] 
04:26:04.370 [error] C1 propagation "2020-08-06T04:26:04.370" 
04:26:04.371 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:26:04.371 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,201}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:200 
04:26:06.068 [error] C2 propagation "2020-08-06T04:26:06.682" 
04:26:06.835 [error] Sending find_sub batch [] 
04:26:06.835 [error] Sending find_sub_aq batch [] 
04:26:06.835 [error] batched message propagation "2020-08-06T04:26:06.835" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)797> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)798> f(AwMapRes).
ok
(g@11.0.0.17)799> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:08.590"
(g@11.0.0.17)800> 04:26:08.638 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:26:08.638" Took=33050 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_55_807}],[],[],[],[],[]}}}}] 
04:26:08.639 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",200,200},{"delta_send",200,201},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",424,0},{"sub_cancel",0,0}] 
04:26:11.371 [error] C1 propagation "2020-08-06T04:26:11.371" 
04:26:11.418 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:26:11.418 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,202}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:201 
04:26:15.636 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:26:15.636" Took=33798 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_26_07_854}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:26:15.636 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",201,201},{"delta_send",201,202},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",426,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_26_07_854}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)801> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_26_07_854}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)802> f(AwMapRes).
ok
(g@11.0.0.17)803> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:16.637"
(g@11.0.0.17)804> 04:26:16.836 [error] Sending find_sub batch [] 
04:26:16.836 [error] Sending find_sub_aq batch [] 
04:26:16.836 [error] batched message propagation "2020-08-06T04:26:16.836" 
04:26:18.373 [error] C1 propagation "2020-08-06T04:26:18.373" 
04:26:18.373 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:26:18.373 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,203}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:202 
04:26:22.638 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:26:22.637" Took=32223 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_26_13_875}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:26:22.638 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",202,202},{"delta_send",202,203},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",428,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_26_13_875}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)805> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_26_13_875}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)806> f(AwMapRes).
ok
(g@11.0.0.17)807> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:24.740"
(g@11.0.0.17)808> 04:26:25.374 [error] C1 propagation "2020-08-06T04:26:25.374"  
04:26:25.374 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:26:25.375 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,204}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:203 
04:26:26.837 [error] Sending find_sub batch [] 
04:26:26.837 [error] Sending find_sub_aq batch [] 
04:26:26.837 [error] batched message propagation "2020-08-06T04:26:26.837" 
04:26:29.642 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:26:29.642" Took=33592 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_26_19_895}],[],[],[],[],[],[],[]}}}}] 
04:26:29.643 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",203,203},{"delta_send",203,204},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",430,0},{"sub_cancel",0,0}] 
04:26:32.375 [error] C1 propagation "2020-08-06T04:26:32.375" 
04:26:32.375 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:26:32.375 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,205}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:204 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_26_19_895}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)809> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_26_19_895}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)810> f(AwMapRes).
ok
(g@11.0.0.17)811> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:32.718"
(g@11.0.0.17)812> 04:26:36.641 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:26:36.641" Took=37645 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_26_25_914}],[],[],[],[],[]}}}}] 
04:26:36.641 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",204,204},{"delta_send",204,205},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",432,0},{"sub_cancel",0,0}] 
04:26:36.838 [error] Sending find_sub batch [] 
04:26:36.838 [error] Sending find_sub_aq batch [] 
04:26:36.838 [error] batched message propagation "2020-08-06T04:26:36.838" 
04:26:39.376 [error] C1 propagation "2020-08-06T04:26:39.376" 
04:26:39.376 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:26:39.376 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,206}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:205 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_26_25_914}],
             [],[],[],...}}}}]}
(g@11.0.0.17)813> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_26_25_914}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)814> f(AwMapRes).
ok
(g@11.0.0.17)815> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:40.754"
(g@11.0.0.17)816> 04:26:43.650 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:26:43.649" Took=40736 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_26_31_935}],[],[]}}}}] 
04:26:43.650 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",205,205},{"delta_send",205,206},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",434,0},{"sub_cancel",0,0}] 
04:26:45.925 [error] C3 propagation "2020-08-06T04:26:45.925" 
04:26:46.069 [error] C2 propagation "2020-08-06T04:26:46.693" 
04:26:46.377 [error] C1 propagation "2020-08-06T04:26:46.377" 
04:26:46.450 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:26:46.450 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,207}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:206 
04:26:46.840 [error] Sending find_sub batch [] 
04:26:46.840 [error] Sending find_sub_aq batch [] 
04:26:46.840 [error] batched message propagation "2020-08-06T04:26:46.840" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(g@11.0.0.17)817> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_26_31_935}],
         [],[]}}}}]
(g@11.0.0.17)818> f(AwMapRes).
ok
(g@11.0.0.17)819> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:48.789"
(g@11.0.0.17)820> 04:26:50.643 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:26:50.643" Took=32938 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_26_37_959}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:26:50.644 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",206,206},{"delta_send",206,207},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",436,0},{"sub_cancel",0,0}] 
04:26:53.378 [error] C1 propagation "2020-08-06T04:26:53.378" 
04:26:53.414 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:26:53.414 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,208}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:207 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_26_37_959}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)821> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_26_37_959}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)822> f(AwMapRes).
ok
(g@11.0.0.17)823> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:56.828"
(g@11.0.0.17)824> 04:26:56.841 [error] Sending find_sub batch [] 
04:26:56.841 [error] Sending find_sub_aq batch [] 
04:26:56.841 [error] batched message propagation "2020-08-06T04:26:56.841" 
04:26:57.777 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:26:57.777" Took=36151 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_26_50_003}],[]}}}}] 
04:26:57.777 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",207,207},{"delta_send",207,208},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",438,0},{"sub_cancel",0,0}] 
04:27:00.379 [error] C1 propagation "2020-08-06T04:27:00.379" 
04:27:00.379 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:27:00.379 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,209}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:208 
04:27:04.717 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:27:04.717" Took=43461 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_26_56_026}],[],[],[],[],[],[],[],[],[]}}}}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
04:27:04.717 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",208,208},{"delta_send",208,209},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",440,0},{"sub_cancel",0,0}] 
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_26_56_026}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)825> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_26_56_026}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)826> f(AwMapRes).
ok
(g@11.0.0.17)827> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:04.883"
(g@11.0.0.17)828> 04:27:06.843 [error] Sending find_sub batch [] 
04:27:06.844 [error] Sending find_sub_aq batch [] 
04:27:06.844 [error] batched message propagation "2020-08-06T04:27:06.844" 
04:27:07.381 [error] C1 propagation "2020-08-06T04:27:07.381" 
04:27:07.381 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:27:07.381 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,210}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:209 
04:27:11.693 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:27:11.693" Took=21120 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_27_02_047}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:11.694 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",209,209},{"delta_send",209,210},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",442,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_27_02_047}],
             [],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)829> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_27_02_047}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)830> f(AwMapRes).
ok
(g@11.0.0.17)831> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:12.913"
(g@11.0.0.17)832> 04:27:14.383 [error] C1 propagation "2020-08-06T04:27:14.383"  
04:27:14.384 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:27:14.384 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,211}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:210 
04:27:16.847 [error] Sending find_sub batch [] 
04:27:16.847 [error] Sending find_sub_aq batch [] 
04:27:16.847 [error] batched message propagation "2020-08-06T04:27:16.847" 
04:27:18.702 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:27:18.702" Took=26323 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_27_08_067}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:18.703 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",210,210},{"delta_send",210,211},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",444,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_27_08_067}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)833> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_27_08_067}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)834> f(AwMapRes).
ok
(g@11.0.0.17)835> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:20.951"
(g@11.0.0.17)836> 04:27:21.385 [error] C1 propagation "2020-08-06T04:27:21.385"  
04:27:21.385 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:27:21.385 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,212}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:211 
04:27:25.705 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:27:25.705" Took=28971 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_27_14_092}],[],[],[],[]}}}}] 
04:27:25.705 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",211,211},{"delta_send",211,212},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",446,0},{"sub_cancel",0,0}] 
04:27:26.070 [error] C2 propagation "2020-08-06T04:27:26.702" 
04:27:26.849 [error] Sending find_sub batch [] 
04:27:26.849 [error] Sending find_sub_aq batch [] 
04:27:26.849 [error] batched message propagation "2020-08-06T04:27:26.849" 
04:27:28.387 [error] C1 propagation "2020-08-06T04:27:28.387" 
04:27:28.400 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:27:28.400 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,213}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:212 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_27_14_092}],
             [],[],...}}}}]}
(g@11.0.0.17)837> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_27_14_092}],
         [],[],[],[]}}}}]
(g@11.0.0.17)838> f(AwMapRes).
ok
(g@11.0.0.17)839> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:28.985"
(g@11.0.0.17)840> 04:27:32.706 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:27:32.706" Took=25311 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_27_20_111}],[],[],[],[],[],[]}}}}] 
04:27:32.707 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",212,212},{"delta_send",212,213},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",448,0},{"sub_cancel",0,0}] 
04:27:35.388 [error] C1 propagation "2020-08-06T04:27:35.388" 
04:27:35.388 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:27:35.388 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,214}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:213 
04:27:36.850 [error] Sending find_sub batch [] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_27_20_111}],
             [],[],[],[],...}}}}]}
(g@11.0.0.17)841> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_27_20_111}],
         [],[],[],[],[],[]}}}}]
(g@11.0.0.17)842> 04:27:36.850 [error] Sending find_sub_aq batch [] 
f(AwMapRes).
ok
(g@11.0.0.17)843> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:37.223"
(g@11.0.0.17)844> 04:27:36.850 [error] batched message propagation "2020-08-06T04:27:36.850" 
04:27:39.704 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:27:39.704" Took=25654 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_27_26_134}],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:39.705 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",213,213},{"delta_send",213,214},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",450,0},{"sub_cancel",0,0}] 
04:27:42.390 [error] C1 propagation "2020-08-06T04:27:42.390" 
04:27:42.390 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:27:42.390 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,215}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:214 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_27_26_134}],
             [],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)845> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_27_26_134}],
         [],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)846> f(AwMapRes).
ok
(g@11.0.0.17)847> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:45.527"
(g@11.0.0.17)848> 04:27:46.710 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:27:46.710" Took=28287 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_27_37_825}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:46.712 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",214,214},{"delta_send",214,215},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",452,0},{"sub_cancel",0,0}] 
04:27:46.852 [error] Sending find_sub batch [] 
04:27:46.852 [error] Sending find_sub_aq batch [] 
04:27:46.852 [error] batched message propagation "2020-08-06T04:27:46.852" 
04:27:49.391 [error] C1 propagation "2020-08-06T04:27:49.391" 
04:27:49.391 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:27:49.391 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,216}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:215 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_27_37_825}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)849> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_27_37_825}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)850> f(AwMapRes).
ok
(g@11.0.0.17)851> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:53.859"
(g@11.0.0.17)852> 04:27:53.809 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:27:53.808" Took=35359 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_27_43_847}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:53.809 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",215,215},{"delta_send",215,216},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",454,0},{"sub_cancel",0,0}] 
04:27:55.926 [error] C3 propagation "2020-08-06T04:27:55.926" 
04:27:56.392 [error] C1 propagation "2020-08-06T04:27:56.392" 
04:27:56.508 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:27:56.508 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,217}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:216 
04:27:56.854 [error] Sending find_sub batch [] 
04:27:56.854 [error] Sending find_sub_aq batch [] 
04:27:56.854 [error] batched message propagation "2020-08-06T04:27:56.854" 
04:28:00.799 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:28:00.798" Took=34862 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_27_49_871}],[],[],[],[],[]}}}}] 
04:28:00.799 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",216,216},{"delta_send",216,217},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",456,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_27_49_871}],
             [],[],[],...}}}}]}
(g@11.0.0.17)853> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_27_49_871}],
         [],[],[],[],[]}}}}]
(g@11.0.0.17)854> f(AwMapRes).
ok
(g@11.0.0.17)855> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:01.126"
(g@11.0.0.17)856> 04:28:03.394 [error] C1 propagation "2020-08-06T04:28:03.394"  
04:28:03.395 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:28:03.395 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,218}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:217 
04:28:06.071 [error] C2 propagation "2020-08-06T04:28:06.712" 
04:28:06.856 [error] Sending find_sub batch [] 
04:28:06.856 [error] Sending find_sub_aq batch [] 
04:28:06.856 [error] batched message propagation "2020-08-06T04:28:06.856" 
04:28:07.722 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:28:07.722" Took=31807 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_27_55_892}],[],[],[],[],[],[],[],[]}}}}] 
04:28:07.723 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",217,217},{"delta_send",217,218},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",458,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_27_55_892}],
             [],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)857> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_27_55_892}],
         [],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)858> f(AwMapRes).
ok
(g@11.0.0.17)859> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:09.162"
(g@11.0.0.17)860> 04:28:10.396 [error] C1 propagation "2020-08-06T04:28:10.396"  
04:28:10.396 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:28:10.396 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,219}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:218 
04:28:14.730 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:28:14.730" Took=40615 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_28_01_923}],[],[],[],[]}}}}] 
04:28:14.730 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",218,218},{"delta_send",218,219},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",460,0},{"sub_cancel",0,0}] 
04:28:16.857 [error] Sending find_sub batch [] 
04:28:16.857 [error] Sending find_sub_aq batch [] 
04:28:16.857 [error] batched message propagation "2020-08-06T04:28:16.857" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_28_01_923}],
             [],[],...}}}}]}
(g@11.0.0.17)861> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_28_01_923}],
         [],[],[],[]}}}}]
(g@11.0.0.17)862> f(AwMapRes).
ok
(g@11.0.0.17)863> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:17.205"
(g@11.0.0.17)864> 04:28:17.398 [error] C1 propagation "2020-08-06T04:28:17.398"  
04:28:17.475 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:28:17.475 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,220}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:219 
04:28:21.726 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:28:21.726" Took=33106 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_28_13_963}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:28:21.726 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",219,219},{"delta_send",219,220},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",462,0},{"sub_cancel",0,0}] 
04:28:24.399 [error] C1 propagation "2020-08-06T04:28:24.399" 
04:28:24.399 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:28:24.399 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,221}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:220 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_28_13_963}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)865> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_28_13_963}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)866> f(AwMapRes).
ok
(g@11.0.0.17)867> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:25.243"
(g@11.0.0.17)868> 04:28:26.858 [error] Sending find_sub batch [] 
04:28:26.858 [error] Sending find_sub_aq batch [] 
04:28:26.858 [error] batched message propagation "2020-08-06T04:28:26.858" 
04:28:28.733 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:28:28.733" Took=35764 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_28_19_984}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:28:28.733 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",220,220},{"delta_send",220,221},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",464,0},{"sub_cancel",0,0}] 
04:28:31.400 [error] C1 propagation "2020-08-06T04:28:31.400" 
04:28:31.400 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:28:31.400 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,222}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:221 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_28_19_984}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)869> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_28_19_984}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)870> f(AwMapRes).
ok
(g@11.0.0.17)871> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:33.282"
(g@11.0.0.17)872> 04:28:35.732 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:28:35.732" Took=35014 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_28_26_007}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:28:35.733 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",221,221},{"delta_send",221,222},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",466,0},{"sub_cancel",0,0}] 
04:28:36.860 [error] Sending find_sub batch [] 
04:28:36.860 [error] Sending find_sub_aq batch [] 
04:28:36.860 [error] batched message propagation "2020-08-06T04:28:36.860" 
04:28:38.401 [error] C1 propagation "2020-08-06T04:28:38.401" 
04:28:38.426 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:28:38.426 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,223}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:222 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_28_26_007}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)873> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_28_26_007}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)874> f(AwMapRes).
ok
(g@11.0.0.17)875> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:41.321"
(g@11.0.0.17)876> 04:28:42.748 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:28:42.748" Took=21062 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_28_32_031}],[],[],[],[]}}}}] 
04:28:42.749 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",222,222},{"delta_send",222,223},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",468,0},{"sub_cancel",0,0}] 
04:28:45.402 [error] C1 propagation "2020-08-06T04:28:45.402" 
04:28:45.403 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:28:45.403 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,224}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:223 
04:28:46.072 [error] C2 propagation "2020-08-06T04:28:46.723" 
04:28:46.862 [error] Sending find_sub batch [] 
04:28:46.862 [error] Sending find_sub_aq batch [] 
04:28:46.862 [error] batched message propagation "2020-08-06T04:28:46.862" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_28_32_031}],
             [],[],...}}}}]}
(g@11.0.0.17)877> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_28_32_031}],
         [],[],[],[]}}}}]
(g@11.0.0.17)878> f(AwMapRes).
ok
(g@11.0.0.17)879> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:49.358"
(g@11.0.0.17)880> 04:28:49.737 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:28:49.737" Took=35410 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_28_38_051}],[],[],[],[],[],[],[]}}}}] 
04:28:49.737 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",223,223},{"delta_send",223,224},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",470,0},{"sub_cancel",0,0}] 
04:28:52.403 [error] C1 propagation "2020-08-06T04:28:52.403" 
04:28:52.403 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:28:52.403 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,225}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:224 
04:28:56.742 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:28:56.742" Took=43315 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_28_44_071}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:28:56.742 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",224,224},{"delta_send",224,225},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",472,0},{"sub_cancel",0,0}] 
04:28:56.863 [error] Sending find_sub batch [] 
04:28:56.863 [error] Sending find_sub_aq batch [] 
04:28:56.863 [error] batched message propagation "2020-08-06T04:28:56.863" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_28_44_071}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)881> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_28_44_071}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)882> f(AwMapRes).
ok
(g@11.0.0.17)883> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:57.395"
(g@11.0.0.17)884> 04:28:59.405 [error] C1 propagation "2020-08-06T04:28:59.405"  
04:28:59.405 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:28:59.405 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,226}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:225 
04:29:03.734 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:29:03.734" Took=32497 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_28_56_117}],[],[],[],[]}}}}] 
04:29:03.735 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",225,225},{"delta_send",225,226},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",474,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_28_56_117}],
             [],[],...}}}}]}
(g@11.0.0.17)885> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_28_56_117}],
         [],[],[],[]}}}}]
(g@11.0.0.17)886> f(AwMapRes).
ok
(g@11.0.0.17)887> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:05.431"
(g@11.0.0.17)888> 04:29:05.927 [error] C3 propagation "2020-08-06T04:29:05.927"  
04:29:06.406 [error] C1 propagation "2020-08-06T04:29:06.406" 
04:29:06.467 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:29:06.467 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,227}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:226 
04:29:06.864 [error] Sending find_sub batch [] 
04:29:06.864 [error] Sending find_sub_aq batch [] 
04:29:06.864 [error] batched message propagation "2020-08-06T04:29:06.864" 
04:29:10.741 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:29:10.741" Took=36385 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_02_135}],[]}}}}] 
04:29:10.741 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",226,226},{"delta_send",226,227},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",476,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)889> 04:29:13.407 [error] C1 propagation "2020-08-06T04:29:13.407"  
04:29:13.408 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
AwMapRes.
04:29:13.408 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,228}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:227 
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(g@11.0.0.17)890> f(AwMapRes).
ok
(g@11.0.0.17)891> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:13.590"
(g@11.0.0.17)892> 04:29:16.866 [error] Sending find_sub batch [] 
04:29:16.866 [error] Sending find_sub_aq batch [] 
04:29:16.866 [error] batched message propagation "2020-08-06T04:29:16.866" 
04:29:17.771 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:29:17.771" Took=28105 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_29_08_155}],[],[],[],[],[],[],[]}}}}] 
04:29:17.884 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",227,227},{"delta_send",227,228},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",478,0},{"sub_cancel",0,0}] 
04:29:20.408 [error] C1 propagation "2020-08-06T04:29:20.408" 
04:29:20.408 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:29:20.408 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,229}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:228 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_29_08_155}],
             [],[],[],[],[],...}}}}]}
(g@11.0.0.17)893> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_29_08_155}],
         [],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)894> f(AwMapRes).
ok
(g@11.0.0.17)895> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:21.506"
(g@11.0.0.17)896> 04:29:24.806 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:29:24.806" Took=38729 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_29_14_175}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:29:24.806 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",228,228},{"delta_send",228,229},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",480,0},{"sub_cancel",0,0}] 
04:29:26.073 [error] C2 propagation "2020-08-06T04:29:26.734" 
04:29:26.868 [error] Sending find_sub batch [] 
04:29:26.868 [error] Sending find_sub_aq batch [] 
04:29:26.868 [error] batched message propagation "2020-08-06T04:29:26.868" 
04:29:27.410 [error] C1 propagation "2020-08-06T04:29:27.410" 
04:29:27.447 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:29:27.447 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,230}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:229 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_29_14_175}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)897> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_29_14_175}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)898> f(AwMapRes).
ok
(g@11.0.0.17)899> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:29.541"
(g@11.0.0.17)900> 04:29:31.732 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:29:31.732" Took=24560 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_20_199}],[],[],[],[]}}}}] 
04:29:31.733 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",229,229},{"delta_send",229,230},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",482,0},{"sub_cancel",0,0}] 
04:29:34.411 [error] C1 propagation "2020-08-06T04:29:34.411" 
04:29:34.432 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:29:34.433 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,231}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:230 
04:29:36.869 [error] Sending find_sub batch [] 
04:29:36.869 [error] Sending find_sub_aq batch [] 
04:29:36.869 [error] batched message propagation "2020-08-06T04:29:36.869" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_29_20_199}],
             [],[],...}}}}]}
(g@11.0.0.17)901> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_29_20_199}],
         [],[],[],[]}}}}]
(g@11.0.0.17)902> f(AwMapRes).
ok
(g@11.0.0.17)903> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:37.581"
(g@11.0.0.17)904> 04:29:38.776 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:29:38.776" Took=28186 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_29_26_220}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:29:38.777 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",230,230},{"delta_send",230,231},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",484,0},{"sub_cancel",0,0}] 
04:29:41.413 [error] C1 propagation "2020-08-06T04:29:41.413" 
04:29:41.413 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:29:41.413 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,232}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:231 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_29_26_220}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)905> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_29_26_220}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(g@11.0.0.17)906> f(AwMapRes).
ok
(g@11.0.0.17)907> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:45.621"
(g@11.0.0.17)908> 04:29:45.744 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:29:45.744" Took=35105 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_29_38_263}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:29:45.744 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",231,231},{"delta_send",231,232},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",486,0},{"sub_cancel",0,0}] 
04:29:46.871 [error] Sending find_sub batch [] 
04:29:46.871 [error] Sending find_sub_aq batch [] 
04:29:46.871 [error] batched message propagation "2020-08-06T04:29:46.871" 
04:29:48.414 [error] C1 propagation "2020-08-06T04:29:48.414" 
04:29:48.414 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:29:48.414 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,233}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:232 
04:29:52.743 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:29:52.742" Took=34166 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_44_287}],[],[],[],[]}}}}] 
04:29:52.743 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",232,232},{"delta_send",232,233},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",488,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_29_44_287}],
             [],[],...}}}}]}
(g@11.0.0.17)909> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_29_44_287}],
         [],[],[],[]}}}}]
(g@11.0.0.17)910> f(AwMapRes).
ok
(g@11.0.0.17)911> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:53.664"
(g@11.0.0.17)912> 04:29:55.415 [error] C1 propagation "2020-08-06T04:29:55.415"  
04:29:55.415 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:29:55.415 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,234}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:233 
04:29:56.873 [error] Sending find_sub batch [] 
04:29:56.873 [error] Sending find_sub_aq batch [] 
04:29:56.873 [error] batched message propagation "2020-08-06T04:29:56.873" 
04:29:59.793 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:29:59.793" Took=34113 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_50_311}]}}}}] 
04:29:59.793 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",233,233},{"delta_send",233,234},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",490,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(g@11.0.0.17)913> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(g@11.0.0.17)914> f(AwMapRes).
ok
(g@11.0.0.17)915> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:30:01.709"
(g@11.0.0.17)916> 04:30:02.417 [error] C1 propagation "2020-08-06T04:30:02.417"  
04:30:02.437 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:30:02.438 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,235}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:234 
04:30:06.075 [error] C2 propagation "2020-08-06T04:30:06.751" 
04:30:06.743 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:30:06.742" Took=26722 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_29_56_332}],[],[],[],[],[],[],[],[]}}}}] 
04:30:06.804 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",234,234},{"delta_send",234,235},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",492,0},{"sub_cancel",0,0}] 
04:30:06.880 [error] Sending find_sub batch [] 
04:30:06.880 [error] Sending find_sub_aq batch [] 
04:30:06.880 [error] batched message propagation "2020-08-06T04:30:06.880" 
04:30:09.418 [error] C1 propagation "2020-08-06T04:30:09.418" 
04:30:09.518 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:30:09.518 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,236}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:235 
04:30:13.750 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:30:13.750" Took=34705 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_30_02_351}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:13.750 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",235,235},{"delta_send",235,236},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",494,0},{"sub_cancel",0,0}] 
04:30:15.928 [error] C3 propagation "2020-08-06T04:30:15.928" 
04:30:16.419 [error] C1 propagation "2020-08-06T04:30:16.419" 
04:30:16.539 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:30:16.539 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,237}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:236 
04:30:16.881 [error] Sending find_sub batch [] 
04:30:16.881 [error] Sending find_sub_aq batch [] 
04:30:16.881 [error] batched message propagation "2020-08-06T04:30:16.881" 
04:30:20.885 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:30:20.885" Took=47095 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_30_08_375}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:20.886 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",236,236},{"delta_send",236,237},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",496,0},{"sub_cancel",0,0}] 
04:30:23.420 [error] C1 propagation "2020-08-06T04:30:23.420" 
04:30:23.420 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:30:23.420 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,238}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:237 
04:30:26.883 [error] Sending find_sub batch [] 
04:30:26.883 [error] Sending find_sub_aq batch [] 
04:30:26.883 [error] batched message propagation "2020-08-06T04:30:26.883" 
04:30:27.742 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:30:27.742" Took=21330 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_20_429}],[],[],[],[]}}}}] 
04:30:27.742 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",237,237},{"delta_send",237,238},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",498,0},{"sub_cancel",0,0}] 
04:30:30.421 [error] C1 propagation "2020-08-06T04:30:30.421" 
04:30:30.421 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:30:30.422 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,239}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:238 
04:30:34.756 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:30:34.756" Took=34822 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_30_26_462}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:34.757 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",238,238},{"delta_send",238,239},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",500,0},{"sub_cancel",0,0}] 
04:30:36.884 [error] Sending find_sub batch [] 
04:30:36.884 [error] Sending find_sub_aq batch [] 
04:30:36.884 [error] batched message propagation "2020-08-06T04:30:36.884" 
04:30:37.423 [error] C1 propagation "2020-08-06T04:30:37.423" 
04:30:37.423 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:30:37.423 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,240}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:239 
04:30:41.757 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:30:41.757" Took=33901 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_32_499}],[],[],[],[],[]}}}}] 
04:30:41.757 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",239,239},{"delta_send",239,240},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",502,0},{"sub_cancel",0,0}] 
04:30:44.424 [error] C1 propagation "2020-08-06T04:30:44.424" 
04:30:44.425 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:30:44.425 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,241}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:240 
04:30:46.076 [error] C2 propagation "2020-08-06T04:30:46.768" 
04:30:46.885 [error] Sending find_sub batch [] 
04:30:46.885 [error] Sending find_sub_aq batch [] 
04:30:46.885 [error] batched message propagation "2020-08-06T04:30:46.885" 
04:30:48.893 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:30:48.893" Took=49597 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_30_38_530}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:48.894 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",240,240},{"delta_send",240,241},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",504,0},{"sub_cancel",0,0}] 
04:30:51.425 [error] C1 propagation "2020-08-06T04:30:51.425" 
04:30:51.443 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:30:51.444 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,242}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:241 
04:30:55.751 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:30:55.751" Took=23978 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_44_566}],[],[],[],[],[]}}}}] 
04:30:55.752 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",241,241},{"delta_send",241,242},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",506,0},{"sub_cancel",0,0}] 
04:30:56.886 [error] Sending find_sub batch [] 
04:30:56.886 [error] Sending find_sub_aq batch [] 
04:30:56.886 [error] batched message propagation "2020-08-06T04:30:56.886" 
04:30:58.426 [error] C1 propagation "2020-08-06T04:30:58.426" 
04:30:58.462 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:30:58.463 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,243}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:242 
04:31:02.762 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:31:02.761" Took=31408 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_30_50_602}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:02.762 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",242,242},{"delta_send",242,243},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",508,0},{"sub_cancel",0,0}] 
04:31:05.427 [error] C1 propagation "2020-08-06T04:31:05.427" 
04:31:05.429 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:31:05.429 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,244}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:243 
04:31:06.887 [error] Sending find_sub batch [] 
04:31:06.887 [error] Sending find_sub_aq batch [] 
04:31:06.887 [error] batched message propagation "2020-08-06T04:31:06.887" 
04:31:09.766 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:31:09.765" Took=35000 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_56_638}],[],[],[],[],[],[]}}}}] 
04:31:09.766 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",243,243},{"delta_send",243,244},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",510,0},{"sub_cancel",0,0}] 
04:31:12.429 [error] C1 propagation "2020-08-06T04:31:12.429" 
04:31:12.429 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:31:12.429 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,245}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:244 
04:31:16.765 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:31:16.764" Took=33432 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_31_08_713}],[],[],[],[],[],[],[],[]}}}}] 
04:31:16.765 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",244,244},{"delta_send",244,245},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",512,0},{"sub_cancel",0,0}] 
04:31:16.888 [error] Sending find_sub batch [] 
04:31:16.888 [error] Sending find_sub_aq batch [] 
04:31:16.888 [error] batched message propagation "2020-08-06T04:31:16.888" 
04:31:19.430 [error] C1 propagation "2020-08-06T04:31:19.430" 
04:31:19.431 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:31:19.431 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,246}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:245 
04:31:23.769 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:31:23.769" Took=24122 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_31_14_751}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:23.769 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",245,245},{"delta_send",245,246},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",514,0},{"sub_cancel",0,0}] 
04:31:25.930 [error] C3 propagation "2020-08-06T04:31:25.930" 
04:31:26.078 [error] C2 propagation "2020-08-06T04:31:26.782" 
04:31:26.432 [error] C1 propagation "2020-08-06T04:31:26.432" 
04:31:26.488 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:31:26.489 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,247}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:246 
04:31:26.889 [error] Sending find_sub batch [] 
04:31:26.889 [error] Sending find_sub_aq batch [] 
04:31:26.889 [error] batched message propagation "2020-08-06T04:31:26.889" 
04:31:30.756 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:31:30.756" Took=22369 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_31_20_788}],[],[]}}}}] 
04:31:30.757 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",246,246},{"delta_send",246,247},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",516,0},{"sub_cancel",0,0}] 
04:31:33.433 [error] C1 propagation "2020-08-06T04:31:33.433" 
04:31:33.434 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:31:33.434 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,248}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:247 
04:31:36.890 [error] Sending find_sub batch [] 
04:31:36.890 [error] Sending find_sub_aq batch [] 
04:31:36.890 [error] batched message propagation "2020-08-06T04:31:36.890" 
04:31:37.770 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:31:37.770" Took=32445 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_31_26_823}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:37.854 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",247,247},{"delta_send",247,248},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",518,0},{"sub_cancel",0,0}] 
04:31:40.434 [error] C1 propagation "2020-08-06T04:31:40.434" 
04:31:40.485 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:31:40.485 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,249}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:248 
04:31:44.770 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:31:44.770" Took=32880 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_31_32_859}],[],[],[],[],[],[],[],[]}}}}] 
04:31:44.771 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",248,248},{"delta_send",248,249},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",520,0},{"sub_cancel",0,0}] 
04:31:46.891 [error] Sending find_sub batch [] 
04:31:46.891 [error] Sending find_sub_aq batch [] 
04:31:46.891 [error] batched message propagation "2020-08-06T04:31:46.891" 
04:31:47.435 [error] C1 propagation "2020-08-06T04:31:47.435" 
04:31:47.435 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:31:47.435 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,250}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:249 
04:31:51.765 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:31:51.765" Took=27160 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_31_38_899}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:51.765 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",249,249},{"delta_send",249,250},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",522,0},{"sub_cancel",0,0}] 
04:31:54.436 [error] C1 propagation "2020-08-06T04:31:54.436" 
04:31:54.437 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:31:54.437 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,251}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:250 
04:31:56.893 [error] Sending find_sub batch [] 
04:31:56.893 [error] Sending find_sub_aq batch [] 
04:31:56.893 [error] batched message propagation "2020-08-06T04:31:56.893" 
04:31:58.770 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:31:58.770" Took=28598 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_31_50_979}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:58.770 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",250,250},{"delta_send",250,251},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",524,0},{"sub_cancel",0,0}] 
04:32:01.437 [error] C1 propagation "2020-08-06T04:32:01.437" 
04:32:01.437 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:32:01.437 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,252}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:251 
04:32:05.776 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:32:05.776" Took=33835 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_31_57_015}]}}}}] 
04:32:05.777 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",251,251},{"delta_send",251,252},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",526,0},{"sub_cancel",0,0}] 
04:32:06.080 [error] C2 propagation "2020-08-06T04:32:06.801" 
04:32:06.894 [error] Sending find_sub batch [] 
04:32:06.894 [error] Sending find_sub_aq batch [] 
04:32:06.894 [error] batched message propagation "2020-08-06T04:32:06.894" 
04:32:08.438 [error] C1 propagation "2020-08-06T04:32:08.438" 
04:32:08.483 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:32:08.483 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,253}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:252 
04:32:12.777 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:32:12.777" Took=33018 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_32_03_051}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:12.777 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",252,252},{"delta_send",252,253},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",528,0},{"sub_cancel",0,0}] 
04:32:15.440 [error] C1 propagation "2020-08-06T04:32:15.440" 
04:32:15.440 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:32:15.440 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,254}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:253 
04:32:16.896 [error] Sending find_sub batch [] 
04:32:16.896 [error] Sending find_sub_aq batch [] 
04:32:16.896 [error] batched message propagation "2020-08-06T04:32:16.896" 
04:32:19.769 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:32:19.769" Took=25981 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_32_09_090}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:19.769 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",253,253},{"delta_send",253,254},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",530,0},{"sub_cancel",0,0}] 
04:32:22.441 [error] C1 propagation "2020-08-06T04:32:22.441" 
04:32:22.441 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:32:22.442 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,255}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:254 
04:32:26.788 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:32:26.788" Took=32048 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_32_15_131}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:26.789 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",254,254},{"delta_send",254,255},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",532,0},{"sub_cancel",0,0}] 
04:32:26.920 [error] Sending find_sub batch [] 
04:32:26.921 [error] Sending find_sub_aq batch [] 
04:32:26.921 [error] batched message propagation "2020-08-06T04:32:26.921" 
04:32:29.443 [error] C1 propagation "2020-08-06T04:32:29.443" 
04:32:29.443 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:32:29.444 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,256}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:255 
04:32:33.778 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:32:33.778" Took=30152 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_32_21_168}],[],[],[],[]}}}}] 
04:32:33.778 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",255,255},{"delta_send",255,256},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",534,0},{"sub_cancel",0,0}] 
04:32:35.931 [error] C3 propagation "2020-08-06T04:32:35.931" 
04:32:36.445 [error] C1 propagation "2020-08-06T04:32:36.445" 
04:32:36.445 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:32:36.445 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,257}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:256 
04:32:36.922 [error] Sending find_sub batch [] 
04:32:36.922 [error] Sending find_sub_aq batch [] 
04:32:36.922 [error] batched message propagation "2020-08-06T04:32:36.922" 
04:32:40.779 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:32:40.779" Took=32079 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_32_33_245}]}}}}] 
04:32:40.779 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",256,256},{"delta_send",256,257},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",536,0},{"sub_cancel",0,0}] 
04:32:43.447 [error] C1 propagation "2020-08-06T04:32:43.447" 
04:32:43.462 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:32:43.462 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,258}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:257 
04:32:46.081 [error] C2 propagation "2020-08-06T04:32:46.814" 
04:32:46.924 [error] Sending find_sub batch [] 
04:32:46.924 [error] Sending find_sub_aq batch [] 
04:32:46.924 [error] batched message propagation "2020-08-06T04:32:46.924" 
04:32:50.448 [error] C1 propagation "2020-08-06T04:32:50.448" 
04:32:54.785 [error] LASPVIN Received delta From='a@11.0.0.11' at TimeStamp="2020-08-06T04:32:54.785" Took=31972 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_32_44_898}],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:54.786 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",257,257},{"delta_send",257,258},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,11},{"rate_class",11,1},{"rate_refresh",1,0},{"rate_subscribe",11,0},{"rate_subscribe_ack",0,11},{"send_backend",538,0},{"sub_cancel",0,0}] 
04:32:56.925 [error] Sending find_sub batch [] 
04:32:56.925 [error] Sending find_sub_aq batch [] 
04:32:56.925 [error] batched message propagation "2020-08-06T04:32:56.925" 
04:32:57.450 [error] C1 propagation "2020-08-06T04:32:57.450" 
04:32:57.494 [error] LASPVIN Sending delta to 'a@11.0.0.11' 
04:32:57.494 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<241,192,169,48,163,41,82,174,133,42,224,140,152,223,205,51,125,32,25,218>>,259}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:258 
04:33:04.452 [error] C1 propagation "2020-08-06T04:33:04.452" 
04:33:06.927 [error] Sending find_sub batch [] 
04:33:06.927 [error] Sending find_sub_aq batch [] 
04:33:06.927 [error] batched message propagation "2020-08-06T04:33:06.927" 
04:33:11.453 [error] C1 propagation "2020-08-06T04:33:11.453" 
04:33:16.928 [error] Sending find_sub batch [] 
04:33:16.928 [error] Sending find_sub_aq batch [] 
04:33:16.928 [error] batched message propagation "2020-08-06T04:33:16.928" 
04:33:18.454 [error] C1 propagation "2020-08-06T04:33:18.454" 
04:33:25.455 [error] C1 propagation "2020-08-06T04:33:25.455" 
04:33:26.083 [error] C2 propagation "2020-08-06T04:33:26.832" 
04:33:26.929 [error] Sending find_sub batch [] 
04:33:26.929 [error] Sending find_sub_aq batch [] 
04:33:26.929 [error] batched message propagation "2020-08-06T04:33:26.929" 
04:33:32.457 [error] C1 propagation "2020-08-06T04:33:32.457" 
04:33:36.931 [error] Sending find_sub batch [] 
04:33:36.931 [error] Sending find_sub_aq batch [] 
04:33:36.932 [error] batched message propagation "2020-08-06T04:33:36.931" 
04:33:39.458 [error] C1 propagation "2020-08-06T04:33:39.458" 
04:33:45.932 [error] C3 propagation "2020-08-06T04:33:45.932" 
04:33:46.460 [error] C1 propagation "2020-08-06T04:33:46.460" 
04:33:46.933 [error] Sending find_sub batch [] 
04:33:46.933 [error] Sending find_sub_aq batch [] 
04:33:46.933 [error] batched message propagation "2020-08-06T04:33:46.933" 
04:33:53.462 [error] C1 propagation "2020-08-06T04:33:53.462" 
04:33:56.934 [error] Sending find_sub batch [] 
04:33:56.934 [error] Sending find_sub_aq batch [] 
04:33:56.934 [error] batched message propagation "2020-08-06T04:33:56.934" 
04:34:00.463 [error] C1 propagation "2020-08-06T04:34:00.463" 
04:34:06.084 [error] C2 propagation "2020-08-06T04:34:06.842" 
04:34:06.936 [error] Sending find_sub batch [] 
04:34:06.936 [error] Sending find_sub_aq batch [] 
04:34:06.936 [error] batched message propagation "2020-08-06T04:34:06.936" 
04:34:07.464 [error] C1 propagation "2020-08-06T04:34:07.464" 
04:34:14.465 [error] C1 propagation "2020-08-06T04:34:14.465" 
04:34:16.937 [error] Sending find_sub batch [] 
04:34:16.937 [error] Sending find_sub_aq batch [] 
04:34:16.937 [error] batched message propagation "2020-08-06T04:34:16.937" 
04:34:21.467 [error] C1 propagation "2020-08-06T04:34:21.467" 
04:34:26.939 [error] Sending find_sub batch [] 
04:34:26.939 [error] Sending find_sub_aq batch [] 
04:34:26.939 [error] batched message propagation "2020-08-06T04:34:26.939" 
04:34:28.469 [error] C1 propagation "2020-08-06T04:34:28.469" 
04:34:35.470 [error] C1 propagation "2020-08-06T04:34:35.470" 
04:34:36.941 [error] Sending find_sub batch [] 
04:34:36.941 [error] Sending find_sub_aq batch [] 
04:34:36.941 [error] batched message propagation "2020-08-06T04:34:36.941" 
04:34:42.471 [error] C1 propagation "2020-08-06T04:34:42.471" 
04:34:46.085 [error] C2 propagation "2020-08-06T04:34:46.853" 
04:34:46.943 [error] Sending find_sub batch [] 
04:34:46.943 [error] Sending find_sub_aq batch [] 
04:34:46.943 [error] batched message propagation "2020-08-06T04:34:46.943" 
04:34:49.473 [error] C1 propagation "2020-08-06T04:34:49.473" 
04:34:55.933 [error] C3 propagation "2020-08-06T04:34:55.933" 
04:34:56.475 [error] C1 propagation "2020-08-06T04:34:56.475" 
04:34:56.944 [error] Sending find_sub batch [] 
04:34:56.944 [error] Sending find_sub_aq batch [] 
04:34:56.944 [error] batched message propagation "2020-08-06T04:34:56.944" 
04:35:03.476 [error] C1 propagation "2020-08-06T04:35:03.476" 
04:35:06.946 [error] Sending find_sub batch [] 
04:35:06.946 [error] Sending find_sub_aq batch [] 
04:35:06.946 [error] batched message propagation "2020-08-06T04:35:06.946" 
04:35:10.477 [error] C1 propagation "2020-08-06T04:35:10.477" 
04:35:16.948 [error] Sending find_sub batch [] 
04:35:16.948 [error] Sending find_sub_aq batch [] 
04:35:16.948 [error] batched message propagation "2020-08-06T04:35:16.948" 
04:35:17.479 [error] C1 propagation "2020-08-06T04:35:17.479" 
04:35:24.481 [error] C1 propagation "2020-08-06T04:35:24.481" 
04:35:26.086 [error] C2 propagation "2020-08-06T04:35:26.863" 
04:35:26.949 [error] Sending find_sub batch [] 
04:35:26.949 [error] Sending find_sub_aq batch [] 
04:35:26.949 [error] batched message propagation "2020-08-06T04:35:26.949" 
04:35:31.482 [error] C1 propagation "2020-08-06T04:35:31.482" 
04:35:36.951 [error] Sending find_sub batch [] 
04:35:36.951 [error] Sending find_sub_aq batch [] 
04:35:36.951 [error] batched message propagation "2020-08-06T04:35:36.951" 
04:35:38.483 [error] C1 propagation "2020-08-06T04:35:38.483" 
04:35:45.484 [error] C1 propagation "2020-08-06T04:35:45.484" 
04:35:46.952 [error] Sending find_sub batch [] 
04:35:46.952 [error] Sending find_sub_aq batch [] 
04:35:46.952 [error] batched message propagation "2020-08-06T04:35:46.952" 
04:35:52.486 [error] C1 propagation "2020-08-06T04:35:52.486" 
04:35:56.954 [error] Sending find_sub batch [] 
04:35:56.954 [error] Sending find_sub_aq batch [] 
04:35:56.954 [error] batched message propagation "2020-08-06T04:35:56.954" 
04:35:59.487 [error] C1 propagation "2020-08-06T04:35:59.487" 
04:36:05.934 [error] C3 propagation "2020-08-06T04:36:05.934" 
04:36:06.088 [error] C2 propagation "2020-08-06T04:36:06.882" 
04:36:06.489 [error] C1 propagation "2020-08-06T04:36:06.489" 
04:36:06.956 [error] Sending find_sub batch [] 
04:36:06.956 [error] Sending find_sub_aq batch [] 
04:36:06.956 [error] batched message propagation "2020-08-06T04:36:06.956" 
04:36:13.492 [error] C1 propagation "2020-08-06T04:36:13.492" 
04:36:16.957 [error] Sending find_sub batch [] 
04:36:16.957 [error] Sending find_sub_aq batch [] 
04:36:16.957 [error] batched message propagation "2020-08-06T04:36:16.957" 
04:36:20.494 [error] C1 propagation "2020-08-06T04:36:20.494" 
04:36:26.958 [error] Sending find_sub batch [] 
04:36:26.958 [error] Sending find_sub_aq batch [] 
04:36:26.958 [error] batched message propagation "2020-08-06T04:36:26.958" 
04:36:27.495 [error] C1 propagation "2020-08-06T04:36:27.495" 
04:36:34.496 [error] C1 propagation "2020-08-06T04:36:34.496" 
04:36:36.960 [error] Sending find_sub batch [] 
04:36:36.960 [error] Sending find_sub_aq batch [] 
04:36:36.960 [error] batched message propagation "2020-08-06T04:36:36.960" 
04:36:41.497 [error] C1 propagation "2020-08-06T04:36:41.497" 
04:36:46.090 [error] C2 propagation "2020-08-06T04:36:46.902" 
04:36:46.963 [error] Sending find_sub batch [] 
04:36:46.963 [error] Sending find_sub_aq batch [] 
04:36:46.963 [error] batched message propagation "2020-08-06T04:36:46.963" 
04:36:48.499 [error] C1 propagation "2020-08-06T04:36:48.499" 
04:36:55.500 [error] C1 propagation "2020-08-06T04:36:55.500" 
04:36:56.964 [error] Sending find_sub batch [] 
04:36:56.964 [error] Sending find_sub_aq batch [] 
04:36:56.964 [error] batched message propagation "2020-08-06T04:36:56.964" 
04:37:02.501 [error] C1 propagation "2020-08-06T04:37:02.501" 
04:37:06.966 [error] Sending find_sub batch [] 
04:37:06.966 [error] Sending find_sub_aq batch [] 
04:37:06.966 [error] batched message propagation "2020-08-06T04:37:06.966" 
04:37:09.503 [error] C1 propagation "2020-08-06T04:37:09.503" 
04:37:15.936 [error] C3 propagation "2020-08-06T04:37:15.936" 
04:37:16.504 [error] C1 propagation "2020-08-06T04:37:16.504" 
04:37:16.967 [error] Sending find_sub batch [] 
04:37:16.967 [error] Sending find_sub_aq batch [] 
04:37:16.967 [error] batched message propagation "2020-08-06T04:37:16.967" 
04:37:23.505 [error] C1 propagation "2020-08-06T04:37:23.505" 
04:37:26.092 [error] C2 propagation "2020-08-06T04:37:26.924" 
04:37:26.968 [error] Sending find_sub batch [] 
04:37:26.968 [error] Sending find_sub_aq batch [] 
04:37:26.968 [error] batched message propagation "2020-08-06T04:37:26.968" 
04:37:30.506 [error] C1 propagation "2020-08-06T04:37:30.506" 
04:37:36.969 [error] Sending find_sub batch [] 
04:37:36.969 [error] Sending find_sub_aq batch [] 
04:37:36.969 [error] batched message propagation "2020-08-06T04:37:36.969" 
04:37:37.508 [error] C1 propagation "2020-08-06T04:37:37.508" 
04:37:44.509 [error] C1 propagation "2020-08-06T04:37:44.509" 
04:37:46.970 [error] Sending find_sub batch [] 
04:37:46.970 [error] Sending find_sub_aq batch [] 
04:37:46.971 [error] batched message propagation "2020-08-06T04:37:46.971" 
04:37:51.510 [error] C1 propagation "2020-08-06T04:37:51.510" 
04:37:56.972 [error] Sending find_sub batch [] 
04:37:56.972 [error] Sending find_sub_aq batch [] 
04:37:56.972 [error] batched message propagation "2020-08-06T04:37:56.972" 
04:37:58.511 [error] C1 propagation "2020-08-06T04:37:58.511" 
04:38:05.513 [error] C1 propagation "2020-08-06T04:38:05.513" 
04:38:06.094 [error] C2 propagation "2020-08-06T04:38:06.942" 
04:38:06.974 [error] Sending find_sub batch [] 
04:38:06.974 [error] Sending find_sub_aq batch [] 
04:38:06.974 [error] batched message propagation "2020-08-06T04:38:06.974" 
04:38:12.515 [error] C1 propagation "2020-08-06T04:38:12.515" 
04:38:16.976 [error] Sending find_sub batch [] 
04:38:16.976 [error] Sending find_sub_aq batch [] 
04:38:16.976 [error] batched message propagation "2020-08-06T04:38:16.976" 
04:38:19.516 [error] C1 propagation "2020-08-06T04:38:19.516" 
04:38:25.937 [error] C3 propagation "2020-08-06T04:38:25.937" 
04:38:26.518 [error] C1 propagation "2020-08-06T04:38:26.518" 
04:38:26.977 [error] Sending find_sub batch [] 
04:38:26.977 [error] Sending find_sub_aq batch [] 
04:38:26.977 [error] batched message propagation "2020-08-06T04:38:26.977" 
04:38:33.520 [error] C1 propagation "2020-08-06T04:38:33.520" 
04:38:36.979 [error] Sending find_sub batch [] 
04:38:36.979 [error] Sending find_sub_aq batch [] 
04:38:36.979 [error] batched message propagation "2020-08-06T04:38:36.979" 
04:38:40.521 [error] C1 propagation "2020-08-06T04:38:40.521" 
04:38:46.095 [error] C2 propagation "2020-08-06T04:38:46.954" 
04:38:46.980 [error] Sending find_sub batch [] 
04:38:46.980 [error] Sending find_sub_aq batch [] 
04:38:46.980 [error] batched message propagation "2020-08-06T04:38:46.980" 
04:38:47.523 [error] C1 propagation "2020-08-06T04:38:47.523" 
04:38:54.524 [error] C1 propagation "2020-08-06T04:38:54.524" 
04:38:56.982 [error] Sending find_sub batch [] 
04:38:56.982 [error] Sending find_sub_aq batch [] 
04:38:56.982 [error] batched message propagation "2020-08-06T04:38:56.982" 
04:39:01.525 [error] C1 propagation "2020-08-06T04:39:01.525" 
04:39:06.984 [error] Sending find_sub batch [] 
04:39:06.984 [error] Sending find_sub_aq batch [] 
04:39:06.984 [error] batched message propagation "2020-08-06T04:39:06.984" 
04:39:08.527 [error] C1 propagation "2020-08-06T04:39:08.527" 
04:39:15.528 [error] C1 propagation "2020-08-06T04:39:15.528" 
04:39:16.986 [error] Sending find_sub batch [] 
04:39:16.986 [error] Sending find_sub_aq batch [] 
04:39:16.986 [error] batched message propagation "2020-08-06T04:39:16.986" 
04:39:22.530 [error] C1 propagation "2020-08-06T04:39:22.530" 
04:39:26.097 [error] C2 propagation "2020-08-06T04:39:26.974" 
04:39:26.988 [error] Sending find_sub batch [] 
04:39:26.988 [error] Sending find_sub_aq batch [] 
04:39:26.988 [error] batched message propagation "2020-08-06T04:39:26.988" 
04:39:29.532 [error] C1 propagation "2020-08-06T04:39:29.532" 
04:39:35.939 [error] C3 propagation "2020-08-06T04:39:35.939" 
04:39:36.534 [error] C1 propagation "2020-08-06T04:39:36.534" 
04:39:36.990 [error] Sending find_sub batch [] 
04:39:36.990 [error] Sending find_sub_aq batch [] 
04:39:36.990 [error] batched message propagation "2020-08-06T04:39:36.990" 
04:39:43.536 [error] C1 propagation "2020-08-06T04:39:43.536" 
04:39:46.991 [error] Sending find_sub batch [] 
04:39:46.991 [error] Sending find_sub_aq batch [] 
04:39:46.992 [error] batched message propagation "2020-08-06T04:39:46.992" 
04:39:50.537 [error] C1 propagation "2020-08-06T04:39:50.537" 
04:39:56.993 [error] Sending find_sub batch [] 
04:39:56.993 [error] Sending find_sub_aq batch [] 
04:39:56.993 [error] batched message propagation "2020-08-06T04:39:56.993" 
04:39:57.539 [error] C1 propagation "2020-08-06T04:39:57.539" 
04:40:04.540 [error] C1 propagation "2020-08-06T04:40:04.540" 
04:40:06.099 [error] C2 propagation "2020-08-06T04:40:06.992" 
04:40:06.995 [error] Sending find_sub batch [] 
04:40:06.995 [error] Sending find_sub_aq batch [] 
04:40:06.995 [error] batched message propagation "2020-08-06T04:40:06.995" 
04:40:11.541 [error] C1 propagation "2020-08-06T04:40:11.541" 
04:40:16.996 [error] Sending find_sub batch [] 
04:40:16.996 [error] Sending find_sub_aq batch [] 
04:40:16.996 [error] batched message propagation "2020-08-06T04:40:16.996" 
04:40:18.543 [error] C1 propagation "2020-08-06T04:40:18.543" 
04:40:25.544 [error] C1 propagation "2020-08-06T04:40:25.544" 
04:40:26.998 [error] Sending find_sub batch [] 
04:40:26.998 [error] Sending find_sub_aq batch [] 
04:40:26.998 [error] batched message propagation "2020-08-06T04:40:26.998" 
04:40:32.545 [error] C1 propagation "2020-08-06T04:40:32.545" 
04:40:37.000 [error] Sending find_sub batch [] 
04:40:37.000 [error] Sending find_sub_aq batch [] 
04:40:37.000 [error] batched message propagation "2020-08-06T04:40:37.390" 
04:40:39.546 [error] C1 propagation "2020-08-06T04:40:39.546" 
04:40:45.941 [error] C3 propagation "2020-08-06T04:40:45.941" 
04:40:46.100 [error] C2 propagation "2020-08-06T04:40:46.100" 
04:40:46.548 [error] C1 propagation "2020-08-06T04:40:46.548" 
04:40:47.001 [error] Sending find_sub batch [] 
04:40:47.001 [error] Sending find_sub_aq batch [] 
04:40:47.001 [error] batched message propagation "2020-08-06T04:40:47.140" 
04:40:53.549 [error] C1 propagation "2020-08-06T04:40:53.549" 
04:40:57.002 [error] Sending find_sub batch [] 
04:40:57.002 [error] Sending find_sub_aq batch [] 
04:40:57.002 [error] batched message propagation "2020-08-06T04:40:57.257" 
04:41:00.551 [error] C1 propagation "2020-08-06T04:41:00.551" 
04:41:07.004 [error] Sending find_sub batch [] 
04:41:07.004 [error] Sending find_sub_aq batch [] 
04:41:07.004 [error] batched message propagation "2020-08-06T04:41:07.431" 
04:41:07.553 [error] C1 propagation "2020-08-06T04:41:07.553" 
04:41:14.555 [error] C1 propagation "2020-08-06T04:41:14.555" 
04:41:17.005 [error] Sending find_sub batch [] 
04:41:17.005 [error] Sending find_sub_aq batch [] 
04:41:17.005 [error] batched message propagation "2020-08-06T04:41:17.538" 
04:41:21.556 [error] C1 propagation "2020-08-06T04:41:21.556" 
04:41:26.101 [error] C2 propagation "2020-08-06T04:41:26.101" 
04:41:27.006 [error] Sending find_sub batch [] 
04:41:27.006 [error] Sending find_sub_aq batch [] 
04:41:27.007 [error] batched message propagation "2020-08-06T04:41:27.696" 
04:41:28.557 [error] C1 propagation "2020-08-06T04:41:28.557" 
04:41:35.558 [error] C1 propagation "2020-08-06T04:41:35.558" 
04:41:37.008 [error] Sending find_sub batch [] 
04:41:37.008 [error] Sending find_sub_aq batch [] 
04:41:37.008 [error] batched message propagation "2020-08-06T04:41:37.866" 
04:41:42.560 [error] C1 propagation "2020-08-06T04:41:42.560" 
04:41:47.010 [error] Sending find_sub batch [] 
04:41:47.010 [error] Sending find_sub_aq batch [] 
04:41:47.010 [error] batched message propagation "2020-08-06T04:41:47.105" 
04:41:49.561 [error] C1 propagation "2020-08-06T04:41:49.561" 
04:41:55.943 [error] C3 propagation "2020-08-06T04:41:55.943" 
04:41:56.563 [error] C1 propagation "2020-08-06T04:41:56.563" 
04:41:57.012 [error] Sending find_sub batch [] 
04:41:57.012 [error] Sending find_sub_aq batch [] 
04:41:57.012 [error] batched message propagation "2020-08-06T04:41:57.123" 
04:42:03.565 [error] C1 propagation "2020-08-06T04:42:03.565" 
04:42:06.103 [error] C2 propagation "2020-08-06T04:42:06.103" 
04:42:07.013 [error] Sending find_sub batch [] 
04:42:07.013 [error] Sending find_sub_aq batch [] 
04:42:07.013 [error] batched message propagation "2020-08-06T04:42:07.139" 
04:42:10.567 [error] C1 propagation "2020-08-06T04:42:10.567" 
04:42:17.015 [error] Sending find_sub batch [] 
04:42:17.015 [error] Sending find_sub_aq batch [] 
04:42:17.015 [error] batched message propagation "2020-08-06T04:42:17.157" 
04:42:17.568 [error] C1 propagation "2020-08-06T04:42:17.568" 
04:42:24.569 [error] C1 propagation "2020-08-06T04:42:24.569" 
04:42:27.017 [error] Sending find_sub batch [] 
04:42:27.017 [error] Sending find_sub_aq batch [] 
04:42:27.017 [error] batched message propagation "2020-08-06T04:42:27.175" 
04:42:31.571 [error] C1 propagation "2020-08-06T04:42:31.571" 
04:42:37.018 [error] Sending find_sub batch [] 
04:42:37.018 [error] Sending find_sub_aq batch [] 
04:42:37.018 [error] batched message propagation "2020-08-06T04:42:37.189" 
04:42:38.572 [error] C1 propagation "2020-08-06T04:42:38.572" 
04:42:45.573 [error] C1 propagation "2020-08-06T04:42:45.573" 
04:42:46.104 [error] C2 propagation "2020-08-06T04:42:46.104" 
04:42:47.020 [error] Sending find_sub batch [] 
04:42:47.020 [error] Sending find_sub_aq batch [] 
04:42:47.020 [error] batched message propagation "2020-08-06T04:42:47.207" 
04:42:52.575 [error] C1 propagation "2020-08-06T04:42:52.575" 
04:42:57.022 [error] Sending find_sub batch [] 
04:42:57.022 [error] Sending find_sub_aq batch [] 
04:42:57.022 [error] batched message propagation "2020-08-06T04:42:57.228" 
04:42:59.577 [error] C1 propagation "2020-08-06T04:42:59.577" 
04:43:05.945 [error] C3 propagation "2020-08-06T04:43:05.945" 
04:43:06.579 [error] C1 propagation "2020-08-06T04:43:06.579" 
04:43:07.023 [error] Sending find_sub batch [] 
04:43:07.023 [error] Sending find_sub_aq batch [] 
04:43:07.023 [error] batched message propagation "2020-08-06T04:43:07.234" 
04:43:13.580 [error] C1 propagation "2020-08-06T04:43:13.580" 
04:43:17.024 [error] Sending find_sub batch [] 
04:43:17.024 [error] Sending find_sub_aq batch [] 
04:43:17.024 [error] batched message propagation "2020-08-06T04:43:17.243" 
04:43:20.581 [error] C1 propagation "2020-08-06T04:43:20.581" 
04:43:26.105 [error] C2 propagation "2020-08-06T04:43:26.105" 
04:43:27.025 [error] Sending find_sub batch [] 
04:43:27.025 [error] Sending find_sub_aq batch [] 
04:43:27.026 [error] batched message propagation "2020-08-06T04:43:27.259" 
04:43:27.583 [error] C1 propagation "2020-08-06T04:43:27.583" 
04:43:34.584 [error] C1 propagation "2020-08-06T04:43:34.584" 
04:43:37.027 [error] Sending find_sub batch [] 
04:43:37.027 [error] Sending find_sub_aq batch [] 
04:43:37.027 [error] batched message propagation "2020-08-06T04:43:37.277" 
04:43:41.585 [error] C1 propagation "2020-08-06T04:43:41.585" 
04:43:47.029 [error] Sending find_sub batch [] 
04:43:47.029 [error] Sending find_sub_aq batch [] 
04:43:47.029 [error] batched message propagation "2020-08-06T04:43:47.296" 
04:43:48.586 [error] C1 propagation "2020-08-06T04:43:48.586" 
04:43:55.588 [error] C1 propagation "2020-08-06T04:43:55.588" 
04:43:57.031 [error] Sending find_sub batch [] 
04:43:57.031 [error] Sending find_sub_aq batch [] 
04:43:57.031 [error] batched message propagation "2020-08-06T04:43:57.314" 
04:44:02.589 [error] C1 propagation "2020-08-06T04:44:02.589" 
04:44:06.107 [error] C2 propagation "2020-08-06T04:44:06.107" 
04:44:07.033 [error] Sending find_sub batch [] 
04:44:07.033 [error] Sending find_sub_aq batch [] 
04:44:07.033 [error] batched message propagation "2020-08-06T04:44:07.336" 
04:44:09.590 [error] C1 propagation "2020-08-06T04:44:09.590" 
04:44:15.946 [error] C3 propagation "2020-08-06T04:44:15.946" 
04:44:16.591 [error] C1 propagation "2020-08-06T04:44:16.591" 
04:44:17.035 [error] Sending find_sub batch [] 
04:44:17.035 [error] Sending find_sub_aq batch [] 
04:44:17.035 [error] batched message propagation "2020-08-06T04:44:17.353" 
04:44:23.592 [error] C1 propagation "2020-08-06T04:44:23.592" 
04:44:27.036 [error] Sending find_sub batch [] 
04:44:27.036 [error] Sending find_sub_aq batch [] 
04:44:27.036 [error] batched message propagation "2020-08-06T04:44:27.364" 
04:44:30.593 [error] C1 propagation "2020-08-06T04:44:30.593" 
04:44:37.037 [error] Sending find_sub batch [] 
04:44:37.037 [error] Sending find_sub_aq batch [] 
04:44:37.037 [error] batched message propagation "2020-08-06T04:44:37.374" 
04:44:37.594 [error] C1 propagation "2020-08-06T04:44:37.594" 
04:44:44.596 [error] C1 propagation "2020-08-06T04:44:44.596" 
04:44:46.108 [error] C2 propagation "2020-08-06T04:44:46.108" 
04:44:47.039 [error] Sending find_sub batch [] 
04:44:47.039 [error] Sending find_sub_aq batch [] 
04:44:47.039 [error] batched message propagation "2020-08-06T04:44:47.393" 
04:44:51.597 [error] C1 propagation "2020-08-06T04:44:51.597" 
04:44:57.040 [error] Sending find_sub batch [] 
04:44:57.040 [error] Sending find_sub_aq batch [] 
04:44:57.040 [error] batched message propagation "2020-08-06T04:44:57.408" 
04:44:58.599 [error] C1 propagation "2020-08-06T04:44:58.599" 
04:45:05.600 [error] C1 propagation "2020-08-06T04:45:05.600" 
04:45:07.042 [error] Sending find_sub batch [] 
04:45:07.042 [error] Sending find_sub_aq batch [] 
04:45:07.042 [error] batched message propagation "2020-08-06T04:45:07.428" 
04:45:12.601 [error] C1 propagation "2020-08-06T04:45:12.601" 
04:45:17.044 [error] Sending find_sub batch [] 
04:45:17.044 [error] Sending find_sub_aq batch [] 
04:45:17.044 [error] batched message propagation "2020-08-06T04:45:17.445" 
04:45:19.602 [error] C1 propagation "2020-08-06T04:45:19.602" 
04:45:25.947 [error] C3 propagation "2020-08-06T04:45:25.947" 
04:45:26.110 [error] C2 propagation "2020-08-06T04:45:26.110" 
04:45:26.603 [error] C1 propagation "2020-08-06T04:45:26.603" 
04:45:27.046 [error] Sending find_sub batch [] 
04:45:27.046 [error] Sending find_sub_aq batch [] 
04:45:27.046 [error] batched message propagation "2020-08-06T04:45:27.463" 
04:45:33.604 [error] C1 propagation "2020-08-06T04:45:33.604" 
04:45:37.047 [error] Sending find_sub batch [] 
04:45:37.047 [error] Sending find_sub_aq batch [] 
04:45:37.047 [error] batched message propagation "2020-08-06T04:45:37.477" 
04:45:40.606 [error] C1 propagation "2020-08-06T04:45:40.606" 
04:45:47.049 [error] Sending find_sub batch [] 
04:45:47.049 [error] Sending find_sub_aq batch [] 
04:45:47.049 [error] batched message propagation "2020-08-06T04:45:47.498" 
04:45:47.608 [error] C1 propagation "2020-08-06T04:45:47.608" 
04:45:54.610 [error] C1 propagation "2020-08-06T04:45:54.610" 
04:45:57.051 [error] Sending find_sub batch [] 
04:45:57.051 [error] Sending find_sub_aq batch [] 
04:45:57.051 [error] batched message propagation "2020-08-06T04:45:57.516" 
04:46:01.612 [error] C1 propagation "2020-08-06T04:46:01.612" 
04:46:06.111 [error] C2 propagation "2020-08-06T04:46:06.111" 
04:46:07.053 [error] Sending find_sub batch [] 
04:46:07.053 [error] Sending find_sub_aq batch [] 
04:46:07.053 [error] batched message propagation "2020-08-06T04:46:07.534" 
04:46:08.613 [error] C1 propagation "2020-08-06T04:46:08.613" 
04:46:15.615 [error] C1 propagation "2020-08-06T04:46:15.615" 
04:46:17.054 [error] Sending find_sub batch [] 
04:46:17.054 [error] Sending find_sub_aq batch [] 
04:46:17.054 [error] batched message propagation "2020-08-06T04:46:17.547" 
04:46:22.616 [error] C1 propagation "2020-08-06T04:46:22.616" 
04:46:27.055 [error] Sending find_sub batch [] 
04:46:27.055 [error] Sending find_sub_aq batch [] 
04:46:27.055 [error] batched message propagation "2020-08-06T04:46:27.557" 
04:46:29.618 [error] C1 propagation "2020-08-06T04:46:29.618" 
04:46:35.949 [error] C3 propagation "2020-08-06T04:46:35.949" 
04:46:36.619 [error] C1 propagation "2020-08-06T04:46:36.619" 
04:46:37.056 [error] Sending find_sub batch [] 
04:46:37.056 [error] Sending find_sub_aq batch [] 
04:46:37.056 [error] batched message propagation "2020-08-06T04:46:37.564" 
04:46:43.621 [error] C1 propagation "2020-08-06T04:46:43.621" 
04:46:46.113 [error] C2 propagation "2020-08-06T04:46:46.113" 
04:46:47.058 [error] Sending find_sub batch [] 
04:46:47.058 [error] Sending find_sub_aq batch [] 
04:46:47.058 [error] batched message propagation "2020-08-06T04:46:47.584" 
04:46:50.622 [error] C1 propagation "2020-08-06T04:46:50.622" 
04:46:57.059 [error] Sending find_sub batch [] 
04:46:57.059 [error] Sending find_sub_aq batch [] 
04:46:57.059 [error] batched message propagation "2020-08-06T04:46:57.593" 
04:46:57.623 [error] C1 propagation "2020-08-06T04:46:57.623" 
04:47:04.624 [error] C1 propagation "2020-08-06T04:47:04.624" 
04:47:07.061 [error] Sending find_sub batch [] 
04:47:07.061 [error] Sending find_sub_aq batch [] 
04:47:07.061 [error] batched message propagation "2020-08-06T04:47:07.616" 
04:47:11.626 [error] C1 propagation "2020-08-06T04:47:11.626" 
04:47:17.063 [error] Sending find_sub batch [] 
04:47:17.063 [error] Sending find_sub_aq batch [] 
04:47:17.063 [error] batched message propagation "2020-08-06T04:47:17.636" 
04:47:18.628 [error] C1 propagation "2020-08-06T04:47:18.628" 
04:47:25.630 [error] C1 propagation "2020-08-06T04:47:25.630" 
04:47:26.114 [error] C2 propagation "2020-08-06T04:47:26.114" 
04:47:27.065 [error] Sending find_sub batch [] 
04:47:27.065 [error] Sending find_sub_aq batch [] 
04:47:27.065 [error] batched message propagation "2020-08-06T04:47:27.653" 
04:47:32.632 [error] C1 propagation "2020-08-06T04:47:32.632" 
04:47:37.066 [error] Sending find_sub batch [] 
04:47:37.066 [error] Sending find_sub_aq batch [] 
04:47:37.066 [error] batched message propagation "2020-08-06T04:47:37.663" 
04:47:39.633 [error] C1 propagation "2020-08-06T04:47:39.633" 
04:47:45.950 [error] C3 propagation "2020-08-06T04:47:45.950" 
04:47:46.635 [error] C1 propagation "2020-08-06T04:47:46.635" 
04:47:47.067 [error] Sending find_sub batch [] 
04:47:47.067 [error] Sending find_sub_aq batch [] 
04:47:47.067 [error] batched message propagation "2020-08-06T04:47:47.674" 
04:47:53.637 [error] C1 propagation "2020-08-06T04:47:53.637" 
04:47:57.069 [error] Sending find_sub batch [] 
04:47:57.069 [error] Sending find_sub_aq batch [] 
04:47:57.069 [error] batched message propagation "2020-08-06T04:47:57.695" 
04:48:00.638 [error] C1 propagation "2020-08-06T04:48:00.638" 
04:48:06.116 [error] C2 propagation "2020-08-06T04:48:06.116" 
04:48:07.071 [error] Sending find_sub batch [] 
04:48:07.071 [error] Sending find_sub_aq batch [] 
04:48:07.071 [error] batched message propagation "2020-08-06T04:48:07.715" 
04:48:07.639 [error] C1 propagation "2020-08-06T04:48:07.639" 
04:48:14.641 [error] C1 propagation "2020-08-06T04:48:14.641" 
04:48:17.073 [error] Sending find_sub batch [] 
04:48:17.073 [error] Sending find_sub_aq batch [] 
04:48:17.073 [error] batched message propagation "2020-08-06T04:48:17.734" 
04:48:21.642 [error] C1 propagation "2020-08-06T04:48:21.642" 
04:48:27.074 [error] Sending find_sub batch [] 
04:48:27.074 [error] Sending find_sub_aq batch [] 
04:48:27.074 [error] batched message propagation "2020-08-06T04:48:27.746" 
04:48:28.644 [error] C1 propagation "2020-08-06T04:48:28.644" 
04:48:35.645 [error] C1 propagation "2020-08-06T04:48:35.645" 
04:48:37.076 [error] Sending find_sub batch [] 
04:48:37.076 [error] Sending find_sub_aq batch [] 
04:48:37.076 [error] batched message propagation "2020-08-06T04:48:37.766" 
04:48:42.646 [error] C1 propagation "2020-08-06T04:48:42.646" 
04:48:46.117 [error] C2 propagation "2020-08-06T04:48:46.117" 
04:48:47.078 [error] Sending find_sub batch [] 
04:48:47.078 [error] Sending find_sub_aq batch [] 
04:48:47.078 [error] batched message propagation "2020-08-06T04:48:47.786" 
04:48:49.648 [error] C1 propagation "2020-08-06T04:48:49.647" 
04:48:55.951 [error] C3 propagation "2020-08-06T04:48:55.951" 
04:48:56.649 [error] C1 propagation "2020-08-06T04:48:56.649" 
04:48:57.079 [error] Sending find_sub batch [] 
04:48:57.079 [error] Sending find_sub_aq batch [] 
04:48:57.079 [error] batched message propagation "2020-08-06T04:48:57.794" 
04:49:03.651 [error] C1 propagation "2020-08-06T04:49:03.651" 
04:49:07.081 [error] Sending find_sub batch [] 
04:49:07.081 [error] Sending find_sub_aq batch [] 
04:49:07.081 [error] batched message propagation "2020-08-06T04:49:07.816" 
04:49:10.653 [error] C1 propagation "2020-08-06T04:49:10.653" 
04:49:17.082 [error] Sending find_sub batch [] 
04:49:17.082 [error] Sending find_sub_aq batch [] 
04:49:17.082 [error] batched message propagation "2020-08-06T04:49:17.825" 
04:49:17.655 [error] C1 propagation "2020-08-06T04:49:17.655" 
04:49:24.658 [error] C1 propagation "2020-08-06T04:49:24.658" 
04:49:26.119 [error] C2 propagation "2020-08-06T04:49:26.119" 
04:49:27.084 [error] Sending find_sub batch [] 
04:49:27.084 [error] Sending find_sub_aq batch [] 
04:49:27.084 [error] batched message propagation "2020-08-06T04:49:27.845" 
04:49:31.659 [error] C1 propagation "2020-08-06T04:49:31.659" 
04:49:37.086 [error] Sending find_sub batch [] 
04:49:37.086 [error] Sending find_sub_aq batch [] 
04:49:37.086 [error] batched message propagation "2020-08-06T04:49:37.863" 
04:49:38.660 [error] C1 propagation "2020-08-06T04:49:38.660" 
04:49:45.661 [error] C1 propagation "2020-08-06T04:49:45.661" 
04:49:47.089 [error] Sending find_sub batch [] 
04:49:47.089 [error] Sending find_sub_aq batch [] 
04:49:47.089 [error] batched message propagation "2020-08-06T04:49:47.895" 
04:49:52.662 [error] C1 propagation "2020-08-06T04:49:52.662" 
04:49:57.091 [error] Sending find_sub batch [] 
04:49:57.091 [error] Sending find_sub_aq batch [] 
04:49:57.091 [error] batched message propagation "2020-08-06T04:49:57.914" 
04:49:59.663 [error] C1 propagation "2020-08-06T04:49:59.663" 
04:50:05.953 [error] C3 propagation "2020-08-06T04:50:05.953" 
04:50:06.121 [error] C2 propagation "2020-08-06T04:50:06.121" 
04:50:06.664 [error] C1 propagation "2020-08-06T04:50:06.664" 
04:50:07.092 [error] Sending find_sub batch [] 
04:50:07.092 [error] Sending find_sub_aq batch [] 
04:50:07.092 [error] batched message propagation "2020-08-06T04:50:07.923" 
04:50:13.665 [error] C1 propagation "2020-08-06T04:50:13.665" 
04:50:17.093 [error] Sending find_sub batch [] 
04:50:17.093 [error] Sending find_sub_aq batch [] 
04:50:17.093 [error] batched message propagation "2020-08-06T04:50:17.933" 
04:50:20.666 [error] C1 propagation "2020-08-06T04:50:20.666" 
04:50:27.094 [error] Sending find_sub batch [] 
04:50:27.094 [error] Sending find_sub_aq batch [] 
04:50:27.094 [error] batched message propagation "2020-08-06T04:50:27.943" 
04:50:27.668 [error] C1 propagation "2020-08-06T04:50:27.668" 
04:50:34.669 [error] C1 propagation "2020-08-06T04:50:34.669" 
04:50:37.095 [error] Sending find_sub batch [] 
04:50:37.095 [error] Sending find_sub_aq batch [] 
04:50:37.095 [error] batched message propagation "2020-08-06T04:50:37.955" 
04:50:41.671 [error] C1 propagation "2020-08-06T04:50:41.671" 
04:50:46.123 [error] C2 propagation "2020-08-06T04:50:46.123" 
04:50:47.097 [error] Sending find_sub batch [] 
04:50:47.097 [error] Sending find_sub_aq batch [] 
04:50:47.097 [error] batched message propagation "2020-08-06T04:50:47.973" 
04:50:48.673 [error] C1 propagation "2020-08-06T04:50:48.673" 
04:50:55.674 [error] C1 propagation "2020-08-06T04:50:55.674" 
04:50:57.099 [error] Sending find_sub batch [] 
04:50:57.099 [error] Sending find_sub_aq batch [] 
04:50:57.099 [error] batched message propagation "2020-08-06T04:50:57.993" 
04:51:02.675 [error] C1 propagation "2020-08-06T04:51:02.675" 
04:51:07.101 [error] Sending find_sub batch [] 
04:51:07.101 [error] Sending find_sub_aq batch [] 
04:51:07.101 [error] batched message propagation "2020-08-06T04:51:07.101" 
04:51:09.677 [error] C1 propagation "2020-08-06T04:51:09.677" 
04:51:15.955 [error] C3 propagation "2020-08-06T04:51:15.955" 
04:51:16.678 [error] C1 propagation "2020-08-06T04:51:16.678" 
04:51:17.103 [error] Sending find_sub batch [] 
04:51:17.103 [error] Sending find_sub_aq batch [] 
04:51:17.103 [error] batched message propagation "2020-08-06T04:51:17.103" 
04:51:23.680 [error] C1 propagation "2020-08-06T04:51:23.680" 
04:51:26.124 [error] C2 propagation "2020-08-06T04:51:26.124" 
04:51:27.104 [error] Sending find_sub batch [] 
04:51:27.104 [error] Sending find_sub_aq batch [] 
04:51:27.104 [error] batched message propagation "2020-08-06T04:51:27.104" 
04:51:30.681 [error] C1 propagation "2020-08-06T04:51:30.681" 
04:51:37.105 [error] Sending find_sub batch [] 
04:51:37.105 [error] Sending find_sub_aq batch [] 
04:51:37.105 [error] batched message propagation "2020-08-06T04:51:37.105" 
04:51:37.683 [error] C1 propagation "2020-08-06T04:51:37.683" 
04:51:44.685 [error] C1 propagation "2020-08-06T04:51:44.685" 
04:51:47.107 [error] Sending find_sub batch [] 
04:51:47.107 [error] Sending find_sub_aq batch [] 
04:51:47.107 [error] batched message propagation "2020-08-06T04:51:47.107" 
04:51:51.686 [error] C1 propagation "2020-08-06T04:51:51.686" 
04:51:57.108 [error] Sending find_sub batch [] 
04:51:57.108 [error] Sending find_sub_aq batch [] 
04:51:57.108 [error] batched message propagation "2020-08-06T04:51:57.108" 
04:51:58.688 [error] C1 propagation "2020-08-06T04:51:58.688" 
04:52:05.689 [error] C1 propagation "2020-08-06T04:52:05.689" 
04:52:06.126 [error] C2 propagation "2020-08-06T04:52:06.126" 
04:52:07.110 [error] Sending find_sub batch [] 
04:52:07.110 [error] Sending find_sub_aq batch [] 
04:52:07.110 [error] batched message propagation "2020-08-06T04:52:07.110" 
04:52:12.691 [error] C1 propagation "2020-08-06T04:52:12.691" 
04:52:17.111 [error] Sending find_sub batch [] 
04:52:17.111 [error] Sending find_sub_aq batch [] 
04:52:17.111 [error] batched message propagation "2020-08-06T04:52:17.111" 
04:52:19.692 [error] C1 propagation "2020-08-06T04:52:19.692" 
04:52:25.956 [error] C3 propagation "2020-08-06T04:52:25.956" 
04:52:26.693 [error] C1 propagation "2020-08-06T04:52:26.693" 
04:52:27.112 [error] Sending find_sub batch [] 
04:52:27.112 [error] Sending find_sub_aq batch [] 
04:52:27.112 [error] batched message propagation "2020-08-06T04:52:27.112" 
04:52:33.695 [error] C1 propagation "2020-08-06T04:52:33.695" 
04:52:37.113 [error] Sending find_sub batch [] 
04:52:37.113 [error] Sending find_sub_aq batch [] 
04:52:37.113 [error] batched message propagation "2020-08-06T04:52:37.113" 
04:52:40.696 [error] C1 propagation "2020-08-06T04:52:40.696" 
04:52:46.127 [error] C2 propagation "2020-08-06T04:52:46.127" 
04:52:47.115 [error] Sending find_sub batch [] 
04:52:47.115 [error] Sending find_sub_aq batch [] 
04:52:47.115 [error] batched message propagation "2020-08-06T04:52:47.115" 
04:52:47.697 [error] C1 propagation "2020-08-06T04:52:47.697" 
04:52:54.699 [error] C1 propagation "2020-08-06T04:52:54.699" 
04:52:57.116 [error] Sending find_sub batch [] 
04:52:57.116 [error] Sending find_sub_aq batch [] 
04:52:57.116 [error] batched message propagation "2020-08-06T04:52:57.116" 
04:53:01.701 [error] C1 propagation "2020-08-06T04:53:01.701" 
04:53:07.118 [error] Sending find_sub batch [] 
04:53:07.118 [error] Sending find_sub_aq batch [] 
04:53:07.118 [error] batched message propagation "2020-08-06T04:53:07.118" 
04:53:08.703 [error] C1 propagation "2020-08-06T04:53:08.703" 
04:53:15.705 [error] C1 propagation "2020-08-06T04:53:15.705" 
04:53:17.119 [error] Sending find_sub batch [] 
04:53:17.119 [error] Sending find_sub_aq batch [] 
04:53:17.119 [error] batched message propagation "2020-08-06T04:53:17.119" 
04:53:22.707 [error] C1 propagation "2020-08-06T04:53:22.707" 
04:53:26.128 [error] C2 propagation "2020-08-06T04:53:26.128" 
04:53:27.121 [error] Sending find_sub batch [] 
04:53:27.121 [error] Sending find_sub_aq batch [] 
04:53:27.121 [error] batched message propagation "2020-08-06T04:53:27.121" 
04:53:29.708 [error] C1 propagation "2020-08-06T04:53:29.708" 
04:53:35.957 [error] C3 propagation "2020-08-06T04:53:35.957" 
04:53:36.709 [error] C1 propagation "2020-08-06T04:53:36.709" 
04:53:37.122 [error] Sending find_sub batch [] 
04:53:37.122 [error] Sending find_sub_aq batch [] 
04:53:37.122 [error] batched message propagation "2020-08-06T04:53:37.122" 
04:53:43.710 [error] C1 propagation "2020-08-06T04:53:43.710" 
04:53:47.123 [error] Sending find_sub batch [] 
04:53:47.123 [error] Sending find_sub_aq batch [] 
04:53:47.124 [error] batched message propagation "2020-08-06T04:53:47.123" 
04:53:50.712 [error] C1 propagation "2020-08-06T04:53:50.712" 
04:53:57.125 [error] Sending find_sub batch [] 
04:53:57.125 [error] Sending find_sub_aq batch [] 
04:53:57.125 [error] batched message propagation "2020-08-06T04:53:57.125" 
04:53:57.713 [error] C1 propagation "2020-08-06T04:53:57.713" 
04:54:04.715 [error] C1 propagation "2020-08-06T04:54:04.715" 
04:54:06.129 [error] C2 propagation "2020-08-06T04:54:06.129" 
04:54:07.128 [error] Sending find_sub batch [] 
04:54:07.128 [error] Sending find_sub_aq batch [] 
04:54:07.128 [error] batched message propagation "2020-08-06T04:54:07.128" 
04:54:11.717 [error] C1 propagation "2020-08-06T04:54:11.717" 
04:54:17.130 [error] Sending find_sub batch [] 
04:54:17.130 [error] Sending find_sub_aq batch [] 
04:54:17.130 [error] batched message propagation "2020-08-06T04:54:17.130" 
04:54:18.719 [error] C1 propagation "2020-08-06T04:54:18.719" 
04:54:25.720 [error] C1 propagation "2020-08-06T04:54:25.720" 
04:54:27.131 [error] Sending find_sub batch [] 
04:54:27.131 [error] Sending find_sub_aq batch [] 
04:54:27.131 [error] batched message propagation "2020-08-06T04:54:27.131" 
04:54:32.721 [error] C1 propagation "2020-08-06T04:54:32.721" 
04:54:37.132 [error] Sending find_sub batch [] 
04:54:37.133 [error] Sending find_sub_aq batch [] 
04:54:37.133 [error] batched message propagation "2020-08-06T04:54:37.133" 
04:54:39.723 [error] C1 propagation "2020-08-06T04:54:39.723" 
04:54:45.958 [error] C3 propagation "2020-08-06T04:54:45.958" 
04:54:46.130 [error] C2 propagation "2020-08-06T04:54:46.130" 
04:54:46.725 [error] C1 propagation "2020-08-06T04:54:46.725" 
04:54:47.134 [error] Sending find_sub batch [] 
04:54:47.134 [error] Sending find_sub_aq batch [] 
04:54:47.134 [error] batched message propagation "2020-08-06T04:54:47.134" 
04:54:53.726 [error] C1 propagation "2020-08-06T04:54:53.726" 
04:54:57.136 [error] Sending find_sub batch [] 
04:54:57.136 [error] Sending find_sub_aq batch [] 
04:54:57.136 [error] batched message propagation "2020-08-06T04:54:57.136" 
04:55:00.728 [error] C1 propagation "2020-08-06T04:55:00.728" 
04:55:07.139 [error] Sending find_sub batch [] 
04:55:07.139 [error] Sending find_sub_aq batch [] 
04:55:07.139 [error] batched message propagation "2020-08-06T04:55:07.139" 
04:55:07.730 [error] C1 propagation "2020-08-06T04:55:07.730" 
04:55:14.731 [error] C1 propagation "2020-08-06T04:55:14.731" 
04:55:17.140 [error] Sending find_sub batch [] 
04:55:17.140 [error] Sending find_sub_aq batch [] 
04:55:17.141 [error] batched message propagation "2020-08-06T04:55:17.141" 
04:55:21.732 [error] C1 propagation "2020-08-06T04:55:21.732" 
04:55:26.131 [error] C2 propagation "2020-08-06T04:55:26.131" 
04:55:27.142 [error] Sending find_sub batch [] 
04:55:27.142 [error] Sending find_sub_aq batch [] 
04:55:27.142 [error] batched message propagation "2020-08-06T04:55:27.142" 
04:55:28.734 [error] C1 propagation "2020-08-06T04:55:28.734" 
04:55:35.735 [error] C1 propagation "2020-08-06T04:55:35.735" 
04:55:37.144 [error] Sending find_sub batch [] 
04:55:37.144 [error] Sending find_sub_aq batch [] 
04:55:37.144 [error] batched message propagation "2020-08-06T04:55:37.144" 
04:55:42.736 [error] C1 propagation "2020-08-06T04:55:42.736" 
04:55:47.147 [error] Sending find_sub batch [] 
04:55:47.147 [error] Sending find_sub_aq batch [] 
04:55:47.147 [error] batched message propagation "2020-08-06T04:55:47.147" 
04:55:49.737 [error] C1 propagation "2020-08-06T04:55:49.737" 
04:55:55.959 [error] C3 propagation "2020-08-06T04:55:55.959" 
04:55:56.739 [error] C1 propagation "2020-08-06T04:55:56.739" 
04:55:57.148 [error] Sending find_sub batch [] 
04:55:57.148 [error] Sending find_sub_aq batch [] 
04:55:57.148 [error] batched message propagation "2020-08-06T04:55:57.148" 
04:56:03.740 [error] C1 propagation "2020-08-06T04:56:03.740" 
04:56:06.133 [error] C2 propagation "2020-08-06T04:56:06.133" 
04:56:07.150 [error] Sending find_sub batch [] 
04:56:07.150 [error] Sending find_sub_aq batch [] 
04:56:07.150 [error] batched message propagation "2020-08-06T04:56:07.150" 
04:56:10.741 [error] C1 propagation "2020-08-06T04:56:10.741" 
04:56:17.151 [error] Sending find_sub batch [] 
04:56:17.151 [error] Sending find_sub_aq batch [] 
04:56:17.151 [error] batched message propagation "2020-08-06T04:56:17.151" 
04:56:17.743 [error] C1 propagation "2020-08-06T04:56:17.743" 
04:56:24.744 [error] C1 propagation "2020-08-06T04:56:24.744" 
04:56:27.152 [error] Sending find_sub batch [] 
04:56:27.152 [error] Sending find_sub_aq batch [] 
04:56:27.152 [error] batched message propagation "2020-08-06T04:56:27.152" 
04:56:31.746 [error] C1 propagation "2020-08-06T04:56:31.746" 
04:56:37.154 [error] Sending find_sub batch [] 
04:56:37.154 [error] Sending find_sub_aq batch [] 
04:56:37.154 [error] batched message propagation "2020-08-06T04:56:37.154" 
04:56:38.748 [error] C1 propagation "2020-08-06T04:56:38.748" 
04:56:45.750 [error] C1 propagation "2020-08-06T04:56:45.750" 
04:56:46.134 [error] C2 propagation "2020-08-06T04:56:46.134" 
04:56:47.155 [error] Sending find_sub batch [] 
04:56:47.155 [error] Sending find_sub_aq batch [] 
04:56:47.155 [error] batched message propagation "2020-08-06T04:56:47.155" 
04:56:52.751 [error] C1 propagation "2020-08-06T04:56:52.751" 
04:56:57.158 [error] Sending find_sub batch [] 
04:56:57.158 [error] Sending find_sub_aq batch [] 
04:56:57.158 [error] batched message propagation "2020-08-06T04:56:57.158" 
04:56:59.752 [error] C1 propagation "2020-08-06T04:56:59.752" 
04:57:05.960 [error] C3 propagation "2020-08-06T04:57:05.960" 
04:57:06.754 [error] C1 propagation "2020-08-06T04:57:06.754" 
04:57:07.159 [error] Sending find_sub batch [] 
04:57:07.159 [error] Sending find_sub_aq batch [] 
04:57:07.159 [error] batched message propagation "2020-08-06T04:57:07.159" 
04:57:13.755 [error] C1 propagation "2020-08-06T04:57:13.755" 
04:57:17.161 [error] Sending find_sub batch [] 
04:57:17.162 [error] Sending find_sub_aq batch [] 
04:57:17.162 [error] batched message propagation "2020-08-06T04:57:17.162" 
04:57:20.757 [error] C1 propagation "2020-08-06T04:57:20.757" 
04:57:26.136 [error] C2 propagation "2020-08-06T04:57:26.136" 
04:57:27.163 [error] Sending find_sub batch [] 
04:57:27.163 [error] Sending find_sub_aq batch [] 
04:57:27.163 [error] batched message propagation "2020-08-06T04:57:27.163" 
04:57:27.759 [error] C1 propagation "2020-08-06T04:57:27.759" 
04:57:34.761 [error] C1 propagation "2020-08-06T04:57:34.761" 
04:57:37.165 [error] Sending find_sub batch [] 
04:57:37.165 [error] Sending find_sub_aq batch [] 
04:57:37.165 [error] batched message propagation "2020-08-06T04:57:37.165" 
04:57:41.762 [error] C1 propagation "2020-08-06T04:57:41.762" 
04:57:47.167 [error] Sending find_sub batch [] 
04:57:47.167 [error] Sending find_sub_aq batch [] 
04:57:47.167 [error] batched message propagation "2020-08-06T04:57:47.167" 
04:57:48.764 [error] C1 propagation "2020-08-06T04:57:48.764" 
04:57:55.766 [error] C1 propagation "2020-08-06T04:57:55.766" 
04:57:57.168 [error] Sending find_sub batch [] 
04:57:57.168 [error] Sending find_sub_aq batch [] 
04:57:57.168 [error] batched message propagation "2020-08-06T04:57:57.168" 
04:58:02.768 [error] C1 propagation "2020-08-06T04:58:02.768" 
04:58:06.138 [error] C2 propagation "2020-08-06T04:58:06.138" 
04:58:07.170 [error] Sending find_sub batch [] 
04:58:07.170 [error] Sending find_sub_aq batch [] 
04:58:07.170 [error] batched message propagation "2020-08-06T04:58:07.170" 
04:58:09.769 [error] C1 propagation "2020-08-06T04:58:09.769" 
04:58:15.961 [error] C3 propagation "2020-08-06T04:58:15.961" 
04:58:16.770 [error] C1 propagation "2020-08-06T04:58:16.770" 
04:58:17.171 [error] Sending find_sub batch [] 
04:58:17.171 [error] Sending find_sub_aq batch [] 
04:58:17.171 [error] batched message propagation "2020-08-06T04:58:17.171" 
04:58:23.772 [error] C1 propagation "2020-08-06T04:58:23.772" 
04:58:27.172 [error] Sending find_sub batch [] 
04:58:27.173 [error] Sending find_sub_aq batch [] 
04:58:27.173 [error] batched message propagation "2020-08-06T04:58:27.173" 
04:58:30.774 [error] C1 propagation "2020-08-06T04:58:30.774" 
04:58:37.174 [error] Sending find_sub batch [] 
04:58:37.175 [error] Sending find_sub_aq batch [] 
04:58:37.175 [error] batched message propagation "2020-08-06T04:58:37.175" 
04:58:37.776 [error] C1 propagation "2020-08-06T04:58:37.776" 
04:58:44.778 [error] C1 propagation "2020-08-06T04:58:44.778" 
04:58:46.139 [error] C2 propagation "2020-08-06T04:58:46.139" 
04:58:47.176 [error] Sending find_sub batch [] 
04:58:47.176 [error] Sending find_sub_aq batch [] 
04:58:47.176 [error] batched message propagation "2020-08-06T04:58:47.176" 
04:58:51.780 [error] C1 propagation "2020-08-06T04:58:51.780" 
04:58:57.178 [error] Sending find_sub batch [] 
04:58:57.179 [error] Sending find_sub_aq batch [] 
04:58:57.179 [error] batched message propagation "2020-08-06T04:58:57.179" 
04:58:58.782 [error] C1 propagation "2020-08-06T04:58:58.782" 
04:59:05.783 [error] C1 propagation "2020-08-06T04:59:05.783" 
04:59:07.180 [error] Sending find_sub batch [] 
04:59:07.180 [error] Sending find_sub_aq batch [] 
04:59:07.180 [error] batched message propagation "2020-08-06T04:59:07.180" 
04:59:12.784 [error] C1 propagation "2020-08-06T04:59:12.784" 
04:59:17.181 [error] Sending find_sub batch [] 
04:59:17.181 [error] Sending find_sub_aq batch [] 
04:59:17.181 [error] batched message propagation "2020-08-06T04:59:17.181" 
04:59:19.785 [error] C1 propagation "2020-08-06T04:59:19.785" 
04:59:25.963 [error] C3 propagation "2020-08-06T04:59:25.963" 
04:59:26.140 [error] C2 propagation "2020-08-06T04:59:26.140" 
04:59:26.786 [error] C1 propagation "2020-08-06T04:59:26.786" 
04:59:27.183 [error] Sending find_sub batch [] 
04:59:27.183 [error] Sending find_sub_aq batch [] 
04:59:27.183 [error] batched message propagation "2020-08-06T04:59:27.183" 
04:59:33.788 [error] C1 propagation "2020-08-06T04:59:33.788" 
04:59:37.184 [error] Sending find_sub batch [] 
04:59:37.184 [error] Sending find_sub_aq batch [] 
04:59:37.185 [error] batched message propagation "2020-08-06T04:59:37.185" 
04:59:40.790 [error] C1 propagation "2020-08-06T04:59:40.790" 
04:59:47.186 [error] Sending find_sub batch [] 
04:59:47.186 [error] Sending find_sub_aq batch [] 
04:59:47.186 [error] batched message propagation "2020-08-06T04:59:47.186" 
04:59:47.792 [error] C1 propagation "2020-08-06T04:59:47.792" 
04:59:54.793 [error] C1 propagation "2020-08-06T04:59:54.793" 
04:59:57.188 [error] Sending find_sub batch [] 
04:59:57.188 [error] Sending find_sub_aq batch [] 
04:59:57.188 [error] batched message propagation "2020-08-06T04:59:57.188" 
05:00:01.795 [error] C1 propagation "2020-08-06T05:00:01.795" 
05:00:06.141 [error] C2 propagation "2020-08-06T05:00:06.141" 
05:00:07.190 [error] Sending find_sub batch [] 
05:00:07.190 [error] Sending find_sub_aq batch [] 
05:00:07.190 [error] batched message propagation "2020-08-06T05:00:07.190" 
05:00:08.797 [error] C1 propagation "2020-08-06T05:00:08.797" 
05:00:15.798 [error] C1 propagation "2020-08-06T05:00:15.798" 
05:00:17.191 [error] Sending find_sub batch [] 
05:00:17.191 [error] Sending find_sub_aq batch [] 
05:00:17.191 [error] batched message propagation "2020-08-06T05:00:17.191" 
05:00:22.799 [error] C1 propagation "2020-08-06T05:00:22.799" 
05:00:27.193 [error] Sending find_sub batch [] 
05:00:27.193 [error] Sending find_sub_aq batch [] 
05:00:27.193 [error] batched message propagation "2020-08-06T05:00:27.193" 
05:00:29.801 [error] C1 propagation "2020-08-06T05:00:29.801" 
05:00:35.965 [error] C3 propagation "2020-08-06T05:00:35.965" 
05:00:36.803 [error] C1 propagation "2020-08-06T05:00:36.803" 
05:00:37.194 [error] Sending find_sub batch [] 
05:00:37.194 [error] Sending find_sub_aq batch [] 
05:00:37.194 [error] batched message propagation "2020-08-06T05:00:37.194" 
05:00:43.804 [error] C1 propagation "2020-08-06T05:00:43.804" 
05:00:46.143 [error] C2 propagation "2020-08-06T05:00:46.143" 
05:00:47.196 [error] Sending find_sub batch [] 
05:00:47.196 [error] Sending find_sub_aq batch [] 
05:00:47.196 [error] batched message propagation "2020-08-06T05:00:47.196" 
05:00:50.806 [error] C1 propagation "2020-08-06T05:00:50.806" 
05:00:57.198 [error] Sending find_sub batch [] 
05:00:57.198 [error] Sending find_sub_aq batch [] 
05:00:57.198 [error] batched message propagation "2020-08-06T05:00:57.198" 
05:00:57.808 [error] C1 propagation "2020-08-06T05:00:57.808" 
05:01:04.809 [error] C1 propagation "2020-08-06T05:01:04.809" 
05:01:07.200 [error] Sending find_sub batch [] 
05:01:07.200 [error] Sending find_sub_aq batch [] 
05:01:07.200 [error] batched message propagation "2020-08-06T05:01:07.200" 
05:01:11.810 [error] C1 propagation "2020-08-06T05:01:11.810" 
05:01:17.202 [error] Sending find_sub batch [] 
05:01:17.202 [error] Sending find_sub_aq batch [] 
05:01:17.202 [error] batched message propagation "2020-08-06T05:01:17.202" 
05:01:18.812 [error] C1 propagation "2020-08-06T05:01:18.812" 
05:01:25.813 [error] C1 propagation "2020-08-06T05:01:25.813" 
05:01:26.144 [error] C2 propagation "2020-08-06T05:01:26.144" 
05:01:27.203 [error] Sending find_sub batch [] 
05:01:27.203 [error] Sending find_sub_aq batch [] 
05:01:27.203 [error] batched message propagation "2020-08-06T05:01:27.203" 
05:01:32.814 [error] C1 propagation "2020-08-06T05:01:32.814" 
05:01:37.204 [error] Sending find_sub batch [] 
05:01:37.204 [error] Sending find_sub_aq batch [] 
05:01:37.204 [error] batched message propagation "2020-08-06T05:01:37.204" 
05:01:39.816 [error] C1 propagation "2020-08-06T05:01:39.816" 
05:01:45.966 [error] C3 propagation "2020-08-06T05:01:45.966" 
05:01:46.817 [error] C1 propagation "2020-08-06T05:01:46.817" 
05:01:47.205 [error] Sending find_sub batch [] 
05:01:47.205 [error] Sending find_sub_aq batch [] 
05:01:47.205 [error] batched message propagation "2020-08-06T05:01:47.205" 
05:01:53.818 [error] C1 propagation "2020-08-06T05:01:53.818" 
05:01:57.206 [error] Sending find_sub batch [] 
05:01:57.206 [error] Sending find_sub_aq batch [] 
05:01:57.206 [error] batched message propagation "2020-08-06T05:01:57.206" 
05:02:00.820 [error] C1 propagation "2020-08-06T05:02:00.820" 
05:02:06.146 [error] C2 propagation "2020-08-06T05:02:06.146" 
05:02:07.208 [error] Sending find_sub batch [] 
05:02:07.208 [error] Sending find_sub_aq batch [] 
05:02:07.208 [error] batched message propagation "2020-08-06T05:02:07.208" 
05:02:07.822 [error] C1 propagation "2020-08-06T05:02:07.822" 
05:02:14.823 [error] C1 propagation "2020-08-06T05:02:14.823" 
05:02:17.210 [error] Sending find_sub batch [] 
05:02:17.210 [error] Sending find_sub_aq batch [] 
05:02:17.210 [error] batched message propagation "2020-08-06T05:02:17.210" 
05:02:21.825 [error] C1 propagation "2020-08-06T05:02:21.825" 
05:02:27.211 [error] Sending find_sub batch [] 
05:02:27.211 [error] Sending find_sub_aq batch [] 
05:02:27.211 [error] batched message propagation "2020-08-06T05:02:27.211" 
05:02:28.827 [error] C1 propagation "2020-08-06T05:02:28.827" 
05:02:35.829 [error] C1 propagation "2020-08-06T05:02:35.829" 
05:02:37.212 [error] Sending find_sub batch [] 
05:02:37.212 [error] Sending find_sub_aq batch [] 
05:02:37.212 [error] batched message propagation "2020-08-06T05:02:37.212" 
05:02:42.831 [error] C1 propagation "2020-08-06T05:02:42.831" 
05:02:46.147 [error] C2 propagation "2020-08-06T05:02:46.147" 
05:02:47.214 [error] Sending find_sub batch [] 
05:02:47.214 [error] Sending find_sub_aq batch [] 
05:02:47.214 [error] batched message propagation "2020-08-06T05:02:47.214" 
05:02:49.833 [error] C1 propagation "2020-08-06T05:02:49.833" 
05:02:55.968 [error] C3 propagation "2020-08-06T05:02:55.968" 
05:02:56.834 [error] C1 propagation "2020-08-06T05:02:56.834" 
05:02:57.215 [error] Sending find_sub batch [] 
05:02:57.215 [error] Sending find_sub_aq batch [] 
05:02:57.215 [error] batched message propagation "2020-08-06T05:02:57.215" 
05:03:03.835 [error] C1 propagation "2020-08-06T05:03:03.835" 
05:03:07.217 [error] Sending find_sub batch [] 
05:03:07.217 [error] Sending find_sub_aq batch [] 
05:03:07.217 [error] batched message propagation "2020-08-06T05:03:07.217" 
05:03:10.836 [error] C1 propagation "2020-08-06T05:03:10.836" 
05:03:17.219 [error] Sending find_sub batch [] 
05:03:17.219 [error] Sending find_sub_aq batch [] 
05:03:17.219 [error] batched message propagation "2020-08-06T05:03:17.219" 
05:03:17.838 [error] C1 propagation "2020-08-06T05:03:17.838" 
05:03:24.839 [error] C1 propagation "2020-08-06T05:03:24.839" 
05:03:26.148 [error] C2 propagation "2020-08-06T05:03:26.148" 
05:03:27.220 [error] Sending find_sub batch [] 
05:03:27.220 [error] Sending find_sub_aq batch [] 
05:03:27.220 [error] batched message propagation "2020-08-06T05:03:27.220" 
05:03:31.840 [error] C1 propagation "2020-08-06T05:03:31.840" 
05:03:37.221 [error] Sending find_sub batch [] 
05:03:37.221 [error] Sending find_sub_aq batch [] 
05:03:37.221 [error] batched message propagation "2020-08-06T05:03:37.221" 
05:03:38.842 [error] C1 propagation "2020-08-06T05:03:38.842" 
05:03:45.844 [error] C1 propagation "2020-08-06T05:03:45.844" 
05:03:47.223 [error] Sending find_sub batch [] 
05:03:47.223 [error] Sending find_sub_aq batch [] 
05:03:47.223 [error] batched message propagation "2020-08-06T05:03:47.223" 
05:03:52.845 [error] C1 propagation "2020-08-06T05:03:52.845" 
05:03:57.224 [error] Sending find_sub batch [] 
05:03:57.224 [error] Sending find_sub_aq batch [] 
05:03:57.224 [error] batched message propagation "2020-08-06T05:03:57.224" 
05:03:59.847 [error] C1 propagation "2020-08-06T05:03:59.847" 
05:04:05.969 [error] C3 propagation "2020-08-06T05:04:05.969" 
05:04:06.150 [error] C2 propagation "2020-08-06T05:04:06.150" 
05:04:06.848 [error] C1 propagation "2020-08-06T05:04:06.848" 
05:04:07.225 [error] Sending find_sub batch [] 
05:04:07.225 [error] Sending find_sub_aq batch [] 
05:04:07.225 [error] batched message propagation "2020-08-06T05:04:07.225" 
05:04:13.850 [error] C1 propagation "2020-08-06T05:04:13.850" 
05:04:17.227 [error] Sending find_sub batch [] 
05:04:17.227 [error] Sending find_sub_aq batch [] 
05:04:17.227 [error] batched message propagation "2020-08-06T05:04:17.227" 
05:04:20.851 [error] C1 propagation "2020-08-06T05:04:20.851" 
05:04:27.228 [error] Sending find_sub batch [] 
05:04:27.228 [error] Sending find_sub_aq batch [] 
05:04:27.228 [error] batched message propagation "2020-08-06T05:04:27.228" 
05:04:27.853 [error] C1 propagation "2020-08-06T05:04:27.853" 
05:04:34.854 [error] C1 propagation "2020-08-06T05:04:34.854" 
05:04:37.230 [error] Sending find_sub batch [] 
05:04:37.230 [error] Sending find_sub_aq batch [] 
05:04:37.230 [error] batched message propagation "2020-08-06T05:04:37.230" 
05:04:41.856 [error] C1 propagation "2020-08-06T05:04:41.856" 
