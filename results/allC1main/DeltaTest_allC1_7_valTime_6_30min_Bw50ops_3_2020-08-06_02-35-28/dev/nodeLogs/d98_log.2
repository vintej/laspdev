

root@csst-06:/home/ubuntu/laspdev# 
root@csst-06:/home/ubuntu/laspdev# python /home/ubuntu/laspdev/utility/setup_laspp.py d98
d98
ip:19.0.0.18
node:h
root@d98:/# [Kroot@d98:/# service vnstat start
[....] Starting vnStat daemon: vnstatd[?25l7[1G[[32m ok [39;49m8[?12l[?25h.
root@d98:/# sysctl -w net.ipv4.ip_forward=0
net.ipv4.ip_forward = 0
root@d98:/# vnstat -u -i d98-eth0
Error: Unable to read database "/var/lib/vnstat/d98-eth0": No such file or directory
Info: -> A new database has been created.
root@d98:/# vnstat -u
root@d98:/# vnstat

                      rx      /      tx      /     total    /   estimated
 eth0:
       Jul '20      4.00 GiB  /       7 KiB  /    4.00 GiB
       Aug '20         0 KiB  /       0 KiB  /       0 KiB  /       0 KiB
      07/06/20      4.00 GiB  /       0 KiB  /    4.00 GiB
         today         0 KiB  /       0 KiB  /       0 KiB  /      --    

 d98-eth0: Not enough data available yet.
root@d98:/# export PEER_SERVICE=partisan_hyparview_peer_service_manager
root@d98:/# export RATE_CLASS=c1
root@d98:/# export RATE_C1=7000
root@d98:/# export RATE_C2=40000
root@d98:/# export RATE_C3=70000
root@d98:/# export DELTA_INTERVAL=7000
root@d98:/# export PROPAGATE_ON_UPDATE=false
root@d98:/# export MAX_ACTIVE_SIZE=50
root@d98:/# cd /opt/lasp
root@d98:/opt/lasp# epmd -daemon
root@d98:/opt/lasp# rebar3 shell --name h@19.0.0.18
[0;32m===> Verifying dependencies...
[0m[0;32m===> Compiling lasp
[0mErlang/OTP 19 [erts-8.3] [source] [64-bit] [smp:24:24] [ds:24:24:10] [async-threads:0] [hipe] [kernel-poll:false]

Eshell V8.3  (abort with ^G)
(h@19.0.0.18)1> [0;35m===> The rebar3 shell is a development tool; to deploy applications in production, consider using releases (http://www.rebar3.org/docs/releases)
[0m03:54:05.336 [info] Application lager started on node 'h@19.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,sasl_safe_sup}
             started: [{pid,<0.253.0>},
                       {id,alarm_handler},
                       {mfargs,{alarm_handler,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,2000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,sasl_sup}
             started: [{pid,<0.252.0>},
                       {id,sasl_safe_sup},
                       {mfargs,
                           {supervisor,start_link,
                               [{local,sasl_safe_sup},sasl,safe]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,sasl_sup}
             started: [{pid,<0.254.0>},
                       {id,release_handler},
                       {mfargs,{release_handler,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,2000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: sasl
          started_at: 'h@19.0.0.18'
03:54:05.504 [info] Application sasl started on node 'h@19.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: lasp_support
          started_at: 'h@19.0.0.18'
03:54:05.505 [info] Application lasp_support started on node 'h@19.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: acceptor_pool
          started_at: 'h@19.0.0.18'
03:54:05.506 [info] Application acceptor_pool started on node 'h@19.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: quickrand
          started_at: 'h@19.0.0.18'
03:54:05.506 [info] Application quickrand started on node 'h@19.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
         application: uuid
          started_at: 'h@19.0.0.18'
03:54:05.507 [info] Application uuid started on node 'h@19.0.0.18'
03:54:05.600 [info] Using node name: 'h@19.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,kernel_safe_sup}
             started: [{pid,<0.266.0>},
                       {id,timer_server},
                       {mfargs,{timer,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,1000},
                       {child_type,worker}]
03:54:05.630 [info] Resolving "19.0.0.18"...

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,inet_gethost_native_sup}
             started: [{pid,<0.268.0>},{mfa,{inet_gethost_native,init,[[]]}}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:05 ===
          supervisor: {local,kernel_safe_sup}
             started: [{pid,<0.267.0>},
                       {id,inet_gethost_native_sup},
                       {mfargs,{inet_gethost_native,start_link,[]}},
                       {restart_type,temporary},
                       {shutdown,1000},
                       {child_type,worker}]
03:54:05.663 [info] Resolved "h@19.0.0.18" to {19,0,0,18}
03:54:05.663 [info] Resolved "19.0.0.18" to {19,0,0,18}
03:54:06.030 [info] Partisan listening on {19,0,0,18}:38415 listen_addrs: [#{ip => {19,0,0,18},port => 38415}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.313.0>},
                       {id,partisan_rpc_backend},
                       {mfargs,{partisan_rpc_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.314.0>},
                       {id,partisan_acknowledgement_backend},
                       {mfargs,
                           {partisan_acknowledgement_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:06.165 [info] Not using container orchestration; disabling.

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.315.0>},
                       {id,partisan_orchestration_backend},
                       {mfargs,{partisan_orchestration_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:06.326 [info] node 'h@19.0.0.18' choosing random seed: {48488742,-576460744319791035,-576460752303423422}

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.316.0>},
                       {id,partisan_hyparview_peer_service_manager},
                       {mfargs,
                           {partisan_hyparview_peer_service_manager,
                               start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.317.0>},
                       {id,partisan_peer_service_events},
                       {mfargs,{partisan_peer_service_events,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:06.374 [info] node 'h@19.0.0.18' choosing random seed: {48488742,-576460744319791035,-576460752303423422}

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.318.0>},
                       {id,partisan_plumtree_backend},
                       {mfargs,{partisan_plumtree_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.319.0>},
                       {id,partisan_plumtree_broadcast},
                       {mfargs,{partisan_plumtree_broadcast,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.320.0>},
                       {id,partisan_monitor},
                       {mfargs,{partisan_monitor,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_pool_sup}
             started: [{pid,<0.322.0>},
                       {id,partisan_pool},
                       {mfargs,{partisan_pool,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_pool_sup}
             started: [{pid,<0.323.0>},
                       {id,{partisan_socket,{19,0,0,18},38415}},
                       {mfargs,
                           {partisan_socket,start_link,[{19,0,0,18},38415]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.321.0>},
                       {id,partisan_pool_sup},
                       {mfargs,{partisan_pool_sup,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,20000},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
         application: partisan
          started_at: 'h@19.0.0.18'
03:54:06.701 [info] Application partisan started on node 'h@19.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
          supervisor: {local,plumtree_sup}
             started: [{pid,<0.338.0>},
                       {id,plumtree_broadcast},
                       {mfargs,{plumtree_broadcast,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
         application: plumtree
          started_at: 'h@19.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::03:54:06 ===
         application: gen_fsm_compat
          started_at: 'h@19.0.0.18'
03:54:06.767 [info] Application plumtree started on node 'h@19.0.0.18'
03:54:06.767 [info] Application gen_fsm_compat started on node 'h@19.0.0.18'
03:54:06.826 [info] Setting jitter: false
03:54:06.874 [info] Setting jitter percent: 1
03:54:06.886 [info] Setting event interval: 0
03:54:06.915 [info] Setting max events: 1000
03:54:06.918 [info] Setting extended logging: false
03:54:06.923 [info] Setting mailbox logging: false
03:54:06.930 [info] Setting operation mode: delta_based
03:54:06.932 [info] Setting set type: orset
03:54:06.938 [info] Setting broadcast: false
03:54:07.042 [info] Membership: false
03:54:07.048 [info] Workflow: false
03:54:07.058 [info] AdClientEnabled: false
03:54:07.072 [info] AdServerEnabled: false
03:54:07.076 [info] TournClientEnabled: false
03:54:07.090 [info] TournServerEnabled: false
03:54:07.092 [info] ThroughputType: gset
03:54:07.097 [info] ThroughputClientEnabled: false
03:54:07.105 [info] ThroughputServerEnabled: false
03:54:07.107 [info] DivergenceType: gcounter
03:54:07.110 [info] DivergenceClientEnabled: false
03:54:07.115 [info] DivergenceServerEnabled: false

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.385.0>},
                       {id,lasp_unique},
                       {mfargs,{lasp_unique,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.386.0>},
                       {id,lasp_plumtree_backend},
                       {mfargs,{lasp_plumtree_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.387.0>},
                       {id,lasp_plumtree_memory_report},
                       {mfargs,{lasp_plumtree_memory_report,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.388.0>},
                       {id,lasp_memory_utilization_report},
                       {mfargs,{lasp_memory_utilization_report,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:07.472 [info] Backend initialized with pid: <0.393.0>
03:54:07.479 [info] Backend lasp_ets_storage_backend initialized: <0.393.0>

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.389.0>},
                       {id,lasp_distribution_backend},
                       {mfargs,{lasp_distribution_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
03:54:07.527 [error] Rate Propagations c1: "7000" c2:"40000" c3:"70000" 

=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.395.0>},
                       {id,lasp_process_sup},
                       {mfargs,{lasp_process_sup,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,supervisor}]
[0;32m===> Booted types
[0m
=PROGRESS REPORT==== 6-Aug-2020::03:54:07 ===
         application: lasp
          started_at: 'h@19.0.0.18'
[0;32m===> Booted gen_flow
[0m[0;32m===> Booted syntax_tools
[0m[0;32m===> Booted compiler
[0m[0;32m===> Booted goldrush
[0m[0;32m===> Booted lager
[0m[0;32m===> Booted sasl
[0m[0;32m===> Booted lasp_support
[0m[0;32m===> Booted acceptor_pool
[0m[0;32m===> Booted quickrand
[0m[0;32m===> Booted uuid
[0m[0;32m===> Booted partisan
[0m[0;32m===> Booted plumtree
[0m03:54:07.528 [error] C1 propagation "2020-08-06T03:54:07.528" 
[0;32m===> Booted gen_fsm_compat
[0m[0;32m===> Booted lasp
[0m03:54:07.529 [error] C2 propagation "2020-08-06T03:54:07.529" 
03:54:07.529 [error] C3 propagation "2020-08-06T03:54:07.529" 
03:54:07.529 [error] batched message propagation "2020-08-06T03:54:07.529" 
03:54:07.561 [info] Application lasp started on node 'h@19.0.0.18'

(h@19.0.0.18)1> erlang:set_cookie(node(),'RPJVCXYDYULBNZFEFPHJ').
true
(h@19.0.0.18)2> application:get_env(partisan, max_active_size).
{ok,50}
(h@19.0.0.18)3> application:get_env(partisan, max_passive_size).
{ok,10}
(h@19.0.0.18)4> application:get_env(partisan, min_active_size).
{ok,9}
(h@19.0.0.18)5> lasp_config:get(delta_interval, 7500).
7000
(h@19.0.0.18)6> partisan_config:set(passive_view_shuffle_period, 1000000000).
ok
(h@19.0.0.18)7> partisan_config:get(passive_view_shuffle_period).
1000000000
(h@19.0.0.18)8> )8> 03:54:12.545 [error] Id is not get_connections(): [] 
03:54:12.545 [error] Requesting c1 sub ~n
03:54:12.545 [error] Forwarding Req Id "h@19.0.0.18c1" to Peers RcvHop:0 IncHop:1 
03:54:14.530 [error] C1 propagation "2020-08-06T03:54:14.530" 
03:54:17.531 [error] Sending find_sub batch [] 
03:54:17.531 [error] Sending find_sub_aq batch [] 
03:54:17.531 [error] batched message propagation "2020-08-06T03:54:17.531" 
03:54:21.532 [error] C1 propagation "2020-08-06T03:54:21.532" 
03:54:27.532 [error] Sending find_sub batch [] 
03:54:27.532 [error] Sending find_sub_aq batch [] 
03:54:27.532 [error] batched message propagation "2020-08-06T03:54:27.532" 
03:54:28.534 [error] C1 propagation "2020-08-06T03:54:28.534" 
03:54:35.535 [error] C1 propagation "2020-08-06T03:54:35.535" 
03:54:37.534 [error] Sending find_sub batch [] 
03:54:37.534 [error] Sending find_sub_aq batch [] 
03:54:37.534 [error] batched message propagation "2020-08-06T03:54:37.534" 
03:54:42.536 [error] C1 propagation "2020-08-06T03:54:42.536" 
03:54:47.530 [error] C2 propagation "2020-08-06T03:54:47.530" 
03:54:47.536 [error] Sending find_sub batch [] 
03:54:47.536 [error] Sending find_sub_aq batch [] 
03:54:47.536 [error] batched message propagation "2020-08-06T03:54:47.536" 
03:54:49.537 [error] C1 propagation "2020-08-06T03:54:49.537" 
03:54:56.539 [error] C1 propagation "2020-08-06T03:54:56.539" 
03:54:57.538 [error] Sending find_sub batch [] 
03:54:57.538 [error] Sending find_sub_aq batch [] 
03:54:57.538 [error] batched message propagation "2020-08-06T03:54:57.538" 
03:55:03.540 [error] C1 propagation "2020-08-06T03:55:03.540" 
03:55:07.540 [error] Sending find_sub batch [] 
03:55:07.540 [error] Sending find_sub_aq batch [] 
03:55:07.540 [error] batched message propagation "2020-08-06T03:55:07.540" 
03:55:10.541 [error] C1 propagation "2020-08-06T03:55:10.541" 
03:55:17.531 [error] C3 propagation "2020-08-06T03:55:17.531" 
03:55:17.542 [error] Sending find_sub batch [] 
03:55:17.542 [error] Sending find_sub_aq batch [] 
03:55:17.542 [error] batched message propagation "2020-08-06T03:55:17.542" 
03:55:17.543 [error] C1 propagation "2020-08-06T03:55:17.543" 
03:55:24.545 [error] C1 propagation "2020-08-06T03:55:24.545" 
03:55:27.531 [error] C2 propagation "2020-08-06T03:55:27.531" 
03:55:27.585 [error] Sending find_sub batch [] 
03:55:27.585 [error] Sending find_sub_aq batch [] 
03:55:27.585 [error] batched message propagation "2020-08-06T03:55:27.585" 
03:55:31.546 [error] C1 propagation "2020-08-06T03:55:31.546" 
03:55:37.587 [error] Sending find_sub batch [] 
03:55:37.587 [error] Sending find_sub_aq batch [] 
03:55:37.587 [error] batched message propagation "2020-08-06T03:55:37.587" 
03:55:38.548 [error] C1 propagation "2020-08-06T03:55:38.548" 
03:55:45.550 [error] C1 propagation "2020-08-06T03:55:45.550" 
lasp_peer_service:join('a@19.0.0.11').
03:55:47.589 [error] Sending find_sub batch [] 
03:55:47.589 [error] Sending find_sub_aq batch [] 
03:55:47.589 [error] batched message propagation "2020-08-06T03:55:47.589" 
ok
(h@19.0.0.18)9> lasp_peer_service:members().
{ok,['h@19.0.0.18','a@19.0.0.11']}
(h@19.0.0.18)10> 03:55:52.551 [error] C1 propagation "2020-08-06T03:55:52.551" 
03:55:53.667 [error] Sending rate "c1" to 'a@19.0.0.11' 
03:55:54.247 [error] LASPVIN found the peer at "2020-08-06T03:55:54.247" for ID: "h@19.0.0.18c1" ToNode: 'a@19.0.0.11' Via:'h@19.0.0.18' 
03:55:54.266 [error] Path ToNode:'a@19.0.0.11' does not exists in find_sub_aq
03:55:54.266 [error] ToNode must be a peer 'a@19.0.0.11' as From is self for Id "h@19.0.0.18c1" 
03:55:54.266 [error] Sending Subscription to 'a@19.0.0.11' case4 
03:55:54.302 [error] Rate_subscribe_ack received from 'a@19.0.0.11' for rate "c1" 
03:55:57.591 [error] Sending find_sub batch [] 
03:55:57.591 [error] Sending find_sub_aq batch [] 
03:55:57.591 [error] batched message propagation "2020-08-06T03:55:57.591" 
03:55:59.552 [error] C1 propagation "2020-08-06T03:55:59.552" 
03:56:06.553 [error] C1 propagation "2020-08-06T03:56:06.553" 
lasp_delta_based_synchronization_backend:get_members(peer_rates).
[{'a@19.0.0.11',"c1"},
 {"self_rate","c1"},
 {"subscription",'a@19.0.0.11'}]
(h@19.0.0.18)11> 03:56:07.532 [error] C2 propagation "2020-08-06T03:56:07.532" 
03:56:07.606 [error] Sending find_sub batch [] 
03:56:07.606 [error] Sending find_sub_aq batch [] 
03:56:07.606 [error] batched message propagation "2020-08-06T03:56:07.606" 
03:56:13.555 [error] C1 propagation "2020-08-06T03:56:13.555" 
03:56:17.608 [error] Sending find_sub batch [] 
03:56:17.608 [error] Sending find_sub_aq batch [] 
03:56:17.608 [error] batched message propagation "2020-08-06T03:56:17.608" 
03:56:20.557 [error] C1 propagation "2020-08-06T03:56:20.557" 
03:56:27.533 [error] C3 propagation "2020-08-06T03:56:27.533" 
03:56:27.559 [error] C1 propagation "2020-08-06T03:56:27.559" 
03:56:27.609 [error] Sending find_sub batch [] 
03:56:27.609 [error] Sending find_sub_aq batch [] 
03:56:27.609 [error] batched message propagation "2020-08-06T03:56:27.609" 
03:56:34.560 [error] C1 propagation "2020-08-06T03:56:34.560" 
03:56:37.611 [error] Sending find_sub batch [] 
03:56:37.611 [error] Sending find_sub_aq batch [] 
03:56:37.611 [error] batched message propagation "2020-08-06T03:56:37.611" 
03:56:41.562 [error] C1 propagation "2020-08-06T03:56:41.562" 
03:56:47.534 [error] C2 propagation "2020-08-06T03:56:47.534" 
03:56:47.613 [error] Sending find_sub batch [] 
03:56:47.613 [error] Sending find_sub_aq batch [] 
03:56:47.613 [error] batched message propagation "2020-08-06T03:56:47.613" 
03:56:48.563 [error] C1 propagation "2020-08-06T03:56:48.563" 
03:56:55.565 [error] C1 propagation "2020-08-06T03:56:55.565" 
03:56:57.615 [error] Sending find_sub batch [] 
03:56:57.615 [error] Sending find_sub_aq batch [] 
03:56:57.615 [error] batched message propagation "2020-08-06T03:56:57.615" 
03:57:02.567 [error] C1 propagation "2020-08-06T03:57:02.567" 
03:57:07.617 [error] Sending find_sub batch [] 
03:57:07.617 [error] Sending find_sub_aq batch [] 
03:57:07.617 [error] batched message propagation "2020-08-06T03:57:07.617" 
03:57:09.568 [error] C1 propagation "2020-08-06T03:57:09.568" 
03:57:16.569 [error] C1 propagation "2020-08-06T03:57:16.569" 
03:57:17.619 [error] Sending find_sub batch [] 
03:57:17.619 [error] Sending find_sub_aq batch [] 
03:57:17.619 [error] batched message propagation "2020-08-06T03:57:17.619" 
03:57:23.570 [error] C1 propagation "2020-08-06T03:57:23.570" 
03:57:27.536 [error] C2 propagation "2020-08-06T03:57:27.536" 
03:57:27.621 [error] Sending find_sub batch [] 
03:57:27.621 [error] Sending find_sub_aq batch [] 
03:57:27.621 [error] batched message propagation "2020-08-06T03:57:27.621" 
03:57:30.571 [error] C1 propagation "2020-08-06T03:57:30.571" 
03:57:37.534 [error] C3 propagation "2020-08-06T03:57:37.534" 
03:57:37.573 [error] C1 propagation "2020-08-06T03:57:37.573" 
03:57:37.623 [error] Sending find_sub batch [] 
03:57:37.623 [error] Sending find_sub_aq batch [] 
03:57:37.623 [error] batched message propagation "2020-08-06T03:57:37.623" 
03:57:44.574 [error] C1 propagation "2020-08-06T03:57:44.574" 
03:57:47.625 [error] Sending find_sub batch [] 
03:57:47.625 [error] Sending find_sub_aq batch [] 
03:57:47.625 [error] batched message propagation "2020-08-06T03:57:47.625" 
03:57:51.575 [error] C1 propagation "2020-08-06T03:57:51.575" 
03:57:57.627 [error] Sending find_sub batch [] 
03:57:57.627 [error] Sending find_sub_aq batch [] 
03:57:57.627 [error] batched message propagation "2020-08-06T03:57:57.627" 
03:57:58.576 [error] C1 propagation "2020-08-06T03:57:58.576" 
03:58:05.577 [error] C1 propagation "2020-08-06T03:58:05.577" 
03:58:07.538 [error] C2 propagation "2020-08-06T03:58:07.538" 
03:58:07.629 [error] Sending find_sub batch [] 
03:58:07.629 [error] Sending find_sub_aq batch [] 
03:58:07.629 [error] batched message propagation "2020-08-06T03:58:07.629" 
03:58:12.578 [error] C1 propagation "2020-08-06T03:58:12.578" 
03:58:17.631 [error] Sending find_sub batch [] 
03:58:17.631 [error] Sending find_sub_aq batch [] 
03:58:17.631 [error] batched message propagation "2020-08-06T03:58:17.631" 
03:58:19.579 [error] C1 propagation "2020-08-06T03:58:19.579" 
03:58:26.581 [error] C1 propagation "2020-08-06T03:58:26.581" 
03:58:27.633 [error] Sending find_sub batch [] 
03:58:27.633 [error] Sending find_sub_aq batch [] 
03:58:27.633 [error] batched message propagation "2020-08-06T03:58:27.633" 
03:58:33.583 [error] C1 propagation "2020-08-06T03:58:33.583" 
03:58:37.635 [error] Sending find_sub batch [] 
03:58:37.635 [error] Sending find_sub_aq batch [] 
03:58:37.635 [error] batched message propagation "2020-08-06T03:58:37.635" 
03:58:40.585 [error] C1 propagation "2020-08-06T03:58:40.585" 
03:58:47.535 [error] C3 propagation "2020-08-06T03:58:47.535" 
03:58:47.539 [error] C2 propagation "2020-08-06T03:58:47.539" 
03:58:47.586 [error] C1 propagation "2020-08-06T03:58:47.586" 
03:58:47.636 [error] Sending find_sub batch [] 
03:58:47.636 [error] Sending find_sub_aq batch [] 
03:58:47.636 [error] batched message propagation "2020-08-06T03:58:47.636" 
03:58:54.587 [error] C1 propagation "2020-08-06T03:58:54.587" 
03:58:57.638 [error] Sending find_sub batch [] 
03:58:57.638 [error] Sending find_sub_aq batch [] 
03:58:57.638 [error] batched message propagation "2020-08-06T03:58:57.638" 
03:59:01.588 [error] C1 propagation "2020-08-06T03:59:01.588" 
03:59:07.641 [error] Sending find_sub batch [] 
03:59:07.641 [error] Sending find_sub_aq batch [] 
03:59:07.642 [error] batched message propagation "2020-08-06T03:59:07.641" 
03:59:08.590 [error] C1 propagation "2020-08-06T03:59:08.590" 
03:59:15.592 [error] C1 propagation "2020-08-06T03:59:15.592" 
03:59:17.643 [error] Sending find_sub batch [] 
03:59:17.643 [error] Sending find_sub_aq batch [] 
03:59:17.643 [error] batched message propagation "2020-08-06T03:59:17.643" 
03:59:22.593 [error] C1 propagation "2020-08-06T03:59:22.593" 
03:59:27.540 [error] C2 propagation "2020-08-06T03:59:27.540" 
03:59:27.645 [error] Sending find_sub batch [] 
03:59:27.645 [error] Sending find_sub_aq batch [] 
03:59:27.645 [error] batched message propagation "2020-08-06T03:59:27.645" 
03:59:29.595 [error] C1 propagation "2020-08-06T03:59:29.595" 
03:59:36.596 [error] C1 propagation "2020-08-06T03:59:36.596" 
03:59:37.647 [error] Sending find_sub batch [] 
03:59:37.647 [error] Sending find_sub_aq batch [] 
03:59:37.647 [error] batched message propagation "2020-08-06T03:59:37.647" 
03:59:43.597 [error] C1 propagation "2020-08-06T03:59:43.597" 
03:59:47.649 [error] Sending find_sub batch [] 
03:59:47.649 [error] Sending find_sub_aq batch [] 
03:59:47.649 [error] batched message propagation "2020-08-06T03:59:47.649" 
03:59:50.598 [error] C1 propagation "2020-08-06T03:59:50.598" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)12> AwMapRes.
[]
(h@19.0.0.18)13> f(AwMapRes).
ok
(h@19.0.0.18)14> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T03:59:53.305"
(h@19.0.0.18)15> 03:59:57.537 [error] C3 propagation "2020-08-06T03:59:57.537" 
03:59:57.600 [error] C1 propagation "2020-08-06T03:59:57.600" 
03:59:57.651 [error] Sending find_sub batch [] 
03:59:57.651 [error] Sending find_sub_aq batch [] 
03:59:57.651 [error] batched message propagation "2020-08-06T03:59:57.651" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)16> AwMapRes.
[]
(h@19.0.0.18)17> f(AwMapRes).
ok
(h@19.0.0.18)18> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:01.327"
(h@19.0.0.18)19> 04:00:04.601 [error] C1 propagation "2020-08-06T04:00:04.601" 
04:00:07.541 [error] C2 propagation "2020-08-06T04:00:07.541" 
04:00:07.653 [error] Sending find_sub batch [] 
04:00:07.653 [error] Sending find_sub_aq batch [] 
04:00:07.653 [error] batched message propagation "2020-08-06T04:00:07.653" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)20> AwMapRes.
[]
(h@19.0.0.18)21> f(AwMapRes).
ok
(h@19.0.0.18)22> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:09.367"
(h@19.0.0.18)23> 04:00:11.603 [error] C1 propagation "2020-08-06T04:00:11.603" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)24> AwMapRes.
[]
(h@19.0.0.18)25> f(AwMapRes).
ok
(h@19.0.0.18)26> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:17.399"
(h@19.0.0.18)27> 04:00:17.655 [error] Sending find_sub batch [] 
04:00:17.655 [error] Sending find_sub_aq batch [] 
04:00:17.655 [error] batched message propagation "2020-08-06T04:00:17.655" 
04:00:18.604 [error] C1 propagation "2020-08-06T04:00:18.604" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)28> AwMapRes.
[]
(h@19.0.0.18)29> f(AwMapRes).
ok
(h@19.0.0.18)30> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:25.449"
(h@19.0.0.18)31> 04:00:25.606 [error] C1 propagation "2020-08-06T04:00:25.606" 
04:00:27.657 [error] Sending find_sub batch [] 
04:00:27.657 [error] Sending find_sub_aq batch [] 
04:00:27.657 [error] batched message propagation "2020-08-06T04:00:27.657" 
04:00:32.608 [error] C1 propagation "2020-08-06T04:00:32.608" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)32> AwMapRes.
[]
(h@19.0.0.18)33> f(AwMapRes).
ok
(h@19.0.0.18)34> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:33.487"
(h@19.0.0.18)35> 04:00:37.659 [error] Sending find_sub batch [] 
04:00:37.659 [error] Sending find_sub_aq batch [] 
04:00:37.659 [error] batched message propagation "2020-08-06T04:00:37.659" 
04:00:39.610 [error] C1 propagation "2020-08-06T04:00:39.610" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)36> AwMapRes.
[]
(h@19.0.0.18)37> f(AwMapRes).
ok
(h@19.0.0.18)38> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:41.525"
(h@19.0.0.18)39> 04:00:46.611 [error] C1 propagation "2020-08-06T04:00:46.611" 
04:00:47.542 [error] C2 propagation "2020-08-06T04:00:47.542" 
04:00:47.660 [error] Sending find_sub batch [] 
04:00:47.660 [error] Sending find_sub_aq batch [] 
04:00:47.660 [error] batched message propagation "2020-08-06T04:00:47.660" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)40> AwMapRes.
[]
(h@19.0.0.18)41> f(AwMapRes).
ok
(h@19.0.0.18)42> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:49.561"
(h@19.0.0.18)43> 04:00:53.612 [error] C1 propagation "2020-08-06T04:00:53.612" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)44> AwMapRes.
[]
(h@19.0.0.18)45> f(AwMapRes).
ok
(h@19.0.0.18)46> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:00:57.594"
(h@19.0.0.18)47> 04:00:57.662 [error] Sending find_sub batch [] 
04:00:57.662 [error] Sending find_sub_aq batch [] 
04:00:57.662 [error] batched message propagation "2020-08-06T04:00:57.662" 
04:01:00.614 [error] C1 propagation "2020-08-06T04:01:00.614" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)48> AwMapRes.
[]
(h@19.0.0.18)49> f(AwMapRes).
ok
(h@19.0.0.18)50> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:05.634"
(h@19.0.0.18)51> 04:01:07.539 [error] C3 propagation "2020-08-06T04:01:07.539" 
04:01:07.616 [error] C1 propagation "2020-08-06T04:01:07.616" 
04:01:07.664 [error] Sending find_sub batch [] 
04:01:07.664 [error] Sending find_sub_aq batch [] 
04:01:07.664 [error] batched message propagation "2020-08-06T04:01:07.664" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)52> AwMapRes.
[]
(h@19.0.0.18)53> f(AwMapRes).
ok
(h@19.0.0.18)54> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:13.668"
(h@19.0.0.18)55> 04:01:14.617 [error] C1 propagation "2020-08-06T04:01:14.617" 
04:01:17.666 [error] Sending find_sub batch [] 
04:01:17.666 [error] Sending find_sub_aq batch [] 
04:01:17.666 [error] batched message propagation "2020-08-06T04:01:17.666" 
04:01:21.618 [error] C1 propagation "2020-08-06T04:01:21.618" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)56> AwMapRes.
[]
(h@19.0.0.18)57> f(AwMapRes).
ok
(h@19.0.0.18)58> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:21.706"
(h@19.0.0.18)59> 04:01:27.543 [error] C2 propagation "2020-08-06T04:01:27.543" 
04:01:27.668 [error] Sending find_sub batch [] 
04:01:27.668 [error] Sending find_sub_aq batch [] 
04:01:27.668 [error] batched message propagation "2020-08-06T04:01:27.668" 
04:01:28.619 [error] C1 propagation "2020-08-06T04:01:28.619" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)60> AwMapRes.
[]
(h@19.0.0.18)61> f(AwMapRes).
ok
(h@19.0.0.18)62> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:29.742"
(h@19.0.0.18)63> 04:01:35.620 [error] C1 propagation "2020-08-06T04:01:35.620" 
04:01:37.670 [error] Sending find_sub batch [] 
04:01:37.670 [error] Sending find_sub_aq batch [] 
04:01:37.670 [error] batched message propagation "2020-08-06T04:01:37.670" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)64> AwMapRes.
[]
(h@19.0.0.18)65> f(AwMapRes).
ok
(h@19.0.0.18)66> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:37.778"
(h@19.0.0.18)67> 04:01:42.622 [error] C1 propagation "2020-08-06T04:01:42.622" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)68> AwMapRes.
[]
(h@19.0.0.18)69> f(AwMapRes).
ok
(h@19.0.0.18)70> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:45.820"
(h@19.0.0.18)71> 04:01:47.672 [error] Sending find_sub batch [] 
04:01:47.672 [error] Sending find_sub_aq batch [] 
04:01:47.672 [error] batched message propagation "2020-08-06T04:01:47.672" 
04:01:49.623 [error] C1 propagation "2020-08-06T04:01:49.623" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)72> AwMapRes.
[]
(h@19.0.0.18)73> f(AwMapRes).
ok
(h@19.0.0.18)74> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:01:53.857"
(h@19.0.0.18)75> 04:01:56.624 [error] C1 propagation "2020-08-06T04:01:56.624" 
04:01:57.674 [error] Sending find_sub batch [] 
04:01:57.674 [error] Sending find_sub_aq batch [] 
04:01:57.674 [error] batched message propagation "2020-08-06T04:01:57.674" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)76> AwMapRes.
[]
(h@19.0.0.18)77> f(AwMapRes).
ok
(h@19.0.0.18)78> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:01.898"
(h@19.0.0.18)79> 04:02:03.625 [error] C1 propagation "2020-08-06T04:02:03.625" 
04:02:07.544 [error] C2 propagation "2020-08-06T04:02:07.544" 
04:02:07.676 [error] Sending find_sub batch [] 
04:02:07.676 [error] Sending find_sub_aq batch [] 
04:02:07.676 [error] batched message propagation "2020-08-06T04:02:07.676" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)80> AwMapRes.
[]
(h@19.0.0.18)81> f(AwMapRes).
ok
(h@19.0.0.18)82> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:09.936"
(h@19.0.0.18)83> 04:02:10.626 [error] C1 propagation "2020-08-06T04:02:10.626" 
04:02:17.541 [error] C3 propagation "2020-08-06T04:02:17.541" 
04:02:17.627 [error] C1 propagation "2020-08-06T04:02:17.627" 
04:02:17.678 [error] Sending find_sub batch [] 
04:02:17.678 [error] Sending find_sub_aq batch [] 
04:02:17.678 [error] batched message propagation "2020-08-06T04:02:17.678" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@19.0.0.18)84> AwMapRes.
[]
(h@19.0.0.18)85> f(AwMapRes).
ok
(h@19.0.0.18)86> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:17.974"
(h@19.0.0.18)87> 04:02:24.155 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:02:24.155" Took=33937 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_01_50_311}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:02:24.155 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",0,0},{"delta_send",0,1},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",3,0},{"sub_cancel",0,0}] 
04:02:24.628 [error] C1 propagation "2020-08-06T04:02:24.628" 
04:02:24.628 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:02:24.628 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,2}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:1 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_01_50_311}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)88> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_01_50_311}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)89> f(AwMapRes).
ok
(h@19.0.0.18)90> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:26.170"
(h@19.0.0.18)91> 04:02:27.680 [error] Sending find_sub batch [] 
04:02:27.680 [error] Sending find_sub_aq batch [] 
04:02:27.680 [error] batched message propagation "2020-08-06T04:02:27.680" 
04:02:31.630 [error] C1 propagation "2020-08-06T04:02:31.630" 
04:02:31.630 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:02:31.630 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,2}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:1 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_01_50_311}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)92> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_01_50_311}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)93> f(AwMapRes).
ok
(h@19.0.0.18)94> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:34.604"
(h@19.0.0.18)95> 04:02:36.993 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:02:36.993" Took=32960 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_16_427}],[],[],[],[],[],[]}}}}] 
04:02:36.994 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",1,0},{"delta_send",2,2},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",6,0},{"sub_cancel",0,0}] 
04:02:37.017 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:02:37.174" Took=22692 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_02_22_447}],[],[],[],[],[],[],[],[],[]}}}}] 
04:02:37.017 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",2,1},{"delta_send",2,3},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",7,0},{"sub_cancel",0,0}] 
04:02:37.682 [error] Sending find_sub batch [] 
04:02:37.682 [error] Sending find_sub_aq batch [] 
04:02:37.682 [error] batched message propagation "2020-08-06T04:02:37.682" 
04:02:38.631 [error] C1 propagation "2020-08-06T04:02:38.631" 
04:02:38.631 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:02:38.631 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,4}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:3 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_02_22_447}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)96> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_02_22_447}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)97> f(AwMapRes).
ok
(h@19.0.0.18)98> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:42.993"
(h@19.0.0.18)99> 04:02:43.993 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:02:43.993" Took=34592 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_28_471}],[],[],[],[],[],[]}}}}] 
04:02:43.993 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",3,1},{"delta_send",3,4},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",9,0},{"sub_cancel",0,0}] 
04:02:45.633 [error] C1 propagation "2020-08-06T04:02:45.633" 
04:02:45.646 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:02:45.646 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,5}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:4 
04:02:47.545 [error] C2 propagation "2020-08-06T04:02:47.545" 
04:02:47.684 [error] Sending find_sub batch [] 
04:02:47.684 [error] Sending find_sub_aq batch [] 
04:02:47.684 [error] batched message propagation "2020-08-06T04:02:47.684" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_02_28_471}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)100> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_02_28_471}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)101> f(AwMapRes).
ok
(h@19.0.0.18)102> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:50.137"
(h@19.0.0.18)103> 04:02:50.995 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:02:50.994" Took=31330 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_40_511}],[],[]}}}}] 
04:02:50.995 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",4,4},{"delta_send",4,5},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",11,0},{"sub_cancel",0,0}] 
04:02:52.634 [error] C1 propagation "2020-08-06T04:02:52.634" 
04:02:52.674 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:02:52.674 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,6}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:5 
04:02:57.686 [error] Sending find_sub batch [] 
04:02:57.686 [error] Sending find_sub_aq batch [] 
04:02:57.686 [error] batched message propagation "2020-08-06T04:02:57.686" 
04:02:57.999 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:02:57.999" Took=35031 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_02_46_534}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:02:58.081 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",5,5},{"delta_send",5,6},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",13,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_02_46_534}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)104> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_02_46_534}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)105> f(AwMapRes).
ok
(h@19.0.0.18)106> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:02:58.176"
(h@19.0.0.18)107> 04:02:59.635 [error] C1 propagation "2020-08-06T04:02:59.635"  
04:02:59.647 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:02:59.647 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,7}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:6 
04:03:05.096 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:03:05.967" Took=25633 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_52_558}],[]}}}}] 
04:03:05.098 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",6,6},{"delta_send",6,7},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",15,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)108> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@19.0.0.18)109> f(AwMapRes).
ok
(h@19.0.0.18)110> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:06.212"
(h@19.0.0.18)111> 04:03:06.637 [error] C1 propagation "2020-08-06T04:03:06.637"  
04:03:06.656 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:03:06.656 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,8}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:7 
04:03:07.688 [error] Sending find_sub batch [] 
04:03:07.688 [error] Sending find_sub_aq batch [] 
04:03:07.688 [error] batched message propagation "2020-08-06T04:03:07.688" 
04:03:12.110 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:03:12.110" Took=33233 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_02_58_579}],[],[],[],[],[],[]}}}}] 
04:03:12.110 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",7,7},{"delta_send",7,8},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",17,0},{"sub_cancel",0,0}] 
04:03:13.638 [error] C1 propagation "2020-08-06T04:03:13.638" 
04:03:13.642 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:03:13.642 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,9}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:8 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_02_58_579}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)112> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_02_58_579}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)113> f(AwMapRes).
ok
(h@19.0.0.18)114> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:14.251"
(h@19.0.0.18)115> 04:03:17.690 [error] Sending find_sub batch [] 
04:03:17.690 [error] Sending find_sub_aq batch [] 
04:03:17.690 [error] batched message propagation "2020-08-06T04:03:17.690" 
04:03:19.105 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:03:19.105" Took=33182 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_03_04_599}],[],[],[],[],[],[]}}}}] 
04:03:19.106 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",8,8},{"delta_send",8,9},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",19,0},{"sub_cancel",0,0}] 
04:03:20.640 [error] C1 propagation "2020-08-06T04:03:20.640" 
04:03:20.651 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:03:20.652 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,10}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:9 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_03_04_599}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)116> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_03_04_599}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)117> f(AwMapRes).
ok
(h@19.0.0.18)118> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:22.291"
(h@19.0.0.18)119> 04:03:26.120 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:03:26.120" Took=47783 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_03_10_621}],[],[],[],[],[],[],[],[]}}}}] 
04:03:26.121 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",9,9},{"delta_send",9,10},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",21,0},{"sub_cancel",0,0}] 
04:03:27.543 [error] C3 propagation "2020-08-06T04:03:27.543" 
04:03:27.606 [error] C2 propagation "2020-08-06T04:03:27.606" 
04:03:27.663 [error] C1 propagation "2020-08-06T04:03:27.663" 
04:03:27.737 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:03:27.738 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,11}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:10 
04:03:27.769 [error] Sending find_sub batch [] 
04:03:27.769 [error] Sending find_sub_aq batch [] 
04:03:27.769 [error] batched message propagation "2020-08-06T04:03:27.769" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_03_10_621}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)120> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_03_10_621}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)121> f(AwMapRes).
ok
(h@19.0.0.18)122> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:30.334"
(h@19.0.0.18)123> 04:03:33.150 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:03:33.150" Took=30846 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_03_22_675}]}}}}] 
04:03:33.150 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",10,10},{"delta_send",10,11},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",23,0},{"sub_cancel",0,0}] 
04:03:34.665 [error] C1 propagation "2020-08-06T04:03:34.665" 
04:03:34.665 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:03:34.665 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,12}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:11 
04:03:37.771 [error] Sending find_sub batch [] 
04:03:37.771 [error] Sending find_sub_aq batch [] 
04:03:37.771 [error] batched message propagation "2020-08-06T04:03:37.771" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)124> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)125> f(AwMapRes).
ok
(h@19.0.0.18)126> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:38.380"
(h@19.0.0.18)127> 04:03:40.104 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:03:40.103" Took=24024 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_03_28_697}],[],[],[],[],[],[],[],[]}}}}] 
04:03:40.104 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",11,11},{"delta_send",11,12},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",25,0},{"sub_cancel",0,0}] 
04:03:41.666 [error] C1 propagation "2020-08-06T04:03:41.666" 
04:03:41.666 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:03:41.666 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,13}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:12 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_03_28_697}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)128> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_03_28_697}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)129> f(AwMapRes).
ok
(h@19.0.0.18)130> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:46.427"
(h@19.0.0.18)131> 04:03:47.118 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:03:47.118" Took=40196 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_03_34_718}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:03:47.118 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",12,12},{"delta_send",12,13},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",27,0},{"sub_cancel",0,0}] 
04:03:47.773 [error] Sending find_sub batch [] 
04:03:47.773 [error] Sending find_sub_aq batch [] 
04:03:47.773 [error] batched message propagation "2020-08-06T04:03:47.773" 
04:03:48.667 [error] C1 propagation "2020-08-06T04:03:48.667" 
04:03:48.712 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:03:48.712 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,14}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:13 
04:03:54.110 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:03:54.110" Took=31111 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_03_40_736}],[],[],[],[],[],[]}}}}] 
04:03:54.111 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",13,13},{"delta_send",13,14},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",29,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_03_40_736}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)132> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_03_40_736}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)133> f(AwMapRes).
ok
(h@19.0.0.18)134> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:03:54.467"
(h@19.0.0.18)135> 04:03:55.668 [error] C1 propagation "2020-08-06T04:03:55.668"  
04:03:55.712 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:03:55.745 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,15}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:14 
04:03:57.775 [error] Sending find_sub batch [] 
04:03:57.775 [error] Sending find_sub_aq batch [] 
04:03:57.775 [error] batched message propagation "2020-08-06T04:03:57.775" 
04:04:01.113 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:04:01.113" Took=30504 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_03_46_759}],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:01.114 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",14,14},{"delta_send",14,15},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",31,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_03_46_759}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)136> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_03_46_759}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)137> f(AwMapRes).
ok
(h@19.0.0.18)138> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:02.505"
(h@19.0.0.18)139> 04:04:02.670 [error] C1 propagation "2020-08-06T04:04:02.670"  
04:04:02.707 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:04:02.708 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,16}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:15 
04:04:07.607 [error] C2 propagation "2020-08-06T04:04:07.607" 
04:04:07.777 [error] Sending find_sub batch [] 
04:04:07.777 [error] Sending find_sub_aq batch [] 
04:04:07.777 [error] batched message propagation "2020-08-06T04:04:07.777" 
04:04:08.181 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:04:08.181" Took=23729 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_03_52_779}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:08.260 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",15,15},{"delta_send",15,16},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",33,0},{"sub_cancel",0,0}] 
04:04:09.671 [error] C1 propagation "2020-08-06T04:04:09.671" 
04:04:09.801 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:04:09.801 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,17}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:16 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_03_52_779}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)140> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_03_52_779}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)141> f(AwMapRes).
ok
(h@19.0.0.18)142> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:10.540"
(h@19.0.0.18)143> 04:04:15.115 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:04:15.115" Took=32889 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_04_04_823}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:15.115 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",16,16},{"delta_send",16,17},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",35,0},{"sub_cancel",0,0}] 
04:04:16.672 [error] C1 propagation "2020-08-06T04:04:16.672" 
04:04:16.690 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:04:16.691 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,18}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:17 
04:04:17.779 [error] Sending find_sub batch [] 
04:04:17.779 [error] Sending find_sub_aq batch [] 
04:04:17.779 [error] batched message propagation "2020-08-06T04:04:17.779" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_04_04_823}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)144> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_04_04_823}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)145> f(AwMapRes).
ok
(h@19.0.0.18)146> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:18.590"
(h@19.0.0.18)147> 04:04:22.119 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:04:22.118" Took=34733 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_04_10_847}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:22.119 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",17,17},{"delta_send",17,18},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",37,0},{"sub_cancel",0,0}] 
04:04:23.673 [error] C1 propagation "2020-08-06T04:04:23.673" 
04:04:23.681 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:04:23.730 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,19}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:18 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_04_10_847}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)148> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_04_10_847}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)149> f(AwMapRes).
ok
(h@19.0.0.18)150> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:26.633"
(h@19.0.0.18)151> 04:04:27.782 [error] Sending find_sub batch [] 
04:04:27.782 [error] Sending find_sub_aq batch [] 
04:04:27.782 [error] batched message propagation "2020-08-06T04:04:27.782" 
04:04:29.118 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:04:29.118" Took=31462 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_04_16_867}],[],[],[],[],[]}}}}] 
04:04:29.119 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",18,18},{"delta_send",18,19},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",39,0},{"sub_cancel",0,0}] 
04:04:30.675 [error] C1 propagation "2020-08-06T04:04:30.675" 
04:04:30.710 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:04:30.710 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,20}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:19 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_04_16_867}],
             [],[],[],...}}}}]}
(h@19.0.0.18)152> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_04_16_867}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)153> f(AwMapRes).
ok
(h@19.0.0.18)154> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:34.670"
(h@19.0.0.18)155> 04:04:36.122 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:04:36.122" Took=36084 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_04_22_887}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:36.122 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",19,19},{"delta_send",19,20},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",41,0},{"sub_cancel",0,0}] 
04:04:37.545 [error] C3 propagation "2020-08-06T04:04:37.545" 
04:04:37.676 [error] C1 propagation "2020-08-06T04:04:37.676" 
04:04:37.742 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:04:37.742 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,21}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:20 
04:04:37.851 [error] Sending find_sub batch [] 
04:04:37.851 [error] Sending find_sub_aq batch [] 
04:04:37.851 [error] batched message propagation "2020-08-06T04:04:37.851" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_04_22_887}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)156> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_04_22_887}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)157> f(AwMapRes).
ok
(h@19.0.0.18)158> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:42.708"
(h@19.0.0.18)159> 04:04:43.163 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:04:43.163" Took=29349 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_04_28_907}],[],[],[],[],[],[],[],[]}}}}] 
04:04:43.164 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",20,20},{"delta_send",20,21},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",43,0},{"sub_cancel",0,0}] 
04:04:44.677 [error] C1 propagation "2020-08-06T04:04:44.677" 
04:04:44.677 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:04:44.677 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,22}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:21 
04:04:47.609 [error] C2 propagation "2020-08-06T04:04:47.609" 
04:04:47.853 [error] Sending find_sub batch [] 
04:04:47.853 [error] Sending find_sub_aq batch [] 
04:04:47.853 [error] batched message propagation "2020-08-06T04:04:47.853" 
04:04:50.122 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:04:50.122" Took=32394 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_04_34_924}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:50.122 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",21,21},{"delta_send",21,22},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",45,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_04_34_924}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)160> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_04_34_924}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)161> f(AwMapRes).
ok
(h@19.0.0.18)162> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:50.743"
(h@19.0.0.18)163> 04:04:51.678 [error] C1 propagation "2020-08-06T04:04:51.678"  
04:04:51.678 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:04:51.678 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,23}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:22 
04:04:57.140 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:04:57.140" Took=46708 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_04_46_963}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:04:57.141 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",22,22},{"delta_send",22,23},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",47,0},{"sub_cancel",0,0}] 
04:04:57.855 [error] Sending find_sub batch [] 
04:04:57.855 [error] Sending find_sub_aq batch [] 
04:04:57.855 [error] batched message propagation "2020-08-06T04:04:57.855" 
04:04:58.679 [error] C1 propagation "2020-08-06T04:04:58.679" 
04:04:58.679 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_04_46_963}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)164> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_04_46_963}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)165> f(AwMapRes).
ok
(h@19.0.0.18)166> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:04:58.852"
(h@19.0.0.18)167> 04:04:58.679 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,24}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:23 
04:05:04.125 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:05:04.125" Took=32597 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_04_52_983}],[],[]}}}}] 
04:05:04.126 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",23,23},{"delta_send",23,24},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",49,0},{"sub_cancel",0,0}] 
04:05:05.680 [error] C1 propagation "2020-08-06T04:05:05.680" 
04:05:05.723 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:05:05.724 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,25}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:24 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@19.0.0.18)168> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_04_52_983}],
         [],[]}}}}]
(h@19.0.0.18)169> f(AwMapRes).
ok
(h@19.0.0.18)170> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:06.830"
(h@19.0.0.18)171> 04:05:07.857 [error] Sending find_sub batch [] 
04:05:07.857 [error] Sending find_sub_aq batch [] 
04:05:07.857 [error] batched message propagation "2020-08-06T04:05:07.857" 
04:05:11.114 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:05:11.114" Took=21001 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_04_59_005}],[],[],[],[],[],[]}}}}] 
04:05:11.115 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",24,24},{"delta_send",24,25},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",51,0},{"sub_cancel",0,0}] 
04:05:12.682 [error] C1 propagation "2020-08-06T04:05:12.682" 
04:05:12.682 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:05:12.682 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,26}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:25 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_04_59_005}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)172> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_04_59_005}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)173> f(AwMapRes).
ok
(h@19.0.0.18)174> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:14.873"
(h@19.0.0.18)175> 04:05:17.859 [error] Sending find_sub batch [] 
04:05:17.859 [error] Sending find_sub_aq batch [] 
04:05:17.859 [error] batched message propagation "2020-08-06T04:05:17.859" 
04:05:18.146 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:05:18.146" Took=50225 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_05_027}],[],[]}}}}] 
04:05:18.146 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",25,25},{"delta_send",25,26},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",53,0},{"sub_cancel",0,0}] 
04:05:19.684 [error] C1 propagation "2020-08-06T04:05:19.684" 
04:05:19.684 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:05:19.685 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,27}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:26 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@19.0.0.18)176> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_05_027}],
         [],[]}}}}]
(h@19.0.0.18)177> f(AwMapRes).
ok
(h@19.0.0.18)178> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:22.915"
(h@19.0.0.18)179> 04:05:25.128 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:05:25.128" Took=28029 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_11_051}],[],[],[],[],[]}}}}] 
04:05:25.128 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",26,26},{"delta_send",26,27},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",55,0},{"sub_cancel",0,0}] 
04:05:26.686 [error] C1 propagation "2020-08-06T04:05:26.686" 
04:05:26.686 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:05:26.686 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,28}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:27 
04:05:27.611 [error] C2 propagation "2020-08-06T04:05:27.611" 
04:05:27.861 [error] Sending find_sub batch [] 
04:05:27.861 [error] Sending find_sub_aq batch [] 
04:05:27.861 [error] batched message propagation "2020-08-06T04:05:27.861" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_05_11_051}],
             [],[],[],...}}}}]}
(h@19.0.0.18)180> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_11_051}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)181> f(AwMapRes).
ok
(h@19.0.0.18)182> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:30.955"
(h@19.0.0.18)183> 04:05:32.127 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:05:32.127" Took=27009 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_17_074}],[],[],[],[]}}}}] 
04:05:32.127 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",27,27},{"delta_send",27,28},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",57,0},{"sub_cancel",0,0}] 
04:05:33.688 [error] C1 propagation "2020-08-06T04:05:33.688" 
04:05:33.715 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:05:33.715 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,29}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:28 
04:05:37.863 [error] Sending find_sub batch [] 
04:05:37.863 [error] Sending find_sub_aq batch [] 
04:05:37.863 [error] batched message propagation "2020-08-06T04:05:37.863" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_05_17_074}],
             [],[],...}}}}]}
(h@19.0.0.18)184> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_17_074}],
         [],[],[],[]}}}}]
(h@19.0.0.18)185> f(AwMapRes).
ok
(h@19.0.0.18)186> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:38.999"
(h@19.0.0.18)187> 04:05:39.129 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:05:39.128" Took=31276 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_29_118}]}}}}] 
04:05:39.129 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",28,28},{"delta_send",28,29},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",59,0},{"sub_cancel",0,0}] 
04:05:40.690 [error] C1 propagation "2020-08-06T04:05:40.690" 
04:05:40.718 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:05:40.718 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,30}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:29 
04:05:46.141 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:05:46.141" Took=41671 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_05_35_139}],[],[],[],[],[],[],[],[],[]}}}}] 
04:05:46.141 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",29,29},{"delta_send",29,30},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",61,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_05_35_139}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)188> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_05_35_139}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)189> f(AwMapRes).
ok
(h@19.0.0.18)190> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:47.336"
(h@19.0.0.18)191> 04:05:47.547 [error] C3 propagation "2020-08-06T04:05:47.547"  
04:05:47.691 [error] C1 propagation "2020-08-06T04:05:47.691" 
04:05:47.798 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:05:47.799 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,31}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:30 
04:05:47.906 [error] Sending find_sub batch [] 
04:05:47.906 [error] Sending find_sub_aq batch [] 
04:05:47.906 [error] batched message propagation "2020-08-06T04:05:47.906" 
04:05:53.126 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:05:53.126" Took=23908 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_05_41_158}],[],[],[],[],[],[],[]}}}}] 
04:05:53.126 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",30,30},{"delta_send",30,31},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",63,0},{"sub_cancel",0,0}] 
04:05:54.693 [error] C1 propagation "2020-08-06T04:05:54.693" 
04:05:54.693 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:05:54.693 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,32}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:31 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_05_41_158}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)192> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_41_158}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)193> f(AwMapRes).
ok
(h@19.0.0.18)194> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:05:55.707"
(h@19.0.0.18)195> 04:05:57.909 [error] Sending find_sub batch [] 
04:05:57.910 [error] Sending find_sub_aq batch [] 
04:05:57.910 [error] batched message propagation "2020-08-06T04:05:57.910" 
04:06:00.184 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:06:00.184" Took=36841 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_05_47_179}],[],[],[],[],[],[],[],[],[]}}}}] 
04:06:00.184 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",31,31},{"delta_send",31,32},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",65,0},{"sub_cancel",0,0}] 
04:06:01.694 [error] C1 propagation "2020-08-06T04:06:01.694" 
04:06:01.739 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:06:01.739 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,33}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:32 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_05_47_179}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)196> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_05_47_179}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)197> f(AwMapRes).
ok
(h@19.0.0.18)198> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:03.112"
(h@19.0.0.18)199> 04:06:07.308 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:06:07.308" Took=31329 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_05_53_199}],[],[],[],[],[],[]}}}}] 
04:06:07.309 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",32,32},{"delta_send",32,33},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",67,0},{"sub_cancel",0,0}] 
04:06:07.613 [error] C2 propagation "2020-08-06T04:06:07.613" 
04:06:07.911 [error] Sending find_sub batch [] 
04:06:07.911 [error] Sending find_sub_aq batch [] 
04:06:07.911 [error] batched message propagation "2020-08-06T04:06:07.911" 
04:06:08.696 [error] C1 propagation "2020-08-06T04:06:08.696" 
04:06:08.723 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:06:08.724 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,34}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:33 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_05_53_199}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)200> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_05_53_199}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)201> f(AwMapRes).
ok
(h@19.0.0.18)202> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:11.158"
(h@19.0.0.18)203> 04:06:14.236 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:06:14.236" Took=36674 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_05_59_218}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:06:14.237 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",33,33},{"delta_send",33,34},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",69,0},{"sub_cancel",0,0}] 
04:06:15.697 [error] C1 propagation "2020-08-06T04:06:15.697" 
04:06:15.742 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:06:15.742 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,35}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:34 
04:06:17.913 [error] Sending find_sub batch [] 
04:06:17.913 [error] Sending find_sub_aq batch [] 
04:06:17.913 [error] batched message propagation "2020-08-06T04:06:17.913" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_05_59_218}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)204> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_05_59_218}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)205> f(AwMapRes).
ok
(h@19.0.0.18)206> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:19.197"
(h@19.0.0.18)207> 04:06:21.221 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:06:21.220" Took=28772 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_06_05_239}],[],[],[],[],[],[],[],[],[]}}}}] 
04:06:21.222 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",34,34},{"delta_send",34,35},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",71,0},{"sub_cancel",0,0}] 
04:06:22.698 [error] C1 propagation "2020-08-06T04:06:22.698" 
04:06:22.740 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:06:22.740 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,36}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:35 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_06_05_239}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)208> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_06_05_239}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)209> f(AwMapRes).
ok
(h@19.0.0.18)210> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:27.237"
(h@19.0.0.18)211> 04:06:27.915 [error] Sending find_sub batch [] 
04:06:27.915 [error] Sending find_sub_aq batch [] 
04:06:27.915 [error] batched message propagation "2020-08-06T04:06:27.915" 
04:06:28.263 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:06:28.263" Took=34809 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_06_17_283}]}}}}] 
04:06:28.263 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",35,35},{"delta_send",35,36},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",73,0},{"sub_cancel",0,0}] 
04:06:29.699 [error] C1 propagation "2020-08-06T04:06:29.699" 
04:06:29.704 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:06:29.704 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,37}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:36 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_06_23_306}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)212> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_06_23_306}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)213> f(AwMapRes).
ok
(h@19.0.0.18)214> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:35.301"
(h@19.0.0.18)215> 04:06:35.255 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:06:35.255" Took=36359 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_06_23_306}],[],[],[],[],[],[],[],[]}}}}] 
04:06:35.256 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",36,36},{"delta_send",36,37},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",75,0},{"sub_cancel",0,0}] 
04:06:36.701 [error] C1 propagation "2020-08-06T04:06:36.701" 
04:06:36.701 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:06:36.701 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,38}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:37 
04:06:37.917 [error] Sending find_sub batch [] 
04:06:37.917 [error] Sending find_sub_aq batch [] 
04:06:37.917 [error] batched message propagation "2020-08-06T04:06:37.917" 
04:06:42.245 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:06:42.244" Took=21745 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_06_29_327}],[],[],[],[]}}}}] 
04:06:42.245 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",37,37},{"delta_send",37,38},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",77,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_06_29_327}],
             [],[],...}}}}]}
(h@19.0.0.18)216> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_06_29_327}],
         [],[],[],[]}}}}]
(h@19.0.0.18)217> f(AwMapRes).
ok
(h@19.0.0.18)218> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:43.313"
(h@19.0.0.18)219> 04:06:43.703 [error] C1 propagation "2020-08-06T04:06:43.703"  
04:06:43.703 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:06:43.703 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,39}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:38 
04:06:47.615 [error] C2 propagation "2020-08-06T04:06:47.615" 
04:06:47.919 [error] Sending find_sub batch [] 
04:06:47.919 [error] Sending find_sub_aq batch [] 
04:06:47.919 [error] batched message propagation "2020-08-06T04:06:47.919" 
04:06:49.247 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:06:49.247" Took=24048 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_06_35_351}],[],[],[],[],[],[],[]}}}}] 
04:06:49.248 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",38,38},{"delta_send",38,39},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",79,0},{"sub_cancel",0,0}] 
04:06:50.704 [error] C1 propagation "2020-08-06T04:06:50.704" 
04:06:50.704 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:06:50.704 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,40}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:39 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_06_35_351}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)220> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_06_35_351}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)221> f(AwMapRes).
ok
(h@19.0.0.18)222> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:51.349"
(h@19.0.0.18)223> 04:06:56.258 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:06:56.258" Took=35646 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_06_41_371}],[]}}}}] 
04:06:56.258 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",39,39},{"delta_send",39,40},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",81,0},{"sub_cancel",0,0}] 
04:06:57.548 [error] C3 propagation "2020-08-06T04:06:57.548" 
04:06:57.705 [error] C1 propagation "2020-08-06T04:06:57.705" 
04:06:57.758 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:06:57.800 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,41}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:40 
04:06:57.920 [error] Sending find_sub batch [] 
04:06:57.920 [error] Sending find_sub_aq batch [] 
04:06:57.920 [error] batched message propagation "2020-08-06T04:06:57.920" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)224> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@19.0.0.18)225> f(AwMapRes).
ok
(h@19.0.0.18)226> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:06:59.392"
(h@19.0.0.18)227> 04:07:03.257 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:07:03.257" Took=32047 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_06_47_391}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:07:03.258 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",40,40},{"delta_send",40,41},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",83,0},{"sub_cancel",0,0}] 
04:07:04.706 [error] C1 propagation "2020-08-06T04:07:04.706" 
04:07:04.719 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:07:04.743 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,42}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:41 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_06_47_391}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)228> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_06_47_391}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)229> f(AwMapRes).
ok
(h@19.0.0.18)230> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:07.431"
(h@19.0.0.18)231> 04:07:07.922 [error] Sending find_sub batch [] 
04:07:07.922 [error] Sending find_sub_aq batch [] 
04:07:07.922 [error] batched message propagation "2020-08-06T04:07:07.922" 
04:07:10.259 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:07:10.259" Took=33038 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_06_59_430}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:07:10.259 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",41,41},{"delta_send",41,42},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",85,0},{"sub_cancel",0,0}] 
04:07:11.707 [error] C1 propagation "2020-08-06T04:07:11.707" 
04:07:11.712 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:07:11.712 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,43}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:42 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_06_59_430}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)232> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_06_59_430}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)233> f(AwMapRes).
ok
(h@19.0.0.18)234> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:15.471"
(h@19.0.0.18)235> 04:07:17.924 [error] Sending find_sub batch [] 
04:07:17.924 [error] Sending find_sub_aq batch [] 
04:07:17.924 [error] batched message propagation "2020-08-06T04:07:17.924" 
04:07:18.708 [error] C1 propagation "2020-08-06T04:07:18.708" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_06_59_430}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)236> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_06_59_430}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)237> f(AwMapRes).
ok
(h@19.0.0.18)238> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:23.506"
(h@19.0.0.18)239> 04:07:24.259 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:07:24.259" Took=26427 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_07_11_033}],[],[],[],[],[],[],[]}}}}] 
04:07:24.260 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",42,42},{"delta_send",42,43},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",87,0},{"sub_cancel",0,0}] 
04:07:25.710 [error] C1 propagation "2020-08-06T04:07:25.710" 
04:07:25.754 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:07:25.755 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,44}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:43 
04:07:27.617 [error] C2 propagation "2020-08-06T04:07:27.617" 
04:07:27.926 [error] Sending find_sub batch [] 
04:07:27.926 [error] Sending find_sub_aq batch [] 
04:07:27.926 [error] batched message propagation "2020-08-06T04:07:27.926" 
04:07:31.265 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:07:31.265" Took=36100 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_07_17_053}],[],[],[],[],[],[],[],[],[]}}}}] 
04:07:31.265 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",43,43},{"delta_send",43,44},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",89,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_07_17_053}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)240> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_07_17_053}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)241> f(AwMapRes).
ok
(h@19.0.0.18)242> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:31.542"
(h@19.0.0.18)243> 04:07:32.711 [error] C1 propagation "2020-08-06T04:07:32.711"  
04:07:32.786 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:07:32.787 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,45}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:44 
04:07:37.928 [error] Sending find_sub batch [] 
04:07:37.928 [error] Sending find_sub_aq batch [] 
04:07:37.928 [error] batched message propagation "2020-08-06T04:07:37.928" 
04:07:38.266 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:07:38.266" Took=34240 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_07_23_077}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:07:38.327 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",44,44},{"delta_send",44,45},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",91,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_07_23_077}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)244> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_07_23_077}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)245> f(AwMapRes).
ok
(h@19.0.0.18)246> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:39.581"
(h@19.0.0.18)247> 04:07:39.713 [error] C1 propagation "2020-08-06T04:07:39.713"  
04:07:39.724 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:07:39.724 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,46}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:45 
04:07:45.267 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:07:45.266" Took=33731 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_07_35_119}],[],[],[],[],[],[],[],[]}}}}] 
04:07:45.267 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",45,45},{"delta_send",45,46},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",93,0},{"sub_cancel",0,0}] 
04:07:46.714 [error] C1 propagation "2020-08-06T04:07:46.714" 
04:07:46.728 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:07:46.728 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,47}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:46 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_07_35_119}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)248> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_07_35_119}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)249> f(AwMapRes).
ok
(h@19.0.0.18)250> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:47.618"
(h@19.0.0.18)251> 04:07:47.930 [error] Sending find_sub batch [] 
04:07:47.930 [error] Sending find_sub_aq batch [] 
04:07:47.930 [error] batched message propagation "2020-08-06T04:07:47.930" 
04:07:52.261 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:07:52.261" Took=25877 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_07_41_143}],[],[]}}}}] 
04:07:52.262 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",46,46},{"delta_send",46,47},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",95,0},{"sub_cancel",0,0}] 
04:07:53.716 [error] C1 propagation "2020-08-06T04:07:53.716" 
04:07:53.716 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:07:53.716 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,48}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:47 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@19.0.0.18)252> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_07_41_143}],
         [],[]}}}}]
(h@19.0.0.18)253> f(AwMapRes).
ok
(h@19.0.0.18)254> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:07:55.669"
(h@19.0.0.18)255> 04:07:57.932 [error] Sending find_sub batch [] 
04:07:57.932 [error] Sending find_sub_aq batch [] 
04:07:57.932 [error] batched message propagation "2020-08-06T04:07:57.932" 
04:07:59.260 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:07:59.260" Took=20933 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_07_47_163}],[],[],[],[],[],[],[]}}}}] 
04:07:59.261 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",47,47},{"delta_send",47,48},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",97,0},{"sub_cancel",0,0}] 
04:08:00.717 [error] C1 propagation "2020-08-06T04:08:00.717" 
04:08:00.717 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:08:00.717 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,49}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:48 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_07_47_163}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)256> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_07_47_163}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)257> f(AwMapRes).
ok
(h@19.0.0.18)258> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:03.705"
(h@19.0.0.18)259> 04:08:06.270 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:08:06.269" Took=27742 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_07_53_183}],[],[],[],[]}}}}] 
04:08:06.272 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",48,48},{"delta_send",48,49},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",99,0},{"sub_cancel",0,0}] 
04:08:07.550 [error] C3 propagation "2020-08-06T04:08:07.550" 
04:08:07.656 [error] C2 propagation "2020-08-06T04:08:07.656" 
04:08:07.718 [error] C1 propagation "2020-08-06T04:08:07.718" 
04:08:07.772 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:08:07.772 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,50}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:49 
04:08:07.934 [error] Sending find_sub batch [] 
04:08:07.934 [error] Sending find_sub_aq batch [] 
04:08:07.934 [error] batched message propagation "2020-08-06T04:08:07.934" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_07_53_183}],
             [],[],...}}}}]}
(h@19.0.0.18)260> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_07_53_183}],
         [],[],[],[]}}}}]
(h@19.0.0.18)261> f(AwMapRes).
ok
(h@19.0.0.18)262> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:11.744"
(h@19.0.0.18)263> 04:08:13.276 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:08:13.276" Took=34612 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_07_59_203}],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:13.277 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",49,49},{"delta_send",49,50},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",101,0},{"sub_cancel",0,0}] 
04:08:14.719 [error] C1 propagation "2020-08-06T04:08:14.719" 
04:08:14.755 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:08:14.755 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,51}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:50 
04:08:17.936 [error] Sending find_sub batch [] 
04:08:17.936 [error] Sending find_sub_aq batch [] 
04:08:17.936 [error] batched message propagation "2020-08-06T04:08:17.936" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_07_59_203}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)264> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_07_59_203}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)265> f(AwMapRes).
ok
(h@19.0.0.18)266> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:19.783"
(h@19.0.0.18)267> 04:08:20.275 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:08:20.275" Took=32873 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_08_05_226}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:20.276 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",50,50},{"delta_send",50,51},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",103,0},{"sub_cancel",0,0}] 
04:08:21.720 [error] C1 propagation "2020-08-06T04:08:21.720" 
04:08:21.747 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:08:21.747 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,52}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:51 
04:08:27.323 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:08:27.323" Took=24543 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_08_11_250}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:27.324 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",51,51},{"delta_send",51,52},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",105,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_08_11_250}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)268> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_08_11_250}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)269> f(AwMapRes).
ok
(h@19.0.0.18)270> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:27.823"
(h@19.0.0.18)271> 04:08:27.938 [error] Sending find_sub batch [] 
04:08:27.938 [error] Sending find_sub_aq batch [] 
04:08:27.938 [error] batched message propagation "2020-08-06T04:08:27.938" 
04:08:28.721 [error] C1 propagation "2020-08-06T04:08:28.721" 
04:08:28.747 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:08:28.747 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,53}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:52 
04:08:34.316 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:08:34.316" Took=36141 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_23_293}],[],[],[]}}}}] 
04:08:34.316 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",52,52},{"delta_send",52,53},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",107,0},{"sub_cancel",0,0}] 
04:08:35.722 [error] C1 propagation "2020-08-06T04:08:35.722" 
04:08:35.737 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
04:08:35.737 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,54}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:53 
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@19.0.0.18)272> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_08_23_293}],
         [],[],[]}}}}]
(h@19.0.0.18)273> f(AwMapRes).
ok
(h@19.0.0.18)274> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:35.955"
(h@19.0.0.18)275> 04:08:37.939 [error] Sending find_sub batch [] 
04:08:37.939 [error] Sending find_sub_aq batch [] 
04:08:37.939 [error] batched message propagation "2020-08-06T04:08:37.939" 
04:08:41.306 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:08:41.306" Took=23971 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_08_29_315}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:41.307 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",53,53},{"delta_send",53,54},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",109,0},{"sub_cancel",0,0}] 
04:08:42.724 [error] C1 propagation "2020-08-06T04:08:42.724" 
04:08:42.724 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:08:42.724 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,55}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:54 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_08_29_315}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)276> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_08_29_315}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)277> f(AwMapRes).
ok
(h@19.0.0.18)278> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:43.897"
(h@19.0.0.18)279> 04:08:47.658 [error] C2 propagation "2020-08-06T04:08:47.658"  
04:08:47.941 [error] Sending find_sub batch [] 
04:08:47.941 [error] Sending find_sub_aq batch [] 
04:08:47.941 [error] batched message propagation "2020-08-06T04:08:47.941" 
04:08:48.304 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:08:48.304" Took=22010 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_35_340}],[],[],[]}}}}] 
04:08:48.304 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",54,54},{"delta_send",54,55},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",111,0},{"sub_cancel",0,0}] 
04:08:49.725 [error] C1 propagation "2020-08-06T04:08:49.725" 
04:08:49.725 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:08:49.725 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,56}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:55 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@19.0.0.18)280> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_08_35_340}],
         [],[],[]}}}}]
(h@19.0.0.18)281> f(AwMapRes).
ok
(h@19.0.0.18)282> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:51.945"
(h@19.0.0.18)283> 04:08:55.306 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:08:55.306" Took=24902 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_08_41_359}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:08:55.306 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",55,55},{"delta_send",55,56},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",113,0},{"sub_cancel",0,0}] 
04:08:56.726 [error] C1 propagation "2020-08-06T04:08:56.726" 
04:08:56.739 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:08:56.740 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,57}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:56 
04:08:57.942 [error] Sending find_sub batch [] 
04:08:57.942 [error] Sending find_sub_aq batch [] 
04:08:57.942 [error] batched message propagation "2020-08-06T04:08:57.942" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_08_41_359}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)284> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_08_41_359}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)285> f(AwMapRes).
ok
(h@19.0.0.18)286> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:08:59.985"
(h@19.0.0.18)287> 04:09:02.322 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:09:02.321" Took=37320 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_47_378}],[],[]}}}}] 
04:09:02.322 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",56,56},{"delta_send",56,57},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",115,0},{"sub_cancel",0,0}] 
04:09:03.728 [error] C1 propagation "2020-08-06T04:09:03.728" 
04:09:03.735 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:09:03.801 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,58}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:57 
04:09:07.943 [error] Sending find_sub batch [] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
04:09:07.943 [error] Sending find_sub_aq batch [] 
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@19.0.0.18)288> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_08_47_378}],
         [],[]}}}}]
(h@19.0.0.18)289> f(AwMapRes).
ok
(h@19.0.0.18)290> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:08.171"
(h@19.0.0.18)291> 04:09:07.943 [error] batched message propagation "2020-08-06T04:09:07.943" 
04:09:09.320 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:09:09.320" Took=35123 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_08_53_399}]}}}}] 
04:09:09.320 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",57,57},{"delta_send",57,58},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",117,0},{"sub_cancel",0,0}] 
04:09:10.729 [error] C1 propagation "2020-08-06T04:09:10.729" 
04:09:10.729 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:09:10.729 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,59}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:58 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)292> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)293> f(AwMapRes).
ok
(h@19.0.0.18)294> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:16.658"
(h@19.0.0.18)295> 04:09:16.345 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:09:16.345" Took=33078 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_09_05_439}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:16.345 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",58,58},{"delta_send",58,59},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",119,0},{"sub_cancel",0,0}] 
04:09:17.552 [error] C3 propagation "2020-08-06T04:09:17.552" 
04:09:17.731 [error] C1 propagation "2020-08-06T04:09:17.731" 
04:09:17.819 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:09:17.819 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,60}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:59 
04:09:17.944 [error] Sending find_sub batch [] 
04:09:17.944 [error] Sending find_sub_aq batch [] 
04:09:17.944 [error] batched message propagation "2020-08-06T04:09:17.944" 
04:09:23.343 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:09:23.342" Took=30397 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_09_11_460}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:23.343 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",59,59},{"delta_send",59,60},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",121,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_09_11_460}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)296> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_09_11_460}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)297> f(AwMapRes).
ok
(h@19.0.0.18)298> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:24.109"
(h@19.0.0.18)299> 04:09:24.732 [error] C1 propagation "2020-08-06T04:09:24.732"  
04:09:24.747 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:09:24.747 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,61}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:60 
04:09:27.660 [error] C2 propagation "2020-08-06T04:09:27.660" 
04:09:27.945 [error] Sending find_sub batch [] 
04:09:27.945 [error] Sending find_sub_aq batch [] 
04:09:27.945 [error] batched message propagation "2020-08-06T04:09:27.945" 
04:09:30.351 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:09:30.351" Took=37472 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_09_17_481}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:30.352 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",60,60},{"delta_send",60,61},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",123,0},{"sub_cancel",0,0}] 
04:09:31.733 [error] C1 propagation "2020-08-06T04:09:31.733" 
04:09:31.736 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:09:31.736 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,62}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:61 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_09_17_481}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)300> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_09_17_481}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)301> f(AwMapRes).
ok
(h@19.0.0.18)302> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:32.153"
(h@19.0.0.18)303> 04:09:37.347 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:09:37.347" Took=32314 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_09_23_503}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:37.347 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",61,61},{"delta_send",61,62},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",125,0},{"sub_cancel",0,0}] 
04:09:37.947 [error] Sending find_sub batch [] 
04:09:37.947 [error] Sending find_sub_aq batch [] 
04:09:37.947 [error] batched message propagation "2020-08-06T04:09:37.947" 
04:09:38.734 [error] C1 propagation "2020-08-06T04:09:38.734" 
04:09:38.744 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:09:38.744 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,63}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:62 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_09_23_503}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)304> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_09_23_503}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)305> f(AwMapRes).
ok
(h@19.0.0.18)306> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:40.191"
(h@19.0.0.18)307> 04:09:44.344 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:09:44.344" Took=25298 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_09_29_523}],[],[],[],[],[],[],[],[]}}}}] 
04:09:44.344 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",62,62},{"delta_send",62,63},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",127,0},{"sub_cancel",0,0}] 
04:09:45.736 [error] C1 propagation "2020-08-06T04:09:45.736" 
04:09:45.785 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:09:45.785 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,64}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:63 
04:09:47.948 [error] Sending find_sub batch [] 
04:09:47.948 [error] Sending find_sub_aq batch [] 
04:09:47.948 [error] batched message propagation "2020-08-06T04:09:47.948" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_09_29_523}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)308> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_09_29_523}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)309> f(AwMapRes).
ok
(h@19.0.0.18)310> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:48.237"
(h@19.0.0.18)311> 04:09:51.341 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:09:51.341" Took=21830 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_09_35_543}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:51.342 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",63,63},{"delta_send",63,64},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",129,0},{"sub_cancel",0,0}] 
04:09:52.738 [error] C1 propagation "2020-08-06T04:09:52.738" 
04:09:52.774 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:09:52.775 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,65}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:64 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_09_35_543}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)312> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_09_35_543}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)313> f(AwMapRes).
ok
(h@19.0.0.18)314> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:09:56.274"
(h@19.0.0.18)315> 04:09:57.950 [error] Sending find_sub batch [] 
04:09:57.950 [error] Sending find_sub_aq batch [] 
04:09:57.950 [error] batched message propagation "2020-08-06T04:09:57.950" 
04:09:58.354 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:09:58.354" Took=31754 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_09_47_592}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:09:58.424 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",64,64},{"delta_send",64,65},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",131,0},{"sub_cancel",0,0}] 
04:09:59.740 [error] C1 propagation "2020-08-06T04:09:59.740" 
04:09:59.771 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:09:59.772 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,66}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:65 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_09_47_592}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)316> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_09_47_592}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)317> f(AwMapRes).
ok
(h@19.0.0.18)318> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:04.310"
(h@19.0.0.18)319> 04:10:05.439 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:10:05.439" Took=36525 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_09_53_611}],[],[],[],[],[],[]}}}}] 
04:10:05.439 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",65,65},{"delta_send",65,66},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",133,0},{"sub_cancel",0,0}] 
04:10:06.741 [error] C1 propagation "2020-08-06T04:10:06.741" 
04:10:06.774 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:10:06.774 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,67}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:66 
04:10:07.662 [error] C2 propagation "2020-08-06T04:10:07.662" 
04:10:07.952 [error] Sending find_sub batch [] 
04:10:07.952 [error] Sending find_sub_aq batch [] 
04:10:07.952 [error] batched message propagation "2020-08-06T04:10:07.952" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_09_59_631}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)320> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_09_59_631}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)321> f(AwMapRes).
ok
(h@19.0.0.18)322> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:12.379"
(h@19.0.0.18)323> 04:10:12.346 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:10:12.346" Took=25788 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_09_59_631}],[],[],[],[],[],[],[],[]}}}}] 
04:10:12.347 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",66,66},{"delta_send",66,67},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",135,0},{"sub_cancel",0,0}] 
04:10:13.742 [error] C1 propagation "2020-08-06T04:10:13.742" 
04:10:13.742 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:10:13.742 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,68}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:67 
04:10:17.954 [error] Sending find_sub batch [] 
04:10:17.954 [error] Sending find_sub_aq batch [] 
04:10:17.954 [error] batched message propagation "2020-08-06T04:10:17.954" 
04:10:19.358 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:10:19.357" Took=35455 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_05_655}]}}}}] 
04:10:19.359 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",67,67},{"delta_send",67,68},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",137,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)324> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)325> f(AwMapRes).
ok
(h@19.0.0.18)326> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:20.391"
(h@19.0.0.18)327> 04:10:20.744 [error] C1 propagation "2020-08-06T04:10:20.744"  
04:10:20.744 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:10:20.744 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,69}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:68 
04:10:26.365 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:10:26.365" Took=44216 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_11_677}],[]}}}}] 
04:10:26.365 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",68,68},{"delta_send",68,69},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",139,0},{"sub_cancel",0,0}] 
04:10:27.553 [error] C3 propagation "2020-08-06T04:10:27.553" 
04:10:27.745 [error] C1 propagation "2020-08-06T04:10:27.745" 
04:10:27.781 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:10:27.863 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,70}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:69 
04:10:27.955 [error] Sending find_sub batch [] 
04:10:27.955 [error] Sending find_sub_aq batch [] 
04:10:27.955 [error] batched message propagation "2020-08-06T04:10:27.955" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)328> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@19.0.0.18)329> f(AwMapRes).
ok
(h@19.0.0.18)330> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:28.428"
(h@19.0.0.18)331> 04:10:33.347 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:10:33.347" Took=23510 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_10_17_699}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:10:33.348 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",69,69},{"delta_send",69,70},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",141,0},{"sub_cancel",0,0}] 
04:10:34.746 [error] C1 propagation "2020-08-06T04:10:34.746" 
04:10:34.797 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:10:34.797 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,71}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:70 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_10_17_699}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)332> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_10_17_699}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)333> f(AwMapRes).
ok
(h@19.0.0.18)334> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:36.475"
(h@19.0.0.18)335> 04:10:37.957 [error] Sending find_sub batch [] 
04:10:37.957 [error] Sending find_sub_aq batch [] 
04:10:37.957 [error] batched message propagation "2020-08-06T04:10:37.957" 
04:10:40.351 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:10:40.351" Took=26610 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_10_29_743}],[],[],[],[],[],[],[],[]}}}}] 
04:10:40.352 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",70,70},{"delta_send",70,71},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",143,0},{"sub_cancel",0,0}] 
04:10:41.747 [error] C1 propagation "2020-08-06T04:10:41.747" 
04:10:41.748 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:10:41.749 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,72}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:71 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_10_29_743}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)336> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_10_29_743}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)337> f(AwMapRes).
ok
(h@19.0.0.18)338> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:44.513"
(h@19.0.0.18)339> 04:10:47.374 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:10:47.374" Took=26070 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_35_767}],[],[],[],[],[]}}}}] 
04:10:47.375 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",71,71},{"delta_send",71,72},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",145,0},{"sub_cancel",0,0}] 
04:10:47.663 [error] C2 propagation "2020-08-06T04:10:47.663" 
04:10:47.959 [error] Sending find_sub batch [] 
04:10:47.959 [error] Sending find_sub_aq batch [] 
04:10:47.959 [error] batched message propagation "2020-08-06T04:10:47.959" 
04:10:48.748 [error] C1 propagation "2020-08-06T04:10:48.748" 
04:10:48.748 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:10:48.748 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,73}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:72 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_10_35_767}],
             [],[],[],...}}}}]}
(h@19.0.0.18)340> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_10_35_767}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)341> f(AwMapRes).
ok
(h@19.0.0.18)342> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:10:52.556"
(h@19.0.0.18)343> 04:10:54.388 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:10:54.388" Took=37093 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_41_788}],[],[],[],[],[]}}}}] 
04:10:54.388 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",72,72},{"delta_send",72,73},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",147,0},{"sub_cancel",0,0}] 
04:10:55.749 [error] C1 propagation "2020-08-06T04:10:55.749" 
04:10:55.749 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:10:55.749 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,74}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:73 
04:10:57.960 [error] Sending find_sub batch [] 
04:10:57.960 [error] Sending find_sub_aq batch [] 
04:10:57.960 [error] batched message propagation "2020-08-06T04:10:57.960" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_10_41_788}],
             [],[],[],...}}}}]}
(h@19.0.0.18)344> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_10_41_788}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)345> f(AwMapRes).
ok
(h@19.0.0.18)346> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:00.598"
(h@19.0.0.18)347> 04:11:01.373 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:11:01.373" Took=24395 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_10_47_811}],[],[],[],[],[],[],[],[]}}}}] 
04:11:01.374 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",73,73},{"delta_send",73,74},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",149,0},{"sub_cancel",0,0}] 
04:11:02.750 [error] C1 propagation "2020-08-06T04:11:02.750" 
04:11:02.750 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:11:02.750 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,75}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:74 
04:11:07.962 [error] Sending find_sub batch [] 
04:11:07.962 [error] Sending find_sub_aq batch [] 
04:11:07.962 [error] batched message propagation "2020-08-06T04:11:07.962" 
04:11:08.377 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:11:08.377" Took=22393 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_10_53_831}],[],[],[],[],[],[],[]}}}}] 
04:11:08.469 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",74,74},{"delta_send",74,75},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",151,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_10_53_831}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)348> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_10_53_831}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)349> f(AwMapRes).
ok
(h@19.0.0.18)350> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:08.637"
(h@19.0.0.18)351> 04:11:09.752 [error] C1 propagation "2020-08-06T04:11:09.752"  
04:11:09.793 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:11:09.793 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,76}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:75 
04:11:15.378 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:11:15.377" Took=27166 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_10_59_855}],[]}}}}] 
04:11:15.378 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",75,75},{"delta_send",75,76},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",153,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)352> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@19.0.0.18)353> f(AwMapRes).
ok
(h@19.0.0.18)354> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:16.675"
(h@19.0.0.18)355> 04:11:16.754 [error] C1 propagation "2020-08-06T04:11:16.754"  
04:11:16.775 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:11:16.775 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,77}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:76 
04:11:17.964 [error] Sending find_sub batch [] 
04:11:17.964 [error] Sending find_sub_aq batch [] 
04:11:17.964 [error] batched message propagation "2020-08-06T04:11:17.964" 
04:11:22.385 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:11:22.385" Took=32728 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_11_11_899}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:11:22.387 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",76,76},{"delta_send",76,77},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",155,0},{"sub_cancel",0,0}] 
04:11:23.755 [error] C1 propagation "2020-08-06T04:11:23.755" 
04:11:23.755 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:11:23.755 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,78}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:77 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_11_11_899}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)356> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_11_11_899}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)357> f(AwMapRes).
ok
(h@19.0.0.18)358> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:24.715"
(h@19.0.0.18)359> 04:11:27.665 [error] C2 propagation "2020-08-06T04:11:27.665"  
04:11:27.966 [error] Sending find_sub batch [] 
04:11:27.966 [error] Sending find_sub_aq batch [] 
04:11:27.966 [error] batched message propagation "2020-08-06T04:11:27.966" 
04:11:29.390 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:11:29.389" Took=33120 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_11_17_919}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:11:29.390 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",77,77},{"delta_send",77,78},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",157,0},{"sub_cancel",0,0}] 
04:11:30.756 [error] C1 propagation "2020-08-06T04:11:30.756" 
04:11:30.767 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:11:30.767 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,79}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:78 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_11_17_919}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)360> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_11_17_919}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)361> f(AwMapRes).
ok
(h@19.0.0.18)362> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:32.751"
(h@19.0.0.18)363> 04:11:36.385 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:11:36.384" Took=20594 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_11_23_943}]}}}}] 
04:11:36.386 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",78,78},{"delta_send",78,79},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",159,0},{"sub_cancel",0,0}] 
04:11:37.555 [error] C3 propagation "2020-08-06T04:11:37.555" 
04:11:37.758 [error] C1 propagation "2020-08-06T04:11:37.758" 
04:11:37.769 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:11:37.769 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,80}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:79 
04:11:37.968 [error] Sending find_sub batch [] 
04:11:37.968 [error] Sending find_sub_aq batch [] 
04:11:37.968 [error] batched message propagation "2020-08-06T04:11:37.968" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)364> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)365> f(AwMapRes).
ok
(h@19.0.0.18)366> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:40.794"
(h@19.0.0.18)367> 04:11:43.404 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:11:43.403" Took=37050 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_11_29_965}],[],[],[]}}}}] 
04:11:43.404 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",79,79},{"delta_send",79,80},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",161,0},{"sub_cancel",0,0}] 
04:11:44.760 [error] C1 propagation "2020-08-06T04:11:44.760" 
04:11:44.760 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:11:44.760 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,81}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:80 
04:11:47.970 [error] Sending find_sub batch [] 
04:11:47.970 [error] Sending find_sub_aq batch [] 
04:11:47.970 [error] batched message propagation "2020-08-06T04:11:47.970" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@19.0.0.18)368> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_11_29_965}],
         [],[],[]}}}}]
(h@19.0.0.18)369> f(AwMapRes).
ok
(h@19.0.0.18)370> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:48.833"
(h@19.0.0.18)371> 04:11:50.402 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:11:50.402" Took=29904 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_11_35_986}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:11:50.403 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",80,80},{"delta_send",80,81},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",163,0},{"sub_cancel",0,0}] 
04:11:51.761 [error] C1 propagation "2020-08-06T04:11:51.761" 
04:11:51.772 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:11:51.772 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,82}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:81 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_11_35_986}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)372> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_11_35_986}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)373> f(AwMapRes).
ok
(h@19.0.0.18)374> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:11:56.868"
(h@19.0.0.18)375> 04:11:57.397 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:11:57.396" Took=33218 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_11_42_007}],[],[],[],[],[],[]}}}}] 
04:11:57.397 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",81,81},{"delta_send",81,82},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",165,0},{"sub_cancel",0,0}] 
04:11:57.972 [error] Sending find_sub batch [] 
04:11:57.972 [error] Sending find_sub_aq batch [] 
04:11:57.972 [error] batched message propagation "2020-08-06T04:11:57.972" 
04:11:58.763 [error] C1 propagation "2020-08-06T04:11:58.763" 
04:11:58.763 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:11:58.763 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,83}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:82 
04:12:04.406 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:12:04.406" Took=41967 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_11_54_070}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:04.406 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",82,82},{"delta_send",82,83},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",167,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_11_54_070}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)376> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_11_54_070}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)377> f(AwMapRes).
ok
(h@19.0.0.18)378> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:04.907"
(h@19.0.0.18)379> 04:12:05.765 [error] C1 propagation "2020-08-06T04:12:05.765"  
04:12:05.765 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:12:05.765 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,84}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:83 
04:12:07.666 [error] C2 propagation "2020-08-06T04:12:07.666" 
04:12:07.974 [error] Sending find_sub batch [] 
04:12:07.974 [error] Sending find_sub_aq batch [] 
04:12:07.974 [error] batched message propagation "2020-08-06T04:12:07.974" 
04:12:11.385 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:12:11.385" Took=23544 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_12_00_092}],[],[],[],[],[],[],[]}}}}] 
04:12:11.386 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",83,83},{"delta_send",83,84},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",169,0},{"sub_cancel",0,0}] 
04:12:12.767 [error] C1 propagation "2020-08-06T04:12:12.767" 
04:12:12.797 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:12:12.798 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,85}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:84 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_12_00_092}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)380> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_12_00_092}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)381> f(AwMapRes).
ok
(h@19.0.0.18)382> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:12.942"
(h@19.0.0.18)383> 04:12:17.976 [error] Sending find_sub batch [] 
04:12:17.976 [error] Sending find_sub_aq batch [] 
04:12:17.976 [error] batched message propagation "2020-08-06T04:12:17.976" 
04:12:18.388 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:12:18.388" Took=23041 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_12_06_115}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:18.413 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",84,84},{"delta_send",84,85},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",171,0},{"sub_cancel",0,0}] 
04:12:19.768 [error] C1 propagation "2020-08-06T04:12:19.768" 
04:12:19.773 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:12:19.773 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,86}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:85 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_12_06_115}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)384> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_12_06_115}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)385> f(AwMapRes).
ok
(h@19.0.0.18)386> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:20.980"
(h@19.0.0.18)387> 04:12:26.769 [error] C1 propagation "2020-08-06T04:12:26.769"  
04:12:27.978 [error] Sending find_sub batch [] 
04:12:27.978 [error] Sending find_sub_aq batch [] 
04:12:27.978 [error] batched message propagation "2020-08-06T04:12:27.978" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_12_06_115}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)388> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_12_06_115}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)389> f(AwMapRes).
ok
(h@19.0.0.18)390> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:29.327"
(h@19.0.0.18)391> 04:12:32.395 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:12:32.395" Took=27462 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_12_17_763}],[]}}}}] 
04:12:32.395 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",85,85},{"delta_send",85,86},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",173,0},{"sub_cancel",0,0}] 
04:12:33.770 [error] C1 propagation "2020-08-06T04:12:33.770" 
04:12:33.770 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:12:33.770 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,87}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:86 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)392> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@19.0.0.18)393> f(AwMapRes).
ok
(h@19.0.0.18)394> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:37.731"
(h@19.0.0.18)395> 04:12:37.980 [error] Sending find_sub batch [] 
04:12:37.980 [error] Sending find_sub_aq batch [] 
04:12:37.980 [error] batched message propagation "2020-08-06T04:12:37.980" 
04:12:39.394 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:12:39.394" Took=25809 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_12_23_784}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:39.396 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",86,86},{"delta_send",86,87},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",175,0},{"sub_cancel",0,0}] 
04:12:40.771 [error] C1 propagation "2020-08-06T04:12:40.771" 
04:12:40.771 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:12:40.771 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,88}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:87 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_12_23_784}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)396> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_12_23_784}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)397> f(AwMapRes).
ok
(h@19.0.0.18)398> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:45.114"
(h@19.0.0.18)399> 04:12:46.406 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:12:46.405" Took=26071 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_12_35_827}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:46.406 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",87,87},{"delta_send",87,88},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",177,0},{"sub_cancel",0,0}] 
04:12:47.556 [error] C3 propagation "2020-08-06T04:12:47.556" 
04:12:47.668 [error] C2 propagation "2020-08-06T04:12:47.668" 
04:12:47.772 [error] C1 propagation "2020-08-06T04:12:47.772" 
04:12:47.793 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:12:47.793 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,89}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:88 
04:12:47.982 [error] Sending find_sub batch [] 
04:12:47.982 [error] Sending find_sub_aq batch [] 
04:12:47.982 [error] batched message propagation "2020-08-06T04:12:47.982" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_12_35_827}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)400> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_12_35_827}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)401> f(AwMapRes).
ok
(h@19.0.0.18)402> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:12:53.146"
(h@19.0.0.18)403> 04:12:53.410 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:12:53.410" Took=29160 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_12_41_849}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:12:53.410 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",88,88},{"delta_send",88,89},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",179,0},{"sub_cancel",0,0}] 
04:12:54.774 [error] C1 propagation "2020-08-06T04:12:54.774" 
04:12:54.774 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:12:54.774 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,90}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:89 
04:12:57.984 [error] Sending find_sub batch [] 
04:12:57.984 [error] Sending find_sub_aq batch [] 
04:12:57.984 [error] batched message propagation "2020-08-06T04:12:57.984" 
04:13:00.415 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:13:00.415" Took=35911 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_12_47_868}]}}}}] 
04:13:00.415 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",89,89},{"delta_send",89,90},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",181,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)404> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)405> f(AwMapRes).
ok
(h@19.0.0.18)406> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:01.184"
(h@19.0.0.18)407> 04:13:01.775 [error] C1 propagation "2020-08-06T04:13:01.775"  
04:13:01.805 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:13:01.805 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,91}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:90 
04:13:07.401 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:13:07.401" Took=24497 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_12_53_891}],[],[],[],[],[],[],[],[]}}}}] 
04:13:07.401 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",90,90},{"delta_send",90,91},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",183,0},{"sub_cancel",0,0}] 
04:13:07.986 [error] Sending find_sub batch [] 
04:13:07.986 [error] Sending find_sub_aq batch [] 
04:13:07.986 [error] batched message propagation "2020-08-06T04:13:07.986" 
04:13:08.776 [error] C1 propagation "2020-08-06T04:13:08.776" 
04:13:08.776 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:13:08.776 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,92}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:91 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_12_53_891}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)408> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_12_53_891}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)409> f(AwMapRes).
ok
(h@19.0.0.18)410> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:09.225"
(h@19.0.0.18)411> 04:13:14.415 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:13:14.415" Took=31564 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_12_59_911}],[],[],[],[],[],[]}}}}] 
04:13:14.415 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",91,91},{"delta_send",91,92},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",185,0},{"sub_cancel",0,0}] 
04:13:15.778 [error] C1 propagation "2020-08-06T04:13:15.778" 
04:13:15.807 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:13:15.808 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,93}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:92 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_12_59_911}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)412> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_12_59_911}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)413> f(AwMapRes).
ok
(h@19.0.0.18)414> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:17.265"
(h@19.0.0.18)415> 04:13:17.987 [error] Sending find_sub batch [] 
04:13:17.987 [error] Sending find_sub_aq batch [] 
04:13:17.987 [error] batched message propagation "2020-08-06T04:13:17.987" 
04:13:21.410 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:13:21.410" Took=32414 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_13_05_930}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:13:21.410 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",92,92},{"delta_send",92,93},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",187,0},{"sub_cancel",0,0}] 
04:13:22.780 [error] C1 propagation "2020-08-06T04:13:22.780" 
04:13:22.780 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:13:22.780 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,94}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:93 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_13_05_930}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)416> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_13_05_930}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)417> f(AwMapRes).
ok
(h@19.0.0.18)418> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:25.304"
(h@19.0.0.18)419> 04:13:27.670 [error] C2 propagation "2020-08-06T04:13:27.670"  
04:13:27.989 [error] Sending find_sub batch [] 
04:13:27.989 [error] Sending find_sub_aq batch [] 
04:13:27.989 [error] batched message propagation "2020-08-06T04:13:27.989" 
04:13:28.454 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:13:28.454" Took=34713 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_13_17_972}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:13:28.454 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",93,93},{"delta_send",93,94},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",189,0},{"sub_cancel",0,0}] 
04:13:29.781 [error] C1 propagation "2020-08-06T04:13:29.781" 
04:13:29.781 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:13:29.781 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,95}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:94 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_13_17_972}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)420> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_13_17_972}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)421> f(AwMapRes).
ok
(h@19.0.0.18)422> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:33.341"
(h@19.0.0.18)423> 04:13:35.414 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:13:35.414" Took=34894 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_13_24_010}],[],[],[],[]}}}}] 
04:13:35.415 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",94,94},{"delta_send",94,95},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",191,0},{"sub_cancel",0,0}] 
04:13:36.782 [error] C1 propagation "2020-08-06T04:13:36.782" 
04:13:36.782 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:13:36.782 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,96}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:95 
04:13:37.991 [error] Sending find_sub batch [] 
04:13:37.991 [error] Sending find_sub_aq batch [] 
04:13:37.991 [error] batched message propagation "2020-08-06T04:13:37.991" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_13_24_010}],
             [],[],...}}}}]}
(h@19.0.0.18)424> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_13_24_010}],
         [],[],[],[]}}}}]
(h@19.0.0.18)425> f(AwMapRes).
ok
(h@19.0.0.18)426> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:41.378"
(h@19.0.0.18)427> 04:13:42.407 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:13:42.407" Took=27454 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_13_30_035}],[],[]}}}}] 
04:13:42.408 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",95,95},{"delta_send",95,96},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",193,0},{"sub_cancel",0,0}] 
04:13:43.783 [error] C1 propagation "2020-08-06T04:13:43.783" 
04:13:43.783 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:13:43.783 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,97}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:96 
04:13:47.993 [error] Sending find_sub batch [] 
04:13:47.993 [error] Sending find_sub_aq batch [] 
04:13:47.993 [error] batched message propagation "2020-08-06T04:13:47.993" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_13_36_052}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)428> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_13_36_052}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)429> f(AwMapRes).
ok
(h@19.0.0.18)430> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:49.432"
(h@19.0.0.18)431> 04:13:49.430 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:13:49.430" Took=41693 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_13_36_052}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:13:49.430 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",96,96},{"delta_send",96,97},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",195,0},{"sub_cancel",0,0}] 
04:13:50.784 [error] C1 propagation "2020-08-06T04:13:50.784" 
04:13:50.784 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:13:50.784 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,98}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:97 
04:13:56.485 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:13:56.485" Took=21999 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_13_42_071}],[],[],[],[],[],[]}}}}] 
04:13:56.486 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",97,97},{"delta_send",97,98},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",197,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_13_42_071}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)432> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_13_42_071}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)433> f(AwMapRes).
ok
(h@19.0.0.18)434> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:13:57.469"
(h@19.0.0.18)435> 04:13:57.557 [error] C3 propagation "2020-08-06T04:13:57.557"  
04:13:57.768 [warning] global: 'h@19.0.0.18' failed to connect to 'a@17.0.0.11'
04:13:57.768 [warning] global: 'h@19.0.0.18' failed to connect to 'a@18.0.0.11'
04:13:57.769 [warning] global: 'h@19.0.0.18' failed to connect to 'a@13.0.0.11'
04:13:57.770 [warning] global: 'h@19.0.0.18' failed to connect to 'a@14.0.0.11'
04:13:57.770 [warning] global: 'h@19.0.0.18' failed to connect to 'a@16.0.0.11'
04:13:57.771 [warning] global: 'h@19.0.0.18' failed to connect to 'a@15.0.0.11'
04:13:57.771 [warning] global: 'h@19.0.0.18' failed to connect to 'a@11.0.0.11'
04:13:57.771 [warning] global: 'h@19.0.0.18' failed to connect to 'a@12.0.0.11'
04:13:57.772 [warning] global: 'h@19.0.0.18' failed to connect to 'a@10.0.0.11'
04:13:57.785 [error] C1 propagation "2020-08-06T04:13:57.785" 
04:13:57.785 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:13:57.785 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,99}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:98 
04:13:57.995 [error] Sending find_sub batch [] 
04:13:57.995 [error] Sending find_sub_aq batch [] 
04:13:57.995 [error] batched message propagation "2020-08-06T04:13:57.995" 
04:14:03.458 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:14:03.458" Took=24798 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_13_48_095}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:03.458 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",98,98},{"delta_send",98,99},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",199,0},{"sub_cancel",0,0}] 
04:14:04.786 [error] C1 propagation "2020-08-06T04:14:04.786" 
04:14:04.786 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:14:04.786 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,100}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:99 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_13_48_095}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)436> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_13_48_095}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)437> f(AwMapRes).
ok
(h@19.0.0.18)438> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:05.533"
(h@19.0.0.18)439> 04:14:07.671 [error] C2 propagation "2020-08-06T04:14:07.671"  
04:14:07.997 [error] Sending find_sub batch [] 
04:14:07.997 [error] Sending find_sub_aq batch [] 
04:14:07.997 [error] batched message propagation "2020-08-06T04:14:07.997" 
04:14:10.419 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:14:10.419" Took=26317 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_14_00_141}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:10.420 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",99,99},{"delta_send",99,100},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",201,0},{"sub_cancel",0,0}] 
04:14:11.787 [error] C1 propagation "2020-08-06T04:14:11.787" 
04:14:11.825 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:14:11.825 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,101}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:100 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_14_00_141}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)440> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_14_00_141}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)441> f(AwMapRes).
ok
(h@19.0.0.18)442> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:13.571"
(h@19.0.0.18)443> 04:14:17.422 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:14:17.422" Took=34004 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_14_06_163}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:17.423 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",100,100},{"delta_send",100,101},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",203,0},{"sub_cancel",0,0}] 
04:14:17.999 [error] Sending find_sub batch [] 
04:14:17.999 [error] Sending find_sub_aq batch [] 
04:14:17.999 [error] batched message propagation "2020-08-06T04:14:17.999" 
04:14:18.789 [error] C1 propagation "2020-08-06T04:14:18.789" 
04:14:18.821 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:14:18.821 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,102}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:101 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_14_06_163}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)444> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_14_06_163}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)445> f(AwMapRes).
ok
(h@19.0.0.18)446> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:21.612"
(h@19.0.0.18)447> 04:14:24.415 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:14:24.415" Took=24913 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_14_12_187}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:24.416 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",101,101},{"delta_send",101,102},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",205,0},{"sub_cancel",0,0}] 
04:14:25.790 [error] C1 propagation "2020-08-06T04:14:25.790" 
04:14:25.826 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:14:25.826 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,103}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:102 
04:14:28.001 [error] Sending find_sub batch [] 
04:14:28.001 [error] Sending find_sub_aq batch [] 
04:14:28.001 [error] batched message propagation "2020-08-06T04:14:28.129" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_14_12_187}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)448> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_14_12_187}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)449> f(AwMapRes).
ok
(h@19.0.0.18)450> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:29.653"
(h@19.0.0.18)451> 04:14:31.433 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:14:31.433" Took=36580 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_14_18_207}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:14:31.434 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",102,102},{"delta_send",102,103},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",207,0},{"sub_cancel",0,0}] 
04:14:32.792 [error] C1 propagation "2020-08-06T04:14:32.792" 
04:14:32.817 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:14:32.818 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,104}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:103 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_14_18_207}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)452> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_14_18_207}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)453> f(AwMapRes).
ok
(h@19.0.0.18)454> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:37.695"
(h@19.0.0.18)455> 04:14:38.003 [error] Sending find_sub batch [] 
04:14:38.003 [error] Sending find_sub_aq batch [] 
04:14:38.003 [error] batched message propagation "2020-08-06T04:14:38.350" 
04:14:38.448 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:14:38.448" Took=27140 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_24_227}],[],[]}}}}] 
04:14:38.448 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",103,103},{"delta_send",103,104},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",209,0},{"sub_cancel",0,0}] 
04:14:39.794 [error] C1 propagation "2020-08-06T04:14:39.794" 
04:14:39.836 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:14:39.836 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,105}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:104 
04:14:45.424 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:14:45.424" Took=26595 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_30_247}],[],[],[],[],[]}}}}] 
04:14:45.424 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",104,104},{"delta_send",104,105},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",211,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_14_30_247}],
             [],[],[],...}}}}]}
(h@19.0.0.18)456> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_14_30_247}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)457> f(AwMapRes).
ok
(h@19.0.0.18)458> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:45.730"
(h@19.0.0.18)459> 04:14:46.795 [error] C1 propagation "2020-08-06T04:14:46.795"  
04:14:46.808 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:14:46.809 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,106}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:105 
04:14:47.673 [error] C2 propagation "2020-08-06T04:14:47.673" 
04:14:48.005 [error] Sending find_sub batch [] 
04:14:48.005 [error] Sending find_sub_aq batch [] 
04:14:48.005 [error] batched message propagation "2020-08-06T04:14:48.533" 
04:14:52.428 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:14:52.428" Took=29307 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_42_291}]}}}}] 
04:14:52.428 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",105,105},{"delta_send",105,106},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",213,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)460> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)461> f(AwMapRes).
ok
(h@19.0.0.18)462> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:14:53.768"
(h@19.0.0.18)463> 04:14:53.797 [error] C1 propagation "2020-08-06T04:14:53.797"  
04:14:53.826 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:14:53.826 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,107}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:106 
04:14:58.007 [error] Sending find_sub batch [] 
04:14:58.007 [error] Sending find_sub_aq batch [] 
04:14:58.007 [error] batched message propagation "2020-08-06T04:14:58.725" 
04:14:59.432 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:14:59.432" Took=24148 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_48_307}],[],[],[],[],[]}}}}] 
04:14:59.432 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",106,106},{"delta_send",106,107},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",215,0},{"sub_cancel",0,0}] 
04:15:00.798 [error] C1 propagation "2020-08-06T04:15:00.798" 
04:15:00.821 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:15:00.871 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,108}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:107 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_14_48_307}],
             [],[],[],...}}}}]}
(h@19.0.0.18)464> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_14_48_307}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)465> f(AwMapRes).
ok
(h@19.0.0.18)466> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:01.808"
(h@19.0.0.18)467> 04:15:06.440 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:15:06.440" Took=39513 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_14_54_327}]}}}}] 
04:15:06.441 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",107,107},{"delta_send",107,108},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",217,0},{"sub_cancel",0,0}] 
04:15:07.559 [error] C3 propagation "2020-08-06T04:15:07.559" 
04:15:07.800 [error] C1 propagation "2020-08-06T04:15:07.800" 
04:15:07.873 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:15:07.873 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,109}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:108 
04:15:08.008 [error] Sending find_sub batch [] 
04:15:08.008 [error] Sending find_sub_aq batch [] 
04:15:08.008 [error] batched message propagation "2020-08-06T04:15:08.817" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)468> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)469> f(AwMapRes).
ok
(h@19.0.0.18)470> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:09.855"
(h@19.0.0.18)471> 04:15:13.432 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:15:13.432" Took=32754 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_00_346}]}}}}] 
04:15:13.433 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",108,108},{"delta_send",108,109},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",219,0},{"sub_cancel",0,0}] 
04:15:14.802 [error] C1 propagation "2020-08-06T04:15:14.802" 
04:15:14.802 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:15:14.803 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,110}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:109 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)472> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)473> f(AwMapRes).
ok
(h@19.0.0.18)474> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:17.899"
(h@19.0.0.18)475> 04:15:18.010 [error] Sending find_sub batch [] 
04:15:18.010 [error] Sending find_sub_aq batch [] 
04:15:18.010 [error] batched message propagation "2020-08-06T04:15:18.102" 
04:15:20.430 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:15:20.430" Took=28650 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_15_06_367}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:15:20.431 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",109,109},{"delta_send",109,110},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",221,0},{"sub_cancel",0,0}] 
04:15:21.803 [error] C1 propagation "2020-08-06T04:15:21.803" 
04:15:21.803 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:15:21.803 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,111}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:110 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_15_06_367}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)476> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_15_06_367}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)477> f(AwMapRes).
ok
(h@19.0.0.18)478> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:25.934"
(h@19.0.0.18)479> 04:15:27.436 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:15:27.436" Took=30972 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_15_12_391}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:15:27.437 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",110,110},{"delta_send",110,111},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",223,0},{"sub_cancel",0,0}] 
04:15:27.675 [error] C2 propagation "2020-08-06T04:15:27.675" 
04:15:28.011 [error] Sending find_sub batch [] 
04:15:28.011 [error] Sending find_sub_aq batch [] 
04:15:28.011 [error] batched message propagation "2020-08-06T04:15:28.111" 
04:15:28.805 [error] C1 propagation "2020-08-06T04:15:28.805" 
04:15:28.805 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:15:28.805 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,112}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:111 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_15_12_391}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)480> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_15_12_391}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)481> f(AwMapRes).
ok
(h@19.0.0.18)482> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:33.974"
(h@19.0.0.18)483> 04:15:34.437 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:15:34.437" Took=29355 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_18_415}],[],[],[],[],[],[]}}}}] 
04:15:34.437 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",111,111},{"delta_send",111,112},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",225,0},{"sub_cancel",0,0}] 
04:15:35.806 [error] C1 propagation "2020-08-06T04:15:35.806" 
04:15:35.806 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:15:35.806 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,113}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:112 
04:15:38.012 [error] Sending find_sub batch [] 
04:15:38.012 [error] Sending find_sub_aq batch [] 
04:15:38.012 [error] batched message propagation "2020-08-06T04:15:38.123" 
04:15:41.495 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:15:41.495" Took=24081 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_15_30_458}],[],[],[],[],[],[],[],[],[]}}}}] 
04:15:41.495 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",112,112},{"delta_send",112,113},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",227,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_15_30_458}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)484> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_15_30_458}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)485> f(AwMapRes).
ok
(h@19.0.0.18)486> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:42.104"
(h@19.0.0.18)487> 04:15:42.807 [error] C1 propagation "2020-08-06T04:15:42.807"  
04:15:42.807 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:15:42.807 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,114}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:113 
04:15:48.014 [error] Sending find_sub batch [] 
04:15:48.014 [error] Sending find_sub_aq batch [] 
04:15:48.014 [error] batched message propagation "2020-08-06T04:15:48.143" 
04:15:48.436 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:15:48.436" Took=26233 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_36_478}],[],[]}}}}] 
04:15:48.436 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",113,113},{"delta_send",113,114},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",229,0},{"sub_cancel",0,0}] 
04:15:49.808 [error] C1 propagation "2020-08-06T04:15:49.808" 
04:15:49.808 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:15:49.808 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,115}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:114 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@19.0.0.18)488> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_15_36_478}],
         [],[]}}}}]
(h@19.0.0.18)489> f(AwMapRes).
ok
(h@19.0.0.18)490> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:50.490"
(h@19.0.0.18)491> 04:15:55.446 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:15:55.445" Took=34754 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_15_42_499}]}}}}] 
04:15:55.447 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",114,114},{"delta_send",114,115},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",231,0},{"sub_cancel",0,0}] 
04:15:56.810 [error] C1 propagation "2020-08-06T04:15:56.810" 
04:15:56.810 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:15:56.810 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,116}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:115 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)492> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)493> 04:15:58.016 [error] Sending find_sub batch [] 
f(AwMapRes).
ok
(h@19.0.0.18)494> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:15:58.933"
(h@19.0.0.18)495> 04:15:58.016 [error] Sending find_sub_aq batch [] 
04:15:58.016 [error] batched message propagation "2020-08-06T04:15:58.163" 
04:16:02.443 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:16:02.443" Took=29875 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_15_48_519}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:02.443 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",115,115},{"delta_send",115,116},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",233,0},{"sub_cancel",0,0}] 
04:16:03.812 [error] C1 propagation "2020-08-06T04:16:03.812" 
04:16:03.812 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:16:03.812 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,117}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:116 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_15_48_519}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)496> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_15_48_519}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)497> f(AwMapRes).
ok
(h@19.0.0.18)498> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:06.135"
(h@19.0.0.18)499> 04:16:07.677 [error] C2 propagation "2020-08-06T04:16:07.677"  
04:16:08.018 [error] Sending find_sub batch [] 
04:16:08.018 [error] Sending find_sub_aq batch [] 
04:16:08.018 [error] batched message propagation "2020-08-06T04:16:08.183" 
04:16:09.437 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:16:09.436" Took=23131 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_15_54_539}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:09.437 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",116,116},{"delta_send",116,117},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",235,0},{"sub_cancel",0,0}] 
04:16:10.814 [error] C1 propagation "2020-08-06T04:16:10.814" 
04:16:10.814 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:16:10.814 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,118}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:117 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_15_54_539}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)500> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_15_54_539}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)501> f(AwMapRes).
ok
(h@19.0.0.18)502> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:14.185"
(h@19.0.0.18)503> 04:16:16.437 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:16:16.437" Took=22088 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_16_00_559}],[],[],[],[],[]}}}}] 
04:16:16.438 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",117,117},{"delta_send",117,118},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",237,0},{"sub_cancel",0,0}] 
04:16:17.560 [error] C3 propagation "2020-08-06T04:16:17.560" 
04:16:17.815 [error] C1 propagation "2020-08-06T04:16:17.815" 
04:16:17.868 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:16:17.868 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,119}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:118 
04:16:18.019 [error] Sending find_sub batch [] 
04:16:18.019 [error] Sending find_sub_aq batch [] 
04:16:18.019 [error] batched message propagation "2020-08-06T04:16:18.192" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_16_00_559}],
             [],[],[],...}}}}]}
(h@19.0.0.18)504> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_16_00_559}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)505> f(AwMapRes).
ok
(h@19.0.0.18)506> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:22.225"
(h@19.0.0.18)507> 04:16:23.458 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:16:23.458" Took=37690 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_16_12_602}],[],[],[],[],[],[],[],[]}}}}] 
04:16:23.458 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",118,118},{"delta_send",118,119},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",239,0},{"sub_cancel",0,0}] 
04:16:24.816 [error] C1 propagation "2020-08-06T04:16:24.816" 
04:16:24.865 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:16:24.865 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,120}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:119 
04:16:28.021 [error] Sending find_sub batch [] 
04:16:28.021 [error] Sending find_sub_aq batch [] 
04:16:28.021 [error] batched message propagation "2020-08-06T04:16:28.212" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_16_12_602}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)508> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_16_12_602}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)509> f(AwMapRes).
ok
(h@19.0.0.18)510> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:30.263"
(h@19.0.0.18)511> 04:16:30.450 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:16:30.450" Took=28184 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_16_18_623}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:30.450 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",119,119},{"delta_send",119,120},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",241,0},{"sub_cancel",0,0}] 
04:16:31.817 [error] C1 propagation "2020-08-06T04:16:31.817" 
04:16:31.863 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:16:31.912 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,121}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:120 
04:16:37.457 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:16:37.457" Took=34891 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_16_24_642}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:37.457 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",120,120},{"delta_send",120,121},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",243,0},{"sub_cancel",0,0}] 
04:16:38.022 [error] Sending find_sub batch [] 
04:16:38.022 [error] Sending find_sub_aq batch [] 
04:16:38.022 [error] batched message propagation "2020-08-06T04:16:38.222" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_16_24_642}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)512> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_16_24_642}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)513> f(AwMapRes).
ok
(h@19.0.0.18)514> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:38.301"
(h@19.0.0.18)515> 04:16:38.819 [error] C1 propagation "2020-08-06T04:16:38.819"  
04:16:38.859 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:16:38.859 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,122}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:121 
04:16:44.515 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:16:44.515" Took=26646 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_16_30_665}],[],[],[],[]}}}}] 
04:16:44.516 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",121,121},{"delta_send",121,122},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",245,0},{"sub_cancel",0,0}] 
04:16:45.820 [error] C1 propagation "2020-08-06T04:16:45.820" 
04:16:45.834 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:16:45.834 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,123}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:122 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_16_30_665}],
             [],[],...}}}}]}
(h@19.0.0.18)516> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_16_30_665}],
         [],[],[],[]}}}}]
(h@19.0.0.18)517> f(AwMapRes).
ok
(h@19.0.0.18)518> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:46.336"
(h@19.0.0.18)519> 04:16:47.678 [error] C2 propagation "2020-08-06T04:16:47.678"  
04:16:48.024 [error] Sending find_sub batch [] 
04:16:48.024 [error] Sending find_sub_aq batch [] 
04:16:48.024 [error] batched message propagation "2020-08-06T04:16:48.243" 
04:16:51.460 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:16:51.460" Took=24034 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_16_36_687}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:16:51.461 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",122,122},{"delta_send",122,123},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",247,0},{"sub_cancel",0,0}] 
04:16:52.821 [error] C1 propagation "2020-08-06T04:16:52.821" 
04:16:52.897 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:16:52.978 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,124}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:123 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_16_36_687}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)520> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_16_36_687}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)521> f(AwMapRes).
ok
(h@19.0.0.18)522> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:16:54.380"
(h@19.0.0.18)523> 04:16:58.026 [error] Sending find_sub batch [] 
04:16:58.026 [error] Sending find_sub_aq batch [] 
04:16:58.026 [error] batched message propagation "2020-08-06T04:16:58.261" 
04:16:58.459 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:16:58.459" Took=31582 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_16_42_707}],[],[],[],[],[],[],[]}}}}] 
04:16:58.520 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",123,123},{"delta_send",123,124},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",249,0},{"sub_cancel",0,0}] 
04:16:59.823 [error] C1 propagation "2020-08-06T04:16:59.823" 
04:16:59.826 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:16:59.849 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,125}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:124 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_16_42_707}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)524> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_16_42_707}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)525> f(AwMapRes).
ok
(h@19.0.0.18)526> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:02.423"
(h@19.0.0.18)527> 04:17:05.458 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:17:05.458" Took=30829 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_16_54_751}],[],[],[],[]}}}}] 
04:17:05.459 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",124,124},{"delta_send",124,125},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",251,0},{"sub_cancel",0,0}] 
04:17:06.825 [error] C1 propagation "2020-08-06T04:17:06.825" 
04:17:06.856 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:17:06.905 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,126}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:125 
04:17:08.028 [error] Sending find_sub batch [] 
04:17:08.028 [error] Sending find_sub_aq batch [] 
04:17:08.028 [error] batched message propagation "2020-08-06T04:17:08.282" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_16_54_751}],
             [],[],...}}}}]}
(h@19.0.0.18)528> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_16_54_751}],
         [],[],[],[]}}}}]
(h@19.0.0.18)529> f(AwMapRes).
ok
(h@19.0.0.18)530> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:10.461"
(h@19.0.0.18)531> 04:17:12.454 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:17:12.454" Took=28118 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_00_768}],[],[],[],[],[]}}}}] 
04:17:12.455 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",125,125},{"delta_send",125,126},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",253,0},{"sub_cancel",0,0}] 
04:17:13.827 [error] C1 propagation "2020-08-06T04:17:13.827" 
04:17:13.860 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:17:13.860 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,127}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:126 
04:17:18.030 [error] Sending find_sub batch [] 
04:17:18.030 [error] Sending find_sub_aq batch [] 
04:17:18.030 [error] batched message propagation "2020-08-06T04:17:18.303" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_17_00_768}],
             [],[],[],...}}}}]}
(h@19.0.0.18)532> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_17_00_768}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)533> f(AwMapRes).
ok
(h@19.0.0.18)534> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:18.501"
(h@19.0.0.18)535> 04:17:19.460 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:17:19.460" Took=30301 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_06_799}],[],[],[]}}}}] 
04:17:19.461 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",126,126},{"delta_send",126,127},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",255,0},{"sub_cancel",0,0}] 
04:17:20.828 [error] C1 propagation "2020-08-06T04:17:20.828" 
04:17:20.828 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:17:20.828 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,128}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:127 
04:17:26.465 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:17:26.465" Took=33438 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_12_820}],[]}}}}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)536> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@19.0.0.18)537> f(AwMapRes).
ok
(h@19.0.0.18)538> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:26.568"
(h@19.0.0.18)539> 04:17:26.465 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",127,127},{"delta_send",127,128},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",257,0},{"sub_cancel",0,0}] 
04:17:27.561 [error] C3 propagation "2020-08-06T04:17:27.561" 
04:17:27.680 [error] C2 propagation "2020-08-06T04:17:27.680" 
04:17:27.830 [error] C1 propagation "2020-08-06T04:17:27.830" 
04:17:27.904 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:17:27.904 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,129}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:128 
04:17:28.032 [error] Sending find_sub batch [] 
04:17:28.032 [error] Sending find_sub_aq batch [] 
04:17:28.032 [error] batched message propagation "2020-08-06T04:17:28.322" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)540> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@19.0.0.18)541> f(AwMapRes).
ok
(h@19.0.0.18)542> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:34.577"
(h@19.0.0.18)543> 04:17:34.832 [error] C1 propagation "2020-08-06T04:17:34.832"  
04:17:38.034 [error] Sending find_sub batch [] 
04:17:38.034 [error] Sending find_sub_aq batch [] 
04:17:38.034 [error] batched message propagation "2020-08-06T04:17:38.342" 
04:17:40.495 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:17:40.495" Took=51092 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_17_24_422}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:17:40.495 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",128,128},{"delta_send",128,129},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",259,0},{"sub_cancel",0,0}] 
04:17:41.834 [error] C1 propagation "2020-08-06T04:17:41.834" 
04:17:41.834 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:17:41.834 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,130}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:129 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_17_24_422}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)544> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_17_24_422}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)545> f(AwMapRes).
ok
(h@19.0.0.18)546> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:42.614"
(h@19.0.0.18)547> 04:17:47.472 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:17:47.472" Took=34599 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_36_467}],[],[],[],[],[]}}}}] 
04:17:47.472 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",129,129},{"delta_send",129,130},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",261,0},{"sub_cancel",0,0}] 
04:17:48.036 [error] Sending find_sub batch [] 
04:17:48.036 [error] Sending find_sub_aq batch [] 
04:17:48.036 [error] batched message propagation "2020-08-06T04:17:48.362" 
04:17:48.835 [error] C1 propagation "2020-08-06T04:17:48.835" 
04:17:48.835 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:17:48.835 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,131}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:130 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_17_36_467}],
             [],[],[],...}}}}]}
(h@19.0.0.18)548> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_17_36_467}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)549> f(AwMapRes).
ok
(h@19.0.0.18)550> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:50.653"
(h@19.0.0.18)551> 04:17:54.472 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:17:54.472" Took=34464 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_42_490}]}}}}] 
04:17:54.472 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",130,130},{"delta_send",130,131},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",263,0},{"sub_cancel",0,0}] 
04:17:55.836 [error] C1 propagation "2020-08-06T04:17:55.836" 
04:17:55.836 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:17:55.836 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,132}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:131 
04:17:58.037 [error] Sending find_sub batch [] 
04:17:58.037 [error] Sending find_sub_aq batch [] 
04:17:58.037 [error] batched message propagation "2020-08-06T04:17:58.372" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)552> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)553> f(AwMapRes).
ok
(h@19.0.0.18)554> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:17:58.692"
(h@19.0.0.18)555> 04:18:01.476 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:18:01.476" Took=34892 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_17_48_512}],[],[],[],[],[],[],[]}}}}] 
04:18:01.476 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",131,131},{"delta_send",131,132},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",265,0},{"sub_cancel",0,0}] 
04:18:02.838 [error] C1 propagation "2020-08-06T04:18:02.838" 
04:18:02.877 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:18:02.877 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,133}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:132 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_17_48_512}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)556> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_17_48_512}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)557> f(AwMapRes).
ok
(h@19.0.0.18)558> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:06.730"
(h@19.0.0.18)559> 04:18:07.682 [error] C2 propagation "2020-08-06T04:18:07.682"  
04:18:08.039 [error] Sending find_sub batch [] 
04:18:08.039 [error] Sending find_sub_aq batch [] 
04:18:08.039 [error] batched message propagation "2020-08-06T04:18:08.392" 
04:18:08.463 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:18:08.463" Took=24931 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_17_54_535}],[],[]}}}}] 
04:18:08.516 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",132,132},{"delta_send",132,133},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",267,0},{"sub_cancel",0,0}] 
04:18:09.840 [error] C1 propagation "2020-08-06T04:18:09.840" 
04:18:09.865 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:18:09.865 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,134}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:133 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@19.0.0.18)560> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_17_54_535}],
         [],[]}}}}]
(h@19.0.0.18)561> f(AwMapRes).
ok
(h@19.0.0.18)562> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:14.765"
(h@19.0.0.18)563> 04:18:15.481 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:18:15.480" Took=37583 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_18_00_554}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:15.481 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",133,133},{"delta_send",133,134},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",269,0},{"sub_cancel",0,0}] 
04:18:16.841 [error] C1 propagation "2020-08-06T04:18:16.841" 
04:18:16.841 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:18:16.841 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,135}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:134 
04:18:18.041 [error] Sending find_sub batch [] 
04:18:18.041 [error] Sending find_sub_aq batch [] 
04:18:18.041 [error] batched message propagation "2020-08-06T04:18:18.413" 
04:18:22.479 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:18:22.479" Took=35081 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_18_06_579}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:22.480 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",134,134},{"delta_send",134,135},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",271,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_18_06_579}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)564> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_18_06_579}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)565> f(AwMapRes).
ok
(h@19.0.0.18)566> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:22.805"
(h@19.0.0.18)567> 04:18:23.843 [error] C1 propagation "2020-08-06T04:18:23.843"  
04:18:23.843 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:18:23.843 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,136}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:135 
04:18:28.043 [error] Sending find_sub batch [] 
04:18:28.043 [error] Sending find_sub_aq batch [] 
04:18:28.043 [error] batched message propagation "2020-08-06T04:18:28.431" 
04:18:29.479 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:18:29.479" Took=33256 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_18_18_626}],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:29.479 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",135,135},{"delta_send",135,136},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",273,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_18_18_626}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)568> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_18_18_626}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)569> f(AwMapRes).
ok
(h@19.0.0.18)570> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:30.843"
(h@19.0.0.18)571> 04:18:30.844 [error] C1 propagation "2020-08-06T04:18:30.844"  
04:18:30.844 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:18:30.844 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,137}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:136 
04:18:36.485 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:18:36.485" Took=22643 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_18_24_647}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:36.485 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",136,136},{"delta_send",136,137},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",275,0},{"sub_cancel",0,0}] 
04:18:37.562 [error] C3 propagation "2020-08-06T04:18:37.562" 
04:18:37.845 [error] C1 propagation "2020-08-06T04:18:37.845" 
04:18:37.845 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:18:37.845 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,138}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:137 
04:18:38.045 [error] Sending find_sub batch [] 
04:18:38.045 [error] Sending find_sub_aq batch [] 
04:18:38.045 [error] batched message propagation "2020-08-06T04:18:38.453" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_18_24_647}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)572> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_18_24_647}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)573> f(AwMapRes).
ok
(h@19.0.0.18)574> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:38.887"
(h@19.0.0.18)575> 04:18:43.476 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:18:43.476" Took=25842 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_18_30_671}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:43.477 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",137,137},{"delta_send",137,138},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",277,0},{"sub_cancel",0,0}] 
04:18:44.846 [error] C1 propagation "2020-08-06T04:18:44.846" 
04:18:44.846 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:18:44.846 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,139}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:138 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_18_30_671}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)576> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_18_30_671}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)577> f(AwMapRes).
ok
(h@19.0.0.18)578> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:46.929"
(h@19.0.0.18)579> 04:18:47.684 [error] C2 propagation "2020-08-06T04:18:47.684"  
04:18:48.047 [error] Sending find_sub batch [] 
04:18:48.047 [error] Sending find_sub_aq batch [] 
04:18:48.047 [error] batched message propagation "2020-08-06T04:18:48.472" 
04:18:50.488 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:18:50.488" Took=35053 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_18_36_691}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:18:50.489 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",138,138},{"delta_send",138,139},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",279,0},{"sub_cancel",0,0}] 
04:18:51.847 [error] C1 propagation "2020-08-06T04:18:51.847" 
04:18:51.858 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:18:51.858 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,140}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:139 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_18_36_691}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)580> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_18_36_691}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)581> f(AwMapRes).
ok
(h@19.0.0.18)582> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:18:54.963"
(h@19.0.0.18)583> 04:18:57.486 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:18:57.485" Took=33985 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_18_42_711}],[],[],[],[],[],[],[],[]}}}}] 
04:18:57.487 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",139,139},{"delta_send",139,140},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",281,0},{"sub_cancel",0,0}] 
04:18:58.049 [error] Sending find_sub batch [] 
04:18:58.049 [error] Sending find_sub_aq batch [] 
04:18:58.049 [error] batched message propagation "2020-08-06T04:18:58.493" 
04:18:58.849 [error] C1 propagation "2020-08-06T04:18:58.849" 
04:18:58.898 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:18:58.939 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,141}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:140 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_18_42_711}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)584> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_18_42_711}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)585> f(AwMapRes).
ok
(h@19.0.0.18)586> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:03.732"
(h@19.0.0.18)587> 04:19:04.481 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:19:04.480" Took=27077 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_18_48_737}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:19:04.482 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",140,140},{"delta_send",140,141},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",283,0},{"sub_cancel",0,0}] 
04:19:05.850 [error] C1 propagation "2020-08-06T04:19:05.850" 
04:19:05.866 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:19:05.890 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,142}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:141 
04:19:08.051 [error] Sending find_sub batch [] 
04:19:08.051 [error] Sending find_sub_aq batch [] 
04:19:08.051 [error] batched message propagation "2020-08-06T04:19:08.511" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_18_48_737}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)588> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_18_48_737}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)589> f(AwMapRes).
ok
(h@19.0.0.18)590> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:11.418"
(h@19.0.0.18)591> 04:19:11.479 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:19:11.479" Took=21774 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_19_00_782}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:19:11.479 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",141,141},{"delta_send",141,142},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",285,0},{"sub_cancel",0,0}] 
04:19:12.851 [error] C1 propagation "2020-08-06T04:19:12.851" 
04:19:12.851 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:19:12.851 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,143}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:142 
04:19:18.052 [error] Sending find_sub batch [] 
04:19:18.052 [error] Sending find_sub_aq batch [] 
04:19:18.052 [error] batched message propagation "2020-08-06T04:19:18.524" 
04:19:18.479 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:19:18.479" Took=24926 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_06_806}],[],[],[],[],[]}}}}] 
04:19:18.479 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",142,142},{"delta_send",142,143},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",287,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_19_06_806}],
             [],[],[],...}}}}]}
(h@19.0.0.18)592> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_19_06_806}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)593> f(AwMapRes).
ok
(h@19.0.0.18)594> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:19.755"
(h@19.0.0.18)595> 04:19:19.852 [error] C1 propagation "2020-08-06T04:19:19.852"  
04:19:19.852 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:19:19.852 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,144}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:143 
04:19:25.483 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:19:25.483" Took=23937 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_19_12_827}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:19:25.484 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",143,143},{"delta_send",143,144},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",289,0},{"sub_cancel",0,0}] 
04:19:26.854 [error] C1 propagation "2020-08-06T04:19:26.854" 
04:19:26.857 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:19:26.899 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,145}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:144 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_19_12_827}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)596> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_19_12_827}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)597> f(AwMapRes).
ok
(h@19.0.0.18)598> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:27.112"
(h@19.0.0.18)599> 04:19:27.686 [error] C2 propagation "2020-08-06T04:19:27.686"  
04:19:28.054 [error] Sending find_sub batch [] 
04:19:28.054 [error] Sending find_sub_aq batch [] 
04:19:28.054 [error] batched message propagation "2020-08-06T04:19:28.544" 
04:19:32.497 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:19:32.497" Took=32080 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_18_848}],[],[],[],[]}}}}] 
04:19:32.497 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",144,144},{"delta_send",144,145},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",291,0},{"sub_cancel",0,0}] 
04:19:33.855 [error] C1 propagation "2020-08-06T04:19:33.855" 
04:19:33.871 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:19:33.871 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,146}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:145 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_19_18_848}],
             [],[],...}}}}]}
(h@19.0.0.18)600> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_19_18_848}],
         [],[],[],[]}}}}]
(h@19.0.0.18)601> f(AwMapRes).
ok
(h@19.0.0.18)602> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:35.151"
(h@19.0.0.18)603> 04:19:38.056 [error] Sending find_sub batch [] 
04:19:38.056 [error] Sending find_sub_aq batch [] 
04:19:38.056 [error] batched message propagation "2020-08-06T04:19:38.562" 
04:19:39.509 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:19:39.509" Took=37813 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_24_870}],[],[],[],[]}}}}] 
04:19:39.510 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",145,145},{"delta_send",145,146},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",293,0},{"sub_cancel",0,0}] 
04:19:40.856 [error] C1 propagation "2020-08-06T04:19:40.856" 
04:19:40.873 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:19:40.873 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,147}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:146 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_19_24_870}],
             [],[],...}}}}]}
(h@19.0.0.18)604> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_19_24_870}],
         [],[],[],[]}}}}]
(h@19.0.0.18)605> f(AwMapRes).
ok
(h@19.0.0.18)606> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:43.190"
(h@19.0.0.18)607> 04:19:46.496 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:19:46.496" Took=33398 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_19_30_891}],[],[],[],[]}}}}] 
04:19:46.497 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",146,146},{"delta_send",146,147},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",295,0},{"sub_cancel",0,0}] 
04:19:47.563 [error] C3 propagation "2020-08-06T04:19:47.563" 
04:19:47.857 [error] C1 propagation "2020-08-06T04:19:47.857" 
04:19:47.904 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:19:47.904 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,148}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:147 
04:19:48.058 [error] Sending find_sub batch [] 
04:19:48.058 [error] Sending find_sub_aq batch [] 
04:19:48.058 [error] batched message propagation "2020-08-06T04:19:48.581" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_19_30_891}],
             [],[],...}}}}]}
(h@19.0.0.18)608> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_19_30_891}],
         [],[],[],[]}}}}]
(h@19.0.0.18)609> f(AwMapRes).
ok
(h@19.0.0.18)610> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:51.226"
(h@19.0.0.18)611> 04:19:53.507 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:19:53.506" Took=42708 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_19_42_935}],[],[],[],[],[],[],[],[]}}}}] 
04:19:53.508 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",147,147},{"delta_send",147,148},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",297,0},{"sub_cancel",0,0}] 
04:19:54.858 [error] C1 propagation "2020-08-06T04:19:54.858" 
04:19:54.858 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:19:54.859 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,149}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:148 
04:19:58.059 [error] Sending find_sub batch [] 
04:19:58.059 [error] Sending find_sub_aq batch [] 
04:19:58.059 [error] batched message propagation "2020-08-06T04:19:58.591" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_19_42_935}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)612> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_19_42_935}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)613> f(AwMapRes).
ok
(h@19.0.0.18)614> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:19:59.264"
(h@19.0.0.18)615> 04:20:00.501 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:20:00.500" Took=37027 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_19_48_958}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:20:00.501 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",148,148},{"delta_send",148,149},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",299,0},{"sub_cancel",0,0}] 
04:20:01.859 [error] C1 propagation "2020-08-06T04:20:01.859" 
04:20:01.894 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:20:01.894 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,150}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:149 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_19_48_958}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)616> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_19_48_958}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)617> f(AwMapRes).
ok
(h@19.0.0.18)618> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:07.302"
(h@19.0.0.18)619> 04:20:07.488 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:20:07.488" Took=21589 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_19_54_980}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:20:07.489 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",149,149},{"delta_send",149,150},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",301,0},{"sub_cancel",0,0}] 
04:20:07.688 [error] C2 propagation "2020-08-06T04:20:07.688" 
04:20:08.061 [error] Sending find_sub batch [] 
04:20:08.061 [error] Sending find_sub_aq batch [] 
04:20:08.061 [error] batched message propagation "2020-08-06T04:20:08.611" 
04:20:08.860 [error] C1 propagation "2020-08-06T04:20:08.860" 
04:20:08.883 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:20:08.883 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,151}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:150 
04:20:14.498 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:20:14.498" Took=30611 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_20_01_004}],[],[],[],[],[],[],[]}}}}] 
04:20:14.498 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",150,150},{"delta_send",150,151},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",303,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_01_004}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)620> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_01_004}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)621> f(AwMapRes).
ok
(h@19.0.0.18)622> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:15.333"
(h@19.0.0.18)623> 04:20:15.861 [error] C1 propagation "2020-08-06T04:20:15.861"  
04:20:15.898 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:20:15.898 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,152}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:151 
04:20:18.064 [error] Sending find_sub batch [] 
04:20:18.064 [error] Sending find_sub_aq batch [] 
04:20:18.064 [error] batched message propagation "2020-08-06T04:20:18.646" 
04:20:21.503 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:20:21.503" Took=30785 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_07_023}],[],[],[],[],[],[]}}}}] 
04:20:21.503 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",151,151},{"delta_send",151,152},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",305,0},{"sub_cancel",0,0}] 
04:20:22.862 [error] C1 propagation "2020-08-06T04:20:22.862" 
04:20:22.874 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:20:22.874 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,153}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:152 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_07_023}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)624> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_07_023}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)625> f(AwMapRes).
ok
(h@19.0.0.18)626> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:23.378"
(h@19.0.0.18)627> 04:20:28.066 [error] Sending find_sub batch [] 
04:20:28.066 [error] Sending find_sub_aq batch [] 
04:20:28.066 [error] batched message propagation "2020-08-06T04:20:28.662" 
04:20:28.497 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:20:28.497" Took=22079 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_20_13_042}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:20:28.497 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",152,152},{"delta_send",152,153},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",307,0},{"sub_cancel",0,0}] 
04:20:29.864 [error] C1 propagation "2020-08-06T04:20:29.864" 
04:20:29.864 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:20:29.864 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,154}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:153 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_20_13_042}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)628> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_20_13_042}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)629> f(AwMapRes).
ok
(h@19.0.0.18)630> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:31.419"
(h@19.0.0.18)631> 04:20:35.510 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:20:35.510" Took=34074 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_20_25_093}],[],[],[],[],[],[],[]}}}}] 
04:20:35.510 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",153,153},{"delta_send",153,154},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",309,0},{"sub_cancel",0,0}] 
04:20:36.865 [error] C1 propagation "2020-08-06T04:20:36.865" 
04:20:36.865 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:20:36.865 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,155}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:154 
04:20:38.068 [error] Sending find_sub batch [] 
04:20:38.068 [error] Sending find_sub_aq batch [] 
04:20:38.068 [error] batched message propagation "2020-08-06T04:20:38.682" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_25_093}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)632> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_25_093}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)633> f(AwMapRes).
ok
(h@19.0.0.18)634> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:39.456"
(h@19.0.0.18)635> 04:20:42.785 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:20:42.785" Took=21287 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_31_127}],[],[]}}}}] 
04:20:42.787 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",154,154},{"delta_send",154,155},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",311,0},{"sub_cancel",0,0}] 
04:20:43.866 [error] C1 propagation "2020-08-06T04:20:43.866" 
04:20:43.866 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:20:43.866 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,156}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:155 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@19.0.0.18)636> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_31_127}],
         [],[]}}}}]
(h@19.0.0.18)637> f(AwMapRes).
ok
(h@19.0.0.18)638> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:47.493"
(h@19.0.0.18)639> 04:20:47.689 [error] C2 propagation "2020-08-06T04:20:47.689"  
04:20:48.070 [error] Sending find_sub batch [] 
04:20:48.070 [error] Sending find_sub_aq batch [] 
04:20:48.070 [error] batched message propagation "2020-08-06T04:20:48.701" 
04:20:49.499 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:20:49.499" Took=24047 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_20_37_147}],[],[],[],[],[],[],[],[]}}}}] 
04:20:49.499 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",155,155},{"delta_send",155,156},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",313,0},{"sub_cancel",0,0}] 
04:20:50.867 [error] C1 propagation "2020-08-06T04:20:50.867" 
04:20:50.867 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:20:50.867 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,157}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:156 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_20_37_147}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)640> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_20_37_147}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)641> f(AwMapRes).
ok
(h@19.0.0.18)642> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:20:55.532"
(h@19.0.0.18)643> 04:20:56.504 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:20:56.504" Took=23722 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_43_168}],[]}}}}] 
04:20:56.505 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",156,156},{"delta_send",156,157},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",315,0},{"sub_cancel",0,0}] 
04:20:57.564 [error] C3 propagation "2020-08-06T04:20:57.564" 
04:20:57.868 [error] C1 propagation "2020-08-06T04:20:57.868" 
04:20:57.901 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:20:57.901 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,158}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:157 
04:20:58.072 [error] Sending find_sub batch [] 
04:20:58.072 [error] Sending find_sub_aq batch [] 
04:20:58.072 [error] batched message propagation "2020-08-06T04:20:58.721" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)644> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@19.0.0.18)645> f(AwMapRes).
ok
(h@19.0.0.18)646> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:03.570"
(h@19.0.0.18)647> 04:21:04.869 [error] C1 propagation "2020-08-06T04:21:04.869"  
04:21:05.159 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:21:05.159" Took=23444 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_20_49_189}],[],[],[],[],[]}}}}] 
04:21:05.160 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",157,157},{"delta_send",157,158},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",317,0},{"sub_cancel",0,0}] 
04:21:08.074 [error] Sending find_sub batch [] 
04:21:08.074 [error] Sending find_sub_aq batch [] 
04:21:08.074 [error] batched message propagation "2020-08-06T04:21:08.742" 
04:21:10.508 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:21:10.507" Took=27870 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_20_55_212}],[],[],[],[],[],[],[]}}}}] 
04:21:10.508 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",158,157},{"delta_send",157,159},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",318,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_20_55_212}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)648> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_20_55_212}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)649> f(AwMapRes).
ok
(h@19.0.0.18)650> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:11.605"
(h@19.0.0.18)651> 04:21:11.871 [error] C1 propagation "2020-08-06T04:21:11.871"  
04:21:11.898 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:21:11.898 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,160}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:159 
04:21:17.508 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:21:17.508" Took=24350 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_07_253}],[]}}}}] 
04:21:17.508 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",159,158},{"delta_send",158,160},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",320,0},{"sub_cancel",0,0}] 
04:21:18.076 [error] Sending find_sub batch [] 
04:21:18.076 [error] Sending find_sub_aq batch [] 
04:21:18.076 [error] batched message propagation "2020-08-06T04:21:18.761" 
04:21:18.872 [error] C1 propagation "2020-08-06T04:21:18.872" 
04:21:18.957 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:21:18.957 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,161}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:160 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)652> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@19.0.0.18)653> f(AwMapRes).
ok
(h@19.0.0.18)654> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:19.643"
(h@19.0.0.18)655> 04:21:24.626 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:21:24.625" Took=23079 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_13_271}]}}}}] 
04:21:24.626 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",160,159},{"delta_send",159,161},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",322,0},{"sub_cancel",0,0}] 
04:21:25.874 [error] C1 propagation "2020-08-06T04:21:25.874" 
04:21:25.907 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:21:25.907 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,162}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:161 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)656> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)657> f(AwMapRes).
ok
(h@19.0.0.18)658> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:27.685"
(h@19.0.0.18)659> 04:21:27.690 [error] C2 propagation "2020-08-06T04:21:27.690"  
04:21:28.078 [error] Sending find_sub batch [] 
04:21:28.078 [error] Sending find_sub_aq batch [] 
04:21:28.078 [error] batched message propagation "2020-08-06T04:21:28.782" 
04:21:31.573 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:21:31.573" Took=33276 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_21_19_295}],[],[],[],[],[],[],[]}}}}] 
04:21:31.573 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",161,160},{"delta_send",160,162},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",324,0},{"sub_cancel",0,0}] 
04:21:32.876 [error] C1 propagation "2020-08-06T04:21:32.876" 
04:21:32.892 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:21:32.892 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,163}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:162 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_21_19_295}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)660> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_19_295}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)661> f(AwMapRes).
ok
(h@19.0.0.18)662> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:35.728"
(h@19.0.0.18)663> 04:21:38.080 [error] Sending find_sub batch [] 
04:21:38.080 [error] Sending find_sub_aq batch [] 
04:21:38.080 [error] batched message propagation "2020-08-06T04:21:38.802" 
04:21:38.527 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:21:38.527" Took=36607 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_25_319}],[],[]}}}}] 
04:21:38.527 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",162,161},{"delta_send",161,163},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",326,0},{"sub_cancel",0,0}] 
04:21:39.877 [error] C1 propagation "2020-08-06T04:21:39.877" 
04:21:39.889 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:21:39.890 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,164}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:163 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@19.0.0.18)664> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_25_319}],
         [],[]}}}}]
(h@19.0.0.18)665> f(AwMapRes).
ok
(h@19.0.0.18)666> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:43.767"
(h@19.0.0.18)667> 04:21:45.519 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:21:45.519" Took=31599 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_31_340}],[],[],[],[],[],[]}}}}] 
04:21:45.523 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",163,162},{"delta_send",162,164},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",328,0},{"sub_cancel",0,0}] 
04:21:46.879 [error] C1 propagation "2020-08-06T04:21:46.879" 
04:21:46.879 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:21:46.879 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,165}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:164 
04:21:48.082 [error] Sending find_sub batch [] 
04:21:48.082 [error] Sending find_sub_aq batch [] 
04:21:48.082 [error] batched message propagation "2020-08-06T04:21:48.822" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_21_31_340}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)668> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_31_340}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)669> f(AwMapRes).
ok
(h@19.0.0.18)670> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:51.802"
(h@19.0.0.18)671> 04:21:52.526 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:21:52.525" Took=35384 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_21_37_359}],[],[],[],[],[],[]}}}}] 
04:21:52.526 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",164,163},{"delta_send",163,165},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",330,0},{"sub_cancel",0,0}] 
04:21:53.880 [error] C1 propagation "2020-08-06T04:21:53.880" 
04:21:53.917 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:21:53.918 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,166}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:165 
04:21:58.084 [error] Sending find_sub batch [] 
04:21:58.084 [error] Sending find_sub_aq batch [] 
04:21:58.084 [error] batched message propagation "2020-08-06T04:21:58.842" 
04:21:59.537 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:21:59.537" Took=40746 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_21_49_399}],[],[],[],[],[],[],[],[],[]}}}}] 
04:21:59.538 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",165,164},{"delta_send",164,166},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",332,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_21_49_399}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)672> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_21_49_399}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)673> f(AwMapRes).
ok
(h@19.0.0.18)674> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:21:59.839"
(h@19.0.0.18)675> 04:22:00.882 [error] C1 propagation "2020-08-06T04:22:00.882"  
04:22:00.882 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:22:00.882 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,167}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:166 
04:22:06.652 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:22:06.652" Took=39768 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_21_55_419}],[],[],[],[],[],[],[]}}}}] 
04:22:06.652 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",166,165},{"delta_send",165,167},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",334,0},{"sub_cancel",0,0}] 
04:22:07.565 [error] C3 propagation "2020-08-06T04:22:07.565" 
04:22:07.691 [error] C2 propagation "2020-08-06T04:22:07.691" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_21_55_419}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)676> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_21_55_419}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)677> f(AwMapRes).
ok
(h@19.0.0.18)678> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:07.877"
(h@19.0.0.18)679> 04:22:07.884 [error] C1 propagation "2020-08-06T04:22:07.884"  
04:22:07.908 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:22:07.908 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,168}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:167 
04:22:08.086 [error] Sending find_sub batch [] 
04:22:08.086 [error] Sending find_sub_aq batch [] 
04:22:08.086 [error] batched message propagation "2020-08-06T04:22:08.861" 
04:22:13.529 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:22:13.528" Took=31616 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_22_01_442}],[],[],[]}}}}] 
04:22:13.529 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",167,166},{"delta_send",166,168},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",336,0},{"sub_cancel",0,0}] 
04:22:14.885 [error] C1 propagation "2020-08-06T04:22:14.885" 
04:22:14.885 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:22:14.885 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,169}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:168 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@19.0.0.18)680> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_22_01_442}],
         [],[],[]}}}}]
(h@19.0.0.18)681> f(AwMapRes).
ok
(h@19.0.0.18)682> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:15.916"
(h@19.0.0.18)683> 04:22:18.088 [error] Sending find_sub batch [] 
04:22:18.088 [error] Sending find_sub_aq batch [] 
04:22:18.088 [error] batched message propagation "2020-08-06T04:22:18.882" 
04:22:20.529 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:22:20.528" Took=32153 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_22_07_458}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:20.530 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",168,167},{"delta_send",167,169},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",338,0},{"sub_cancel",0,0}] 
04:22:21.886 [error] C1 propagation "2020-08-06T04:22:21.886" 
04:22:21.886 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:22:21.886 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,170}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:169 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_22_07_458}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)684> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_22_07_458}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)685> f(AwMapRes).
ok
(h@19.0.0.18)686> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:23.951"
(h@19.0.0.18)687> 04:22:27.535 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:22:27.535" Took=35547 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_22_13_479}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:27.536 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",169,168},{"delta_send",168,170},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",340,0},{"sub_cancel",0,0}] 
04:22:28.089 [error] Sending find_sub batch [] 
04:22:28.089 [error] Sending find_sub_aq batch [] 
04:22:28.089 [error] batched message propagation "2020-08-06T04:22:28.891" 
04:22:28.888 [error] C1 propagation "2020-08-06T04:22:28.888" 
04:22:28.888 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:22:28.888 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,171}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:170 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_22_13_479}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)688> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_22_13_479}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)689> f(AwMapRes).
ok
(h@19.0.0.18)690> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:31.992"
(h@19.0.0.18)691> 04:22:34.533 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:22:34.533" Took=30586 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_22_19_499}],[],[],[],[],[]}}}}] 
04:22:34.533 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",170,169},{"delta_send",169,171},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",342,0},{"sub_cancel",0,0}] 
04:22:35.889 [error] C1 propagation "2020-08-06T04:22:35.889" 
04:22:35.974 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:22:35.975 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,172}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:171 
04:22:38.091 [error] Sending find_sub batch [] 
04:22:38.091 [error] Sending find_sub_aq batch [] 
04:22:38.091 [error] batched message propagation "2020-08-06T04:22:38.912" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_22_19_499}],
             [],[],[],...}}}}]}
(h@19.0.0.18)692> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_22_19_499}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)693> f(AwMapRes).
ok
(h@19.0.0.18)694> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:40.301"
(h@19.0.0.18)695> 04:22:41.525 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:22:41.525" Took=25314 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_22_31_098}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:41.526 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",171,170},{"delta_send",170,172},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",344,0},{"sub_cancel",0,0}] 
04:22:42.891 [error] C1 propagation "2020-08-06T04:22:42.891" 
04:22:42.891 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:22:42.891 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,173}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:172 
04:22:47.693 [error] C2 propagation "2020-08-06T04:22:47.693" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_22_31_098}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)696> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_22_31_098}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)697> f(AwMapRes).
ok
(h@19.0.0.18)698> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:48.668"
(h@19.0.0.18)699> 04:22:48.093 [error] Sending find_sub batch [] 
04:22:48.093 [error] Sending find_sub_aq batch [] 
04:22:48.093 [error] batched message propagation "2020-08-06T04:22:48.931" 
04:22:48.526 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:22:48.526" Took=25495 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_22_37_115}],[]}}}}] 
04:22:48.526 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",172,171},{"delta_send",171,173},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",346,0},{"sub_cancel",0,0}] 
04:22:49.892 [error] C1 propagation "2020-08-06T04:22:49.892" 
04:22:49.892 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:22:49.892 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,174}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:173 
04:22:55.527 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:22:55.527" Took=23568 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_22_43_136}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:22:55.528 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",173,172},{"delta_send",172,174},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",348,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_22_43_136}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)700> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_22_43_136}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)701> f(AwMapRes).
ok
(h@19.0.0.18)702> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:22:56.102"
(h@19.0.0.18)703> 04:22:56.893 [error] C1 propagation "2020-08-06T04:22:56.893"  
04:22:56.909 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:22:56.909 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,175}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:174 
04:22:58.095 [error] Sending find_sub batch [] 
04:22:58.095 [error] Sending find_sub_aq batch [] 
04:22:58.095 [error] batched message propagation "2020-08-06T04:22:58.953" 
04:23:02.611 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:23:02.611" Took=28213 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_22_49_159}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:23:02.611 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",174,173},{"delta_send",173,175},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",350,0},{"sub_cancel",0,0}] 
04:23:03.895 [error] C1 propagation "2020-08-06T04:23:03.895" 
04:23:03.895 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:23:03.895 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,176}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:175 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_22_49_159}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)704> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_22_49_159}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)705> f(AwMapRes).
ok
(h@19.0.0.18)706> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:04.158"
(h@19.0.0.18)707> 04:23:08.097 [error] Sending find_sub batch [] 
04:23:08.097 [error] Sending find_sub_aq batch [] 
04:23:08.097 [error] batched message propagation "2020-08-06T04:23:08.974" 
04:23:09.613 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:23:09.613" Took=31723 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_22_55_179}],[],[],[],[],[],[],[],[]}}}}] 
04:23:09.613 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",175,174},{"delta_send",174,176},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",352,0},{"sub_cancel",0,0}] 
04:23:10.896 [error] C1 propagation "2020-08-06T04:23:10.896" 
04:23:10.896 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:23:10.896 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,177}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:176 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_22_55_179}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)708> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_22_55_179}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)709> f(AwMapRes).
ok
(h@19.0.0.18)710> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:12.195"
(h@19.0.0.18)711> 04:23:16.609 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:23:16.609" Took=25537 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_23_01_208}],[],[],[],[],[],[],[]}}}}] 
04:23:16.610 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",176,175},{"delta_send",175,177},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",354,0},{"sub_cancel",0,0}] 
04:23:17.566 [error] C3 propagation "2020-08-06T04:23:17.566" 
04:23:17.897 [error] C1 propagation "2020-08-06T04:23:17.897" 
04:23:17.897 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:23:17.897 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,178}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:177 
04:23:18.099 [error] Sending find_sub batch [] 
04:23:18.099 [error] Sending find_sub_aq batch [] 
04:23:18.099 [error] batched message propagation "2020-08-06T04:23:18.991" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_23_01_208}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)712> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_01_208}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)713> f(AwMapRes).
ok
(h@19.0.0.18)714> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:20.232"
(h@19.0.0.18)715> 04:23:23.612 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:23:23.612" Took=25779 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_23_13_250}],[],[],[],[],[]}}}}] 
04:23:23.614 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",177,176},{"delta_send",176,178},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",356,0},{"sub_cancel",0,0}] 
04:23:24.898 [error] C1 propagation "2020-08-06T04:23:24.898" 
04:23:24.898 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:23:24.898 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,179}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:178 
04:23:27.694 [error] C2 propagation "2020-08-06T04:23:27.694" 
04:23:28.101 [error] Sending find_sub batch [] 
04:23:28.101 [error] Sending find_sub_aq batch [] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_23_13_250}],
             [],[],[],...}}}}]}
(h@19.0.0.18)716> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_13_250}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)717> f(AwMapRes).
ok
(h@19.0.0.18)718> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:28.272"
(h@19.0.0.18)719> 04:23:28.101 [error] batched message propagation "2020-08-06T04:23:28.101" 
04:23:30.625 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:23:30.624" Took=34687 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_23_19_275}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:23:30.626 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",178,177},{"delta_send",177,179},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",358,0},{"sub_cancel",0,0}] 
04:23:31.899 [error] C1 propagation "2020-08-06T04:23:31.899" 
04:23:31.899 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:23:31.899 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,180}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:179 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_23_19_275}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)720> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_23_19_275}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)721> f(AwMapRes).
ok
(h@19.0.0.18)722> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:36.307"
(h@19.0.0.18)723> 04:23:37.618 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:23:37.618" Took=34829 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_23_25_295}],[],[]}}}}] 
04:23:37.619 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",179,178},{"delta_send",178,180},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",360,0},{"sub_cancel",0,0}] 
04:23:38.103 [error] Sending find_sub batch [] 
04:23:38.103 [error] Sending find_sub_aq batch [] 
04:23:38.103 [error] batched message propagation "2020-08-06T04:23:38.103" 
04:23:38.900 [error] C1 propagation "2020-08-06T04:23:38.900" 
04:23:38.900 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:23:38.900 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,181}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:180 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@19.0.0.18)724> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_25_295}],
         [],[]}}}}]
(h@19.0.0.18)725> f(AwMapRes).
ok
(h@19.0.0.18)726> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:44.347"
(h@19.0.0.18)727> 04:23:44.610 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:23:44.609" Took=22764 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_23_31_312}],[],[],[],[],[],[],[]}}}}] 
04:23:44.610 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",180,179},{"delta_send",179,181},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",362,0},{"sub_cancel",0,0}] 
04:23:45.901 [error] C1 propagation "2020-08-06T04:23:45.901" 
04:23:45.901 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:23:45.901 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,182}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:181 
04:23:48.105 [error] Sending find_sub batch [] 
04:23:48.105 [error] Sending find_sub_aq batch [] 
04:23:48.105 [error] batched message propagation "2020-08-06T04:23:48.105" 
04:23:51.642 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:23:51.642" Took=52300 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_23_37_335}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:23:51.643 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",181,180},{"delta_send",180,182},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",364,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_23_37_335}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)728> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_23_37_335}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)729> f(AwMapRes).
ok
(h@19.0.0.18)730> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:23:52.390"
(h@19.0.0.18)731> 04:23:52.902 [error] C1 propagation "2020-08-06T04:23:52.902"  
04:23:52.902 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:23:52.902 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,183}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:182 
04:23:58.107 [error] Sending find_sub batch [] 
04:23:58.107 [error] Sending find_sub_aq batch [] 
04:23:58.107 [error] batched message propagation "2020-08-06T04:23:58.107" 
04:23:58.617 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:23:58.617" Took=25739 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_23_43_354}],[],[],[],[],[],[]}}}}] 
04:23:58.617 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",182,181},{"delta_send",181,183},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",366,0},{"sub_cancel",0,0}] 
04:23:59.903 [error] C1 propagation "2020-08-06T04:23:59.903" 
04:23:59.903 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:23:59.903 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,184}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:183 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_23_43_354}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)732> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_23_43_354}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)733> f(AwMapRes).
ok
(h@19.0.0.18)734> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:00.424"
(h@19.0.0.18)735> 04:24:05.772 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:24:05.772" Took=24671 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_23_55_395}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:05.773 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",183,182},{"delta_send",182,184},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",368,0},{"sub_cancel",0,0}] 
04:24:06.904 [error] C1 propagation "2020-08-06T04:24:06.904" 
04:24:06.918 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:24:06.985 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,185}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:184 
04:24:07.696 [error] C2 propagation "2020-08-06T04:24:07.696" 
04:24:08.108 [error] Sending find_sub batch [] 
04:24:08.108 [error] Sending find_sub_aq batch [] 
04:24:08.108 [error] batched message propagation "2020-08-06T04:24:08.108" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_23_55_395}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)736> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_23_55_395}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)737> f(AwMapRes).
ok
(h@19.0.0.18)738> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:08.464"
(h@19.0.0.18)739> 04:24:12.624 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:24:12.623" Took=28456 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_24_01_415}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:12.624 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",184,183},{"delta_send",183,185},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",370,0},{"sub_cancel",0,0}] 
04:24:13.905 [error] C1 propagation "2020-08-06T04:24:13.905" 
04:24:13.911 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:24:13.911 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,186}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:185 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_24_01_415}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)740> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_24_01_415}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)741> f(AwMapRes).
ok
(h@19.0.0.18)742> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:16.505"
(h@19.0.0.18)743> 04:24:18.109 [error] Sending find_sub batch [] 
04:24:18.109 [error] Sending find_sub_aq batch [] 
04:24:18.109 [error] batched message propagation "2020-08-06T04:24:18.109" 
04:24:19.629 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:24:19.629" Took=27566 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_24_07_434}],[],[],[],[]}}}}] 
04:24:19.629 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",185,184},{"delta_send",184,186},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",372,0},{"sub_cancel",0,0}] 
04:24:20.907 [error] C1 propagation "2020-08-06T04:24:20.907" 
04:24:20.927 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:24:20.927 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,187}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:186 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_24_07_434}],
             [],[],...}}}}]}
(h@19.0.0.18)744> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_24_07_434}],
         [],[],[],[]}}}}]
(h@19.0.0.18)745> f(AwMapRes).
ok
(h@19.0.0.18)746> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:24.577"
(h@19.0.0.18)747> 04:24:26.634 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:24:26.634" Took=34908 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_24_13_457}],[],[],[],[],[],[],[],[]}}}}] 
04:24:26.635 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",186,185},{"delta_send",185,187},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",374,0},{"sub_cancel",0,0}] 
04:24:27.568 [error] C3 propagation "2020-08-06T04:24:27.568" 
04:24:27.908 [error] C1 propagation "2020-08-06T04:24:27.908" 
04:24:27.941 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:24:27.941 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,188}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:187 
04:24:28.111 [error] Sending find_sub batch [] 
04:24:28.111 [error] Sending find_sub_aq batch [] 
04:24:28.111 [error] batched message propagation "2020-08-06T04:24:28.111" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_24_13_457}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)748> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_24_13_457}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)749> f(AwMapRes).
ok
(h@19.0.0.18)750> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:32.578"
(h@19.0.0.18)751> 04:24:33.626 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:24:33.626" Took=27995 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_24_19_479}],[],[]}}}}] 
04:24:33.626 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",187,186},{"delta_send",186,188},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",376,0},{"sub_cancel",0,0}] 
04:24:34.910 [error] C1 propagation "2020-08-06T04:24:34.910" 
04:24:34.954 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:24:34.954 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,189}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:188 
04:24:38.112 [error] Sending find_sub batch [] 
04:24:38.112 [error] Sending find_sub_aq batch [] 
04:24:38.112 [error] batched message propagation "2020-08-06T04:24:38.112" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@19.0.0.18)752> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_24_19_479}],
         [],[]}}}}]
(h@19.0.0.18)753> f(AwMapRes).
ok
(h@19.0.0.18)754> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:40.620"
(h@19.0.0.18)755> 04:24:40.645 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:24:40.645" Took=33273 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_24_25_499}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:40.645 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",188,187},{"delta_send",187,189},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",378,0},{"sub_cancel",0,0}] 
04:24:41.912 [error] C1 propagation "2020-08-06T04:24:41.912" 
04:24:41.912 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:24:41.912 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,190}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:189 
04:24:47.638 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:24:47.638" Took=36242 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_24_37_543}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:47.642 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",189,188},{"delta_send",188,190},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",380,0},{"sub_cancel",0,0}] 
04:24:47.697 [error] C2 propagation "2020-08-06T04:24:47.697" 
04:24:48.114 [error] Sending find_sub batch [] 
04:24:48.114 [error] Sending find_sub_aq batch [] 
04:24:48.114 [error] batched message propagation "2020-08-06T04:24:48.114" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_24_37_543}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)756> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_24_37_543}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)757> f(AwMapRes).
ok
(h@19.0.0.18)758> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:48.658"
(h@19.0.0.18)759> 04:24:48.913 [error] C1 propagation "2020-08-06T04:24:48.913"  
04:24:48.913 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:24:48.913 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,191}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:190 
04:24:54.636 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:24:54.636" Took=28955 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_24_43_563}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:24:54.636 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",190,189},{"delta_send",189,191},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",382,0},{"sub_cancel",0,0}] 
04:24:55.914 [error] C1 propagation "2020-08-06T04:24:55.914" 
04:24:55.914 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:24:55.915 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,192}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:191 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_24_43_563}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)760> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_24_43_563}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)761> f(AwMapRes).
ok
(h@19.0.0.18)762> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:24:56.702"
(h@19.0.0.18)763> 04:24:58.115 [error] Sending find_sub batch [] 
04:24:58.115 [error] Sending find_sub_aq batch [] 
04:24:58.115 [error] batched message propagation "2020-08-06T04:24:58.115" 
04:25:01.695 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:25:01.694" Took=24232 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_24_49_586}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:25:01.695 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",191,190},{"delta_send",190,192},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",384,0},{"sub_cancel",0,0}] 
04:25:02.915 [error] C1 propagation "2020-08-06T04:25:02.915" 
04:25:02.972 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:25:02.980 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,193}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:192 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_24_49_586}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)764> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_24_49_586}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)765> f(AwMapRes).
ok
(h@19.0.0.18)766> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:04.738"
(h@19.0.0.18)767> 04:25:08.116 [error] Sending find_sub batch [] 
04:25:08.116 [error] Sending find_sub_aq batch [] 
04:25:08.116 [error] batched message propagation "2020-08-06T04:25:08.116" 
04:25:08.637 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:25:08.637" Took=31100 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_24_55_609}],[],[],[],[],[],[],[]}}}}] 
04:25:08.639 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",192,191},{"delta_send",191,193},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",386,0},{"sub_cancel",0,0}] 
04:25:09.916 [error] C1 propagation "2020-08-06T04:25:09.916" 
04:25:09.916 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:25:09.916 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,194}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:193 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_24_55_609}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)768> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_24_55_609}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)769> f(AwMapRes).
ok
(h@19.0.0.18)770> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:12.778"
(h@19.0.0.18)771> 04:25:15.639 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:25:15.639" Took=30382 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_01_627}],[],[],[],[],[]}}}}] 
04:25:15.640 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",193,192},{"delta_send",192,194},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",388,0},{"sub_cancel",0,0}] 
04:25:16.917 [error] C1 propagation "2020-08-06T04:25:16.917" 
04:25:16.917 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:25:16.917 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,195}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:194 
04:25:18.117 [error] Sending find_sub batch [] 
04:25:18.117 [error] Sending find_sub_aq batch [] 
04:25:18.117 [error] batched message propagation "2020-08-06T04:25:18.117" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_25_01_627}],
             [],[],[],...}}}}]}
(h@19.0.0.18)772> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_25_01_627}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)773> f(AwMapRes).
ok
(h@19.0.0.18)774> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:20.812"
(h@19.0.0.18)775> 04:25:22.646 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:25:22.645" Took=35262 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_07_644}],[],[],[],[],[],[]}}}}] 
04:25:22.646 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",194,193},{"delta_send",193,195},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",390,0},{"sub_cancel",0,0}] 
04:25:23.919 [error] C1 propagation "2020-08-06T04:25:23.919" 
04:25:23.919 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:25:23.919 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,196}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:195 
04:25:27.698 [error] C2 propagation "2020-08-06T04:25:27.698" 
04:25:28.119 [error] Sending find_sub batch [] 
04:25:28.119 [error] Sending find_sub_aq batch [] 
04:25:28.119 [error] batched message propagation "2020-08-06T04:25:28.119" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_25_07_644}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)776> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_25_07_644}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)777> f(AwMapRes).
ok
(h@19.0.0.18)778> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:28.850"
(h@19.0.0.18)779> 04:25:29.646 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:25:29.646" Took=30523 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_13_667}],[],[],[],[]}}}}] 
04:25:29.647 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",195,194},{"delta_send",194,196},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",392,0},{"sub_cancel",0,0}] 
04:25:30.920 [error] C1 propagation "2020-08-06T04:25:30.920" 
04:25:30.931 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:25:30.931 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,197}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:196 
04:25:36.648 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:25:36.647" Took=34088 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_25_25_705}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:25:36.648 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",196,195},{"delta_send",195,197},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",394,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_25_25_705}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)780> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_25_25_705}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)781> f(AwMapRes).
ok
(h@19.0.0.18)782> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:36.890"
(h@19.0.0.18)783> 04:25:37.569 [error] C3 propagation "2020-08-06T04:25:37.569"  
04:25:37.921 [error] C1 propagation "2020-08-06T04:25:37.921" 
04:25:37.963 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:25:37.964 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,198}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:197 
04:25:38.121 [error] Sending find_sub batch [] 
04:25:38.121 [error] Sending find_sub_aq batch [] 
04:25:38.121 [error] batched message propagation "2020-08-06T04:25:38.121" 
04:25:43.641 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:25:43.641" Took=25238 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_25_31_727}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:25:43.641 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",197,196},{"delta_send",196,198},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",396,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_25_31_727}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)784> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_25_31_727}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)785> f(AwMapRes).
ok
(h@19.0.0.18)786> 04:25:44.922 [error] C1 propagation "2020-08-06T04:25:44.922"  
lasp_delta_based_synchronization_backend:time_stamp().
04:25:44.937 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:25:44.938 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,199}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:198 
"2020-08-06T04:25:45.194"
(h@19.0.0.18)787> 04:25:48.122 [error] Sending find_sub batch [] 
04:25:48.122 [error] Sending find_sub_aq batch [] 
04:25:48.122 [error] batched message propagation "2020-08-06T04:25:48.122" 
04:25:50.638 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:25:50.638" Took=22620 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_25_37_747}],[],[],[],[],[],[],[],[]}}}}] 
04:25:50.638 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",198,197},{"delta_send",197,199},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",398,0},{"sub_cancel",0,0}] 
04:25:51.923 [error] C1 propagation "2020-08-06T04:25:51.923" 
04:25:51.933 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:25:51.933 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,200}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:199 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_25_37_747}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)788> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_25_37_747}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)789> f(AwMapRes).
ok
(h@19.0.0.18)790> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:25:52.965"
(h@19.0.0.18)791> 04:25:57.655 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:25:57.655" Took=38148 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_43_767}],[],[],[],[],[],[]}}}}] 
04:25:57.656 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",199,198},{"delta_send",198,200},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",400,0},{"sub_cancel",0,0}] 
04:25:58.123 [error] Sending find_sub batch [] 
04:25:58.123 [error] Sending find_sub_aq batch [] 
04:25:58.123 [error] batched message propagation "2020-08-06T04:25:58.123" 
04:25:58.924 [error] C1 propagation "2020-08-06T04:25:58.924" 
04:25:58.965 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:25:58.981 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,201}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:200 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_25_43_767}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)792> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_25_43_767}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)793> f(AwMapRes).
ok
(h@19.0.0.18)794> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:01.383"
(h@19.0.0.18)795> 04:26:04.656 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:26:04.655" Took=35388 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_49_787}]}}}}] 
04:26:04.657 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",200,199},{"delta_send",199,201},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",402,0},{"sub_cancel",0,0}] 
04:26:05.925 [error] C1 propagation "2020-08-06T04:26:05.925" 
04:26:05.954 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:26:06.003 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,202}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:201 
04:26:07.700 [error] C2 propagation "2020-08-06T04:26:07.700" 
04:26:08.125 [error] Sending find_sub batch [] 
04:26:08.125 [error] Sending find_sub_aq batch [] 
04:26:08.125 [error] batched message propagation "2020-08-06T04:26:08.125" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)796> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@19.0.0.18)797> f(AwMapRes).
ok
(h@19.0.0.18)798> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:09.379"
(h@19.0.0.18)799> 04:26:11.764 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:26:11.764" Took=28928 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_25_55_807}],[],[],[],[],[]}}}}] 
04:26:11.764 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",201,200},{"delta_send",200,202},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",404,0},{"sub_cancel",0,0}] 
04:26:12.927 [error] C1 propagation "2020-08-06T04:26:12.927" 
04:26:12.964 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:26:12.964 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,203}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:202 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_25_55_807}],
             [],[],[],...}}}}]}
(h@19.0.0.18)800> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_25_55_807}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)801> f(AwMapRes).
ok
(h@19.0.0.18)802> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:17.716"
(h@19.0.0.18)803> 04:26:18.127 [error] Sending find_sub batch [] 
04:26:18.127 [error] Sending find_sub_aq batch [] 
04:26:18.127 [error] batched message propagation "2020-08-06T04:26:18.127" 
04:26:18.649 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:26:18.649" Took=26875 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_26_07_854}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:26:18.703 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",202,201},{"delta_send",201,203},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",406,0},{"sub_cancel",0,0}] 
04:26:19.928 [error] C1 propagation "2020-08-06T04:26:19.928" 
04:26:19.946 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:26:19.946 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,204}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:203 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_04_26_07_854}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)804> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_04_26_07_854}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)805> f(AwMapRes).
ok
(h@19.0.0.18)806> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:25.105"
(h@19.0.0.18)807> 04:26:25.663 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:26:25.663" Took=39524 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_26_13_875}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:26:25.663 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",203,202},{"delta_send",202,204},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",408,0},{"sub_cancel",0,0}] 
04:26:26.929 [error] C1 propagation "2020-08-06T04:26:26.929" 
04:26:26.935 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:26:26.935 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,205}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:204 
04:26:28.129 [error] Sending find_sub batch [] 
04:26:28.129 [error] Sending find_sub_aq batch [] 
04:26:28.129 [error] batched message propagation "2020-08-06T04:26:28.129" 
04:26:32.658 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:26:32.658" Took=34297 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_26_19_895}],[],[],[],[],[],[],[]}}}}] 
04:26:32.659 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",204,203},{"delta_send",203,205},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",410,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_26_19_895}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)808> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_26_19_895}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)809> f(AwMapRes).
ok
(h@19.0.0.18)810> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:33.142"
(h@19.0.0.18)811> 04:26:33.930 [error] C1 propagation "2020-08-06T04:26:33.930"  
04:26:33.960 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:26:33.960 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,206}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:205 
04:26:38.130 [error] Sending find_sub batch [] 
04:26:38.130 [error] Sending find_sub_aq batch [] 
04:26:38.130 [error] batched message propagation "2020-08-06T04:26:38.130" 
04:26:39.664 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:26:39.664" Took=35681 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_26_25_914}],[],[],[],[],[]}}}}] 
04:26:39.665 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",205,204},{"delta_send",204,206},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",412,0},{"sub_cancel",0,0}] 
04:26:40.931 [error] C1 propagation "2020-08-06T04:26:40.931" 
04:26:40.960 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:26:40.960 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,207}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:206 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_26_25_914}],
             [],[],[],...}}}}]}
(h@19.0.0.18)812> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_26_25_914}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)813> f(AwMapRes).
ok
(h@19.0.0.18)814> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:41.176"
(h@19.0.0.18)815> 04:26:46.656 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:26:46.656" Took=27180 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_26_31_935}],[],[]}}}}] 
04:26:46.656 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",206,205},{"delta_send",205,207},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",414,0},{"sub_cancel",0,0}] 
04:26:47.570 [error] C3 propagation "2020-08-06T04:26:47.570" 
04:26:47.702 [error] C2 propagation "2020-08-06T04:26:47.702" 
04:26:47.932 [error] C1 propagation "2020-08-06T04:26:47.932" 
04:26:47.984 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:26:47.984 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,208}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:207 
04:26:48.132 [error] Sending find_sub batch [] 
04:26:48.132 [error] Sending find_sub_aq batch [] 
04:26:48.132 [error] batched message propagation "2020-08-06T04:26:48.132" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@19.0.0.18)816> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_26_31_935}],
         [],[]}}}}]
(h@19.0.0.18)817> f(AwMapRes).
ok
(h@19.0.0.18)818> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:49.209"
(h@19.0.0.18)819> 04:26:53.671 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:26:53.671" Took=33539 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_26_37_959}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:26:53.672 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",207,206},{"delta_send",206,208},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",416,0},{"sub_cancel",0,0}] 
04:26:54.934 [error] C1 propagation "2020-08-06T04:26:54.934" 
04:26:54.956 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:26:54.957 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,209}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:208 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_26_37_959}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)820> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_26_37_959}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)821> f(AwMapRes).
ok
(h@19.0.0.18)822> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:26:57.242"
(h@19.0.0.18)823> 04:26:58.133 [error] Sending find_sub batch [] 
04:26:58.133 [error] Sending find_sub_aq batch [] 
04:26:58.133 [error] batched message propagation "2020-08-06T04:26:58.133" 
04:27:00.663 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:27:00.663" Took=32860 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_26_50_003}],[]}}}}] 
04:27:00.664 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",208,207},{"delta_send",207,209},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",418,0},{"sub_cancel",0,0}] 
04:27:01.936 [error] C1 propagation "2020-08-06T04:27:01.936" 
04:27:02.022 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:27:02.023 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,210}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:209 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)824> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@19.0.0.18)825> f(AwMapRes).
ok
(h@19.0.0.18)826> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:05.274"
(h@19.0.0.18)827> 04:27:07.666 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:27:07.665" Took=27426 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_26_56_026}],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:07.666 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",209,208},{"delta_send",208,210},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",420,0},{"sub_cancel",0,0}] 
04:27:08.135 [error] Sending find_sub batch [] 
04:27:08.135 [error] Sending find_sub_aq batch [] 
04:27:08.135 [error] batched message propagation "2020-08-06T04:27:08.135" 
04:27:08.937 [error] C1 propagation "2020-08-06T04:27:08.937" 
04:27:08.937 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:27:08.937 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,211}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:210 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_26_56_026}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)828> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_26_56_026}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)829> f(AwMapRes).
ok
(h@19.0.0.18)830> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:13.311"
(h@19.0.0.18)831> 04:27:14.661 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:27:14.660" Took=26660 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_27_02_047}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:14.662 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",210,209},{"delta_send",209,211},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",422,0},{"sub_cancel",0,0}] 
04:27:15.938 [error] C1 propagation "2020-08-06T04:27:15.938" 
04:27:15.938 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:27:15.938 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,212}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:211 
04:27:18.136 [error] Sending find_sub batch [] 
04:27:18.136 [error] Sending find_sub_aq batch [] 
04:27:18.136 [error] batched message propagation "2020-08-06T04:27:18.136" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_04_27_02_047}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)832> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_04_27_02_047}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)833> f(AwMapRes).
ok
(h@19.0.0.18)834> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:21.353"
(h@19.0.0.18)835> 04:27:21.712 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:27:21.712" Took=32408 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_27_08_067}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:21.713 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",211,210},{"delta_send",210,212},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",424,0},{"sub_cancel",0,0}] 
04:27:22.939 [error] C1 propagation "2020-08-06T04:27:22.939" 
04:27:22.939 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:27:22.939 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,213}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:212 
04:27:27.704 [error] C2 propagation "2020-08-06T04:27:27.704" 
04:27:28.138 [error] Sending find_sub batch [] 
04:27:28.138 [error] Sending find_sub_aq batch [] 
04:27:28.138 [error] batched message propagation "2020-08-06T04:27:28.138" 
04:27:28.664 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:27:28.664" Took=23882 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_27_14_092}],[],[],[],[]}}}}] 
04:27:28.665 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",212,211},{"delta_send",211,213},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",426,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_27_14_092}],
             [],[],...}}}}]}
(h@19.0.0.18)836> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_27_14_092}],
         [],[],[],[]}}}}]
(h@19.0.0.18)837> f(AwMapRes).
ok
(h@19.0.0.18)838> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:29.389"
(h@19.0.0.18)839> 04:27:29.941 [error] C1 propagation "2020-08-06T04:27:29.941"  
04:27:29.942 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:27:29.942 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,214}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:213 
04:27:35.672 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:27:35.671" Took=33233 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_27_20_111}],[],[],[],[],[],[]}}}}] 
04:27:35.672 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",213,212},{"delta_send",212,214},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",428,0},{"sub_cancel",0,0}] 
04:27:36.942 [error] C1 propagation "2020-08-06T04:27:36.942" 
04:27:36.942 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:27:36.942 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,215}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:214 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_27_20_111}],
             [],[],[],[],...}}}}]}
(h@19.0.0.18)840> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_27_20_111}],
         [],[],[],[],[],[]}}}}]
(h@19.0.0.18)841> f(AwMapRes).
ok
(h@19.0.0.18)842> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:37.424"
(h@19.0.0.18)843> 04:27:38.140 [error] Sending find_sub batch [] 
04:27:38.140 [error] Sending find_sub_aq batch [] 
04:27:38.140 [error] batched message propagation "2020-08-06T04:27:38.140" 
04:27:42.669 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:27:42.669" Took=28173 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_27_26_134}],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:42.670 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",214,213},{"delta_send",213,215},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",430,0},{"sub_cancel",0,0}] 
04:27:43.944 [error] C1 propagation "2020-08-06T04:27:43.944" 
04:27:43.944 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:27:43.944 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,216}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:215 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_04_27_26_134}],
             [],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)844> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_04_27_26_134}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)845> f(AwMapRes).
ok
(h@19.0.0.18)846> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:45.456"
(h@19.0.0.18)847> 04:27:48.142 [error] Sending find_sub batch [] 
04:27:48.142 [error] Sending find_sub_aq batch [] 
04:27:48.142 [error] batched message propagation "2020-08-06T04:27:48.142" 
04:27:49.739 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:27:49.739" Took=24860 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_27_37_825}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:49.740 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",215,214},{"delta_send",214,216},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",432,0},{"sub_cancel",0,0}] 
04:27:50.945 [error] C1 propagation "2020-08-06T04:27:50.945" 
04:27:50.945 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:27:50.945 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,217}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:216 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_27_37_825}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)848> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_27_37_825}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)849> f(AwMapRes).
ok
(h@19.0.0.18)850> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:27:53.493"
(h@19.0.0.18)851> 04:27:56.676 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:27:56.676" Took=25094 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_27_43_847}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:27:56.677 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",216,215},{"delta_send",215,217},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",434,0},{"sub_cancel",0,0}] 
04:27:57.571 [error] C3 propagation "2020-08-06T04:27:57.571" 
04:27:57.946 [error] C1 propagation "2020-08-06T04:27:57.946" 
04:27:57.946 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:27:57.946 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,218}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:217 
04:27:58.144 [error] Sending find_sub batch [] 
04:27:58.144 [error] Sending find_sub_aq batch [] 
04:27:58.144 [error] batched message propagation "2020-08-06T04:27:58.144" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_27_43_847}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)852> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_27_43_847}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)853> f(AwMapRes).
ok
(h@19.0.0.18)854> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:01.526"
(h@19.0.0.18)855> 04:28:03.685 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:28:03.685" Took=36618 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_27_49_871}],[],[],[],[],[]}}}}] 
04:28:03.685 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",217,216},{"delta_send",216,218},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",436,0},{"sub_cancel",0,0}] 
04:28:04.948 [error] C1 propagation "2020-08-06T04:28:04.948" 
04:28:04.948 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:28:04.949 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,219}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:218 
04:28:07.705 [error] C2 propagation "2020-08-06T04:28:07.705" 
04:28:08.145 [error] Sending find_sub batch [] 
04:28:08.145 [error] Sending find_sub_aq batch [] 
04:28:08.145 [error] batched message propagation "2020-08-06T04:28:08.145" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_27_49_871}],
             [],[],[],...}}}}]}
(h@19.0.0.18)856> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_27_49_871}],
         [],[],[],[],[]}}}}]
(h@19.0.0.18)857> f(AwMapRes).
ok
(h@19.0.0.18)858> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:09.567"
(h@19.0.0.18)859> 04:28:10.671 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:28:10.671" Took=25992 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_27_55_892}],[],[],[],[],[],[],[],[]}}}}] 
04:28:10.672 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",218,217},{"delta_send",217,219},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",438,0},{"sub_cancel",0,0}] 
04:28:11.949 [error] C1 propagation "2020-08-06T04:28:11.949" 
04:28:11.949 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:28:11.949 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,220}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:219 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_04_27_55_892}],
             [],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)860> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_04_27_55_892}],
         [],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)861> f(AwMapRes).
ok
(h@19.0.0.18)862> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:17.608"
(h@19.0.0.18)863> 04:28:17.689 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:28:17.689" Took=39359 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_28_01_923}],[],[],[],[]}}}}] 
04:28:17.690 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",219,218},{"delta_send",218,220},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",440,0},{"sub_cancel",0,0}] 
04:28:18.147 [error] Sending find_sub batch [] 
04:28:18.147 [error] Sending find_sub_aq batch [] 
04:28:18.147 [error] batched message propagation "2020-08-06T04:28:18.147" 
04:28:18.950 [error] C1 propagation "2020-08-06T04:28:18.950" 
04:28:18.995 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:28:18.995 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,221}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:220 
04:28:24.715 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:28:24.715" Took=27627 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_28_13_963}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:28:24.715 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",220,219},{"delta_send",219,221},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",442,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_28_13_963}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)864> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_28_13_963}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)865> f(AwMapRes).
ok
(h@19.0.0.18)866> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:25.643"
(h@19.0.0.18)867> 04:28:25.952 [error] C1 propagation "2020-08-06T04:28:25.952"  
04:28:25.989 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:28:26.005 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,222}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:221 
04:28:28.148 [error] Sending find_sub batch [] 
04:28:28.148 [error] Sending find_sub_aq batch [] 
04:28:28.148 [error] batched message propagation "2020-08-06T04:28:28.148" 
04:28:31.737 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:28:31.737" Took=33826 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_28_19_984}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:28:31.738 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",221,220},{"delta_send",220,222},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",444,0},{"sub_cancel",0,0}] 
04:28:32.954 [error] C1 propagation "2020-08-06T04:28:32.954" 
04:28:32.980 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:28:32.981 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,223}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:222 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_28_19_984}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)868> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_28_19_984}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)869> f(AwMapRes).
ok
(h@19.0.0.18)870> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:33.685"
(h@19.0.0.18)871> 04:28:38.149 [error] Sending find_sub batch [] 
04:28:38.149 [error] Sending find_sub_aq batch [] 
04:28:38.149 [error] batched message propagation "2020-08-06T04:28:38.149" 
04:28:38.690 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:28:38.690" Took=38285 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_28_26_007}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:28:38.772 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",222,221},{"delta_send",221,223},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",446,0},{"sub_cancel",0,0}] 
04:28:39.955 [error] C1 propagation "2020-08-06T04:28:39.955" 
04:28:39.990 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:28:39.991 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,224}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:223 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_28_26_007}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)872> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_28_26_007}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)873> f(AwMapRes).
ok
(h@19.0.0.18)874> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:41.722"
(h@19.0.0.18)875> 04:28:45.682 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:28:45.682" Took=27153 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_28_32_031}],[],[],[],[]}}}}] 
04:28:45.684 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",223,222},{"delta_send",222,224},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",448,0},{"sub_cancel",0,0}] 
04:28:46.957 [error] C1 propagation "2020-08-06T04:28:46.957" 
04:28:46.965 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:28:46.966 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,225}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:224 
04:28:47.707 [error] C2 propagation "2020-08-06T04:28:47.707" 
04:28:48.151 [error] Sending find_sub batch [] 
04:28:48.151 [error] Sending find_sub_aq batch [] 
04:28:48.151 [error] batched message propagation "2020-08-06T04:28:48.151" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_28_32_031}],
             [],[],...}}}}]}
(h@19.0.0.18)876> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_28_32_031}],
         [],[],[],[]}}}}]
(h@19.0.0.18)877> f(AwMapRes).
ok
(h@19.0.0.18)878> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:49.760"
(h@19.0.0.18)879> 04:28:52.687 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:28:52.686" Took=27562 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_28_38_051}],[],[],[],[],[],[],[]}}}}] 
04:28:52.688 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",224,223},{"delta_send",223,225},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",450,0},{"sub_cancel",0,0}] 
04:28:53.958 [error] C1 propagation "2020-08-06T04:28:53.958" 
04:28:53.958 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:28:53.958 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,226}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:225 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_28_38_051}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)880> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_28_38_051}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)881> f(AwMapRes).
ok
(h@19.0.0.18)882> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:28:57.797"
(h@19.0.0.18)883> 04:28:58.153 [error] Sending find_sub batch [] 
04:28:58.153 [error] Sending find_sub_aq batch [] 
04:28:58.153 [error] batched message propagation "2020-08-06T04:28:58.153" 
04:28:59.688 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:28:59.687" Took=25608 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_04_28_44_071}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:28:59.688 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",225,224},{"delta_send",224,226},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",452,0},{"sub_cancel",0,0}] 
04:29:00.960 [error] C1 propagation "2020-08-06T04:29:00.960" 
04:29:00.960 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:29:00.960 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,227}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:226 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_04_28_44_071}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)884> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_04_28_44_071}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)885> f(AwMapRes).
ok
(h@19.0.0.18)886> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:05.837"
(h@19.0.0.18)887> 04:29:06.699 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:29:06.699" Took=35574 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_28_56_117}],[],[],[],[]}}}}] 
04:29:06.699 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",226,225},{"delta_send",225,227},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",454,0},{"sub_cancel",0,0}] 
04:29:07.573 [error] C3 propagation "2020-08-06T04:29:07.573" 
04:29:07.961 [error] C1 propagation "2020-08-06T04:29:07.961" 
04:29:07.961 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:29:07.961 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,228}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:227 
04:29:08.155 [error] Sending find_sub batch [] 
04:29:08.155 [error] Sending find_sub_aq batch [] 
04:29:08.155 [error] batched message propagation "2020-08-06T04:29:08.155" 
04:29:13.694 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:29:13.694" Took=33464 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_02_135}],[]}}}}] 
04:29:13.695 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",227,226},{"delta_send",226,228},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",456,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)888> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@19.0.0.18)889> f(AwMapRes).
ok
(h@19.0.0.18)890> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:13.871"
(h@19.0.0.18)891> 04:29:14.963 [error] C1 propagation "2020-08-06T04:29:14.963"  
04:29:14.963 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:29:14.963 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,229}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:228 
04:29:18.157 [error] Sending find_sub batch [] 
04:29:18.157 [error] Sending find_sub_aq batch [] 
04:29:18.157 [error] batched message propagation "2020-08-06T04:29:18.157" 
04:29:20.696 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:29:20.696" Took=36015 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_04_29_08_155}],[],[],[],[],[],[],[]}}}}] 
04:29:20.696 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",228,227},{"delta_send",227,229},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",458,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_04_29_08_155}],
             [],[],[],[],[],...}}}}]}
(h@19.0.0.18)892> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_04_29_08_155}],
         [],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)893> f(AwMapRes).
ok
(h@19.0.0.18)894> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:21.913"
(h@19.0.0.18)895> 04:29:21.964 [error] C1 propagation "2020-08-06T04:29:21.964"  
04:29:21.964 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:29:21.964 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,230}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:229 
04:29:27.699 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:29:27.699" Took=35167 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_29_14_175}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:29:27.700 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",229,228},{"delta_send",228,230},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",460,0},{"sub_cancel",0,0}] 
04:29:27.708 [error] C2 propagation "2020-08-06T04:29:27.708" 
04:29:28.159 [error] Sending find_sub batch [] 
04:29:28.159 [error] Sending find_sub_aq batch [] 
04:29:28.159 [error] batched message propagation "2020-08-06T04:29:28.159" 
04:29:28.965 [error] C1 propagation "2020-08-06T04:29:28.965" 
04:29:28.965 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:29:28.965 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,231}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:230 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_04_29_14_175}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)896> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_04_29_14_175}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)897> f(AwMapRes).
ok
(h@19.0.0.18)898> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:29.949"
(h@19.0.0.18)899> 04:29:34.730 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:29:34.730" Took=28586 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_20_199}],[],[],[],[]}}}}] 
04:29:34.731 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",230,229},{"delta_send",229,231},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",462,0},{"sub_cancel",0,0}] 
04:29:35.966 [error] C1 propagation "2020-08-06T04:29:35.966" 
04:29:35.966 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:29:35.966 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,232}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:231 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_29_20_199}],
             [],[],...}}}}]}
(h@19.0.0.18)900> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_29_20_199}],
         [],[],[],[]}}}}]
(h@19.0.0.18)901> f(AwMapRes).
ok
(h@19.0.0.18)902> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:37.987"
(h@19.0.0.18)903> 04:29:38.161 [error] Sending find_sub batch [] 
04:29:38.161 [error] Sending find_sub_aq batch [] 
04:29:38.161 [error] batched message propagation "2020-08-06T04:29:38.161" 
04:29:41.699 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:29:41.699" Took=33934 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_04_29_26_220}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:29:41.699 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",231,230},{"delta_send",230,232},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",464,0},{"sub_cancel",0,0}] 
04:29:42.968 [error] C1 propagation "2020-08-06T04:29:42.968" 
04:29:42.968 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:29:42.968 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,233}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:232 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_04_29_26_220}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)904> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_04_29_26_220}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)905> f(AwMapRes).
ok
(h@19.0.0.18)906> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:46.286"
(h@19.0.0.18)907> 04:29:48.162 [error] Sending find_sub batch [] 
04:29:48.162 [error] Sending find_sub_aq batch [] 
04:29:48.162 [error] batched message propagation "2020-08-06T04:29:48.162" 
04:29:48.704 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:29:48.704" Took=35609 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_29_38_263}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:29:48.786 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",232,231},{"delta_send",231,233},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",466,0},{"sub_cancel",0,0}] 
04:29:49.970 [error] C1 propagation "2020-08-06T04:29:49.970" 
04:29:49.970 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:29:49.970 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,234}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:233 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_04_29_38_263}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@19.0.0.18)908> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_04_29_38_263}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@19.0.0.18)909> f(AwMapRes).
ok
(h@19.0.0.18)910> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:29:54.644"
(h@19.0.0.18)911> 04:29:55.768 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:29:55.768" Took=33226 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_44_287}],[],[],[],[]}}}}] 
04:29:55.768 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",233,232},{"delta_send",232,234},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",468,0},{"sub_cancel",0,0}] 
04:29:56.971 [error] C1 propagation "2020-08-06T04:29:56.971" 
04:29:56.971 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:29:56.971 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,235}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:234 
04:29:58.164 [error] Sending find_sub batch [] 
04:29:58.164 [error] Sending find_sub_aq batch [] 
04:29:58.164 [error] batched message propagation "2020-08-06T04:29:58.164" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_04_29_44_287}],
             [],[],...}}}}]}
(h@19.0.0.18)912> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_04_29_44_287}],
         [],[],[],[]}}}}]
(h@19.0.0.18)913> f(AwMapRes).
ok
(h@19.0.0.18)914> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T04:30:02.103"
(h@19.0.0.18)915> 04:30:02.697 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:30:02.697" Took=23556 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_29_50_311}]}}}}] 
04:30:02.699 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",234,233},{"delta_send",233,235},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",470,0},{"sub_cancel",0,0}] 
04:30:03.972 [error] C1 propagation "2020-08-06T04:30:03.972" 
04:30:03.972 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:30:03.972 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,236}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:235 
04:30:07.709 [error] C2 propagation "2020-08-06T04:30:07.709" 
04:30:08.166 [error] Sending find_sub batch [] 
04:30:08.166 [error] Sending find_sub_aq batch [] 
04:30:08.166 [error] batched message propagation "2020-08-06T04:30:08.166" 
04:30:09.693 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:30:09.693" Took=21053 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_29_56_332}],[],[],[],[],[],[],[],[]}}}}] 
04:30:09.693 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",235,234},{"delta_send",234,236},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",472,0},{"sub_cancel",0,0}] 
04:30:10.974 [error] C1 propagation "2020-08-06T04:30:10.974" 
04:30:10.974 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:30:10.974 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,237}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:236 
04:30:16.707 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:30:16.707" Took=33745 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_04_30_02_351}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:16.708 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",236,235},{"delta_send",235,237},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",474,0},{"sub_cancel",0,0}] 
04:30:17.574 [error] C3 propagation "2020-08-06T04:30:17.574" 
04:30:17.975 [error] C1 propagation "2020-08-06T04:30:17.975" 
04:30:17.999 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:30:17.999 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,238}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:237 
04:30:18.168 [error] Sending find_sub batch [] 
04:30:18.168 [error] Sending find_sub_aq batch [] 
04:30:18.168 [error] batched message propagation "2020-08-06T04:30:18.168" 
04:30:23.710 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:30:23.710" Took=30203 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_30_08_375}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:23.710 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",237,236},{"delta_send",236,238},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",476,0},{"sub_cancel",0,0}] 
04:30:24.976 [error] C1 propagation "2020-08-06T04:30:24.976" 
04:30:25.007 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:30:25.007 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,239}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:238 
04:30:28.170 [error] Sending find_sub batch [] 
04:30:28.170 [error] Sending find_sub_aq batch [] 
04:30:28.170 [error] batched message propagation "2020-08-06T04:30:28.170" 
04:30:30.704 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:30:30.703" Took=23231 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_20_429}],[],[],[],[]}}}}] 
04:30:30.705 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",238,237},{"delta_send",237,239},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",478,0},{"sub_cancel",0,0}] 
04:30:31.977 [error] C1 propagation "2020-08-06T04:30:31.977" 
04:30:32.026 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:30:32.027 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,240}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:239 
04:30:37.716 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:30:37.716" Took=34721 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_04_30_26_462}],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:37.717 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",239,238},{"delta_send",238,240},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",480,0},{"sub_cancel",0,0}] 
04:30:38.172 [error] Sending find_sub batch [] 
04:30:38.172 [error] Sending find_sub_aq batch [] 
04:30:38.172 [error] batched message propagation "2020-08-06T04:30:38.172" 
04:30:38.978 [error] C1 propagation "2020-08-06T04:30:38.978" 
04:30:39.006 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:30:39.006 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,241}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:240 
04:30:44.707 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:30:44.707" Took=22387 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_32_499}],[],[],[],[],[]}}}}] 
04:30:44.708 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",240,239},{"delta_send",239,241},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",482,0},{"sub_cancel",0,0}] 
04:30:45.980 [error] C1 propagation "2020-08-06T04:30:45.980" 
04:30:46.005 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:30:46.006 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,242}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:241 
04:30:47.710 [error] C2 propagation "2020-08-06T04:30:47.710" 
04:30:48.174 [error] Sending find_sub batch [] 
04:30:48.174 [error] Sending find_sub_aq batch [] 
04:30:48.174 [error] batched message propagation "2020-08-06T04:30:48.174" 
04:30:51.713 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:30:51.712" Took=29833 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_30_38_530}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:30:51.717 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",241,240},{"delta_send",240,242},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",484,0},{"sub_cancel",0,0}] 
04:30:52.981 [error] C1 propagation "2020-08-06T04:30:52.981" 
04:30:52.985 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:30:52.986 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,243}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:242 
04:30:58.176 [error] Sending find_sub batch [] 
04:30:58.176 [error] Sending find_sub_aq batch [] 
04:30:58.176 [error] batched message propagation "2020-08-06T04:30:58.176" 
04:30:58.718 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:30:58.718" Took=33709 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_44_566}],[],[],[],[],[]}}}}] 
04:30:58.836 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",242,241},{"delta_send",241,243},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",486,0},{"sub_cancel",0,0}] 
04:30:59.983 [error] C1 propagation "2020-08-06T04:30:59.983" 
04:31:00.013 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:31:00.013 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,244}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:243 
04:31:05.721 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:31:05.720" Took=36266 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_30_50_602}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:05.721 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",243,242},{"delta_send",242,244},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",488,0},{"sub_cancel",0,0}] 
04:31:06.984 [error] C1 propagation "2020-08-06T04:31:06.984" 
04:31:07.031 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:31:07.048 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,245}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:244 
04:31:08.178 [error] Sending find_sub batch [] 
04:31:08.178 [error] Sending find_sub_aq batch [] 
04:31:08.178 [error] batched message propagation "2020-08-06T04:31:08.178" 
04:31:12.715 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:31:12.715" Took=29467 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_04_30_56_638}],[],[],[],[],[],[]}}}}] 
04:31:12.716 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",244,243},{"delta_send",243,245},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",490,0},{"sub_cancel",0,0}] 
04:31:13.985 [error] C1 propagation "2020-08-06T04:31:13.985" 
04:31:13.985 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:31:13.985 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,246}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:245 
04:31:18.180 [error] Sending find_sub batch [] 
04:31:18.180 [error] Sending find_sub_aq batch [] 
04:31:18.180 [error] batched message propagation "2020-08-06T04:31:18.180" 
04:31:19.723 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:31:19.722" Took=30711 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_31_08_713}],[],[],[],[],[],[],[],[]}}}}] 
04:31:19.723 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",245,244},{"delta_send",244,246},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",492,0},{"sub_cancel",0,0}] 
04:31:20.986 [error] C1 propagation "2020-08-06T04:31:20.986" 
04:31:21.004 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:31:21.004 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,247}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:246 
04:31:26.726 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:31:26.726" Took=35991 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_31_14_751}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:26.726 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",246,245},{"delta_send",245,247},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",494,0},{"sub_cancel",0,0}] 
04:31:27.576 [error] C3 propagation "2020-08-06T04:31:27.576" 
04:31:27.711 [error] C2 propagation "2020-08-06T04:31:27.711" 
04:31:27.988 [error] C1 propagation "2020-08-06T04:31:27.988" 
04:31:27.989 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:31:27.989 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,248}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:247 
04:31:28.182 [error] Sending find_sub batch [] 
04:31:28.182 [error] Sending find_sub_aq batch [] 
04:31:28.182 [error] batched message propagation "2020-08-06T04:31:28.182" 
04:31:33.722 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:31:33.722" Took=27388 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_31_20_788}],[],[]}}}}] 
04:31:33.724 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",247,246},{"delta_send",246,248},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",496,0},{"sub_cancel",0,0}] 
04:31:34.990 [error] C1 propagation "2020-08-06T04:31:34.990" 
04:31:35.049 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:31:35.049 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,249}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:248 
04:31:38.184 [error] Sending find_sub batch [] 
04:31:38.184 [error] Sending find_sub_aq batch [] 
04:31:38.184 [error] batched message propagation "2020-08-06T04:31:38.184" 
04:31:40.716 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:31:40.716" Took=22587 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_31_26_823}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:40.716 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",248,247},{"delta_send",247,249},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",498,0},{"sub_cancel",0,0}] 
04:31:41.991 [error] C1 propagation "2020-08-06T04:31:41.991" 
04:31:41.991 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:31:41.991 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,250}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:249 
04:31:47.730 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:31:47.729" Took=34729 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_04_31_32_859}],[],[],[],[],[],[],[],[]}}}}] 
04:31:47.730 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",249,248},{"delta_send",248,250},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",500,0},{"sub_cancel",0,0}] 
04:31:48.185 [error] Sending find_sub batch [] 
04:31:48.185 [error] Sending find_sub_aq batch [] 
04:31:48.185 [error] batched message propagation "2020-08-06T04:31:48.185" 
04:31:48.992 [error] C1 propagation "2020-08-06T04:31:48.992" 
04:31:48.992 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:31:48.992 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,251}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:250 
04:31:54.728 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:31:54.728" Took=29503 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_31_38_899}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:31:54.729 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",250,249},{"delta_send",249,251},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",502,0},{"sub_cancel",0,0}] 
04:31:55.993 [error] C1 propagation "2020-08-06T04:31:55.993" 
04:31:55.993 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:31:55.993 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,252}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:251 
04:31:58.186 [error] Sending find_sub batch [] 
04:31:58.186 [error] Sending find_sub_aq batch [] 
04:31:58.186 [error] batched message propagation "2020-08-06T04:31:58.186" 
04:32:01.733 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:32:01.733" Took=34575 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_31_50_979}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:01.733 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",251,250},{"delta_send",250,252},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",504,0},{"sub_cancel",0,0}] 
04:32:02.994 [error] C1 propagation "2020-08-06T04:32:02.994" 
04:32:02.995 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:32:02.995 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,253}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:252 
04:32:07.712 [error] C2 propagation "2020-08-06T04:32:07.712" 
04:32:08.187 [error] Sending find_sub batch [] 
04:32:08.187 [error] Sending find_sub_aq batch [] 
04:32:08.187 [error] batched message propagation "2020-08-06T04:32:08.187" 
04:32:08.752 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:32:08.752" Took=22079 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_31_57_015}]}}}}] 
04:32:08.753 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",252,251},{"delta_send",251,253},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",506,0},{"sub_cancel",0,0}] 
04:32:09.995 [error] C1 propagation "2020-08-06T04:32:09.995" 
04:32:09.995 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:32:09.995 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,254}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:253 
04:32:15.726 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:32:15.726" Took=20914 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_04_32_03_051}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:15.728 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",253,252},{"delta_send",252,254},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",508,0},{"sub_cancel",0,0}] 
04:32:16.997 [error] C1 propagation "2020-08-06T04:32:16.997" 
04:32:16.997 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:32:16.997 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,255}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:254 
04:32:18.189 [error] Sending find_sub batch [] 
04:32:18.189 [error] Sending find_sub_aq batch [] 
04:32:18.189 [error] batched message propagation "2020-08-06T04:32:18.189" 
04:32:22.725 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:32:22.725" Took=22992 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_32_09_090}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:22.726 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",254,253},{"delta_send",253,255},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",510,0},{"sub_cancel",0,0}] 
04:32:23.998 [error] C1 propagation "2020-08-06T04:32:23.998" 
04:32:23.998 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:32:23.998 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,256}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:255 
04:32:28.190 [error] Sending find_sub batch [] 
04:32:28.190 [error] Sending find_sub_aq batch [] 
04:32:28.190 [error] batched message propagation "2020-08-06T04:32:28.190" 
04:32:29.737 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:32:29.737" Took=32773 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_04_32_15_131}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:29.737 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",255,254},{"delta_send",254,256},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",512,0},{"sub_cancel",0,0}] 
04:32:31.000 [error] C1 propagation "2020-08-06T04:32:31.237" 
04:32:31.000 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:32:31.001 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,257}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:256 
04:32:36.739 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:32:36.739" Took=34229 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_32_21_168}],[],[],[],[]}}}}] 
04:32:36.740 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",256,255},{"delta_send",255,257},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",514,0},{"sub_cancel",0,0}] 
04:32:37.577 [error] C3 propagation "2020-08-06T04:32:37.577" 
04:32:38.001 [error] C1 propagation "2020-08-06T04:32:38.109" 
04:32:38.001 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:32:38.001 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,258}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:257 
04:32:38.192 [error] Sending find_sub batch [] 
04:32:38.192 [error] Sending find_sub_aq batch [] 
04:32:38.192 [error] batched message propagation "2020-08-06T04:32:38.192" 
04:32:43.735 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:32:43.734" Took=25730 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_04_32_33_245}]}}}}] 
04:32:43.735 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",257,256},{"delta_send",256,258},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",516,0},{"sub_cancel",0,0}] 
04:32:45.003 [error] C1 propagation "2020-08-06T04:32:45.317" 
04:32:45.003 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:32:45.003 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,259}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:258 
04:32:47.714 [error] C2 propagation "2020-08-06T04:32:47.714" 
04:32:48.194 [error] Sending find_sub batch [] 
04:32:48.194 [error] Sending find_sub_aq batch [] 
04:32:48.194 [error] batched message propagation "2020-08-06T04:32:48.194" 
04:32:52.004 [error] C1 propagation "2020-08-06T04:32:52.407" 
04:32:57.745 [error] LASPVIN Received delta From='a@19.0.0.11' at TimeStamp="2020-08-06T04:32:57.744" Took=30612 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_04_32_44_898}],[],[],[],[],[],[],[],[],[]}}}}] 
04:32:57.745 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",258,257},{"delta_send",257,259},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",1,0},{"rate_subscribe_ack",0,1},{"send_backend",518,0},{"sub_cancel",0,0}] 
04:32:58.195 [error] Sending find_sub batch [] 
04:32:58.195 [error] Sending find_sub_aq batch [] 
04:32:58.195 [error] batched message propagation "2020-08-06T04:32:58.195" 
04:32:59.005 [error] C1 propagation "2020-08-06T04:32:59.530" 
04:32:59.021 [error] LASPVIN Sending delta to 'a@19.0.0.11' 
04:32:59.021 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<245,45,240,207,121,185,76,219,115,188,55,57,211,251,42,209,106,71,134,74>>,260}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:259 
04:33:06.006 [error] C1 propagation "2020-08-06T04:33:06.634" 
04:33:08.196 [error] Sending find_sub batch [] 
04:33:08.196 [error] Sending find_sub_aq batch [] 
04:33:08.196 [error] batched message propagation "2020-08-06T04:33:08.196" 
04:33:13.007 [error] C1 propagation "2020-08-06T04:33:13.712" 
04:33:18.198 [error] Sending find_sub batch [] 
04:33:18.198 [error] Sending find_sub_aq batch [] 
04:33:18.198 [error] batched message propagation "2020-08-06T04:33:18.198" 
04:33:20.008 [error] C1 propagation "2020-08-06T04:33:20.811" 
04:33:27.009 [error] C1 propagation "2020-08-06T04:33:27.915" 
04:33:27.716 [error] C2 propagation "2020-08-06T04:33:27.716" 
04:33:28.200 [error] Sending find_sub batch [] 
04:33:28.200 [error] Sending find_sub_aq batch [] 
04:33:28.200 [error] batched message propagation "2020-08-06T04:33:28.200" 
04:33:34.010 [error] C1 propagation "2020-08-06T04:33:34.103" 
04:33:38.202 [error] Sending find_sub batch [] 
04:33:38.202 [error] Sending find_sub_aq batch [] 
04:33:38.202 [error] batched message propagation "2020-08-06T04:33:38.202" 
04:33:41.012 [error] C1 propagation "2020-08-06T04:33:41.125" 
04:33:47.578 [error] C3 propagation "2020-08-06T04:33:47.578" 
04:33:48.014 [error] C1 propagation "2020-08-06T04:33:48.143" 
04:33:48.204 [error] Sending find_sub batch [] 
04:33:48.204 [error] Sending find_sub_aq batch [] 
04:33:48.204 [error] batched message propagation "2020-08-06T04:33:48.204" 
04:33:55.015 [error] C1 propagation "2020-08-06T04:33:55.151" 
04:33:58.206 [error] Sending find_sub batch [] 
04:33:58.206 [error] Sending find_sub_aq batch [] 
04:33:58.206 [error] batched message propagation "2020-08-06T04:33:58.206" 
04:34:02.016 [error] C1 propagation "2020-08-06T04:34:02.160" 
04:34:07.717 [error] C2 propagation "2020-08-06T04:34:07.717" 
04:34:08.207 [error] Sending find_sub batch [] 
04:34:08.207 [error] Sending find_sub_aq batch [] 
04:34:08.207 [error] batched message propagation "2020-08-06T04:34:08.207" 
04:34:09.018 [error] C1 propagation "2020-08-06T04:34:09.183" 
04:34:16.020 [error] C1 propagation "2020-08-06T04:34:16.205" 
04:34:18.208 [error] Sending find_sub batch [] 
04:34:18.208 [error] Sending find_sub_aq batch [] 
04:34:18.208 [error] batched message propagation "2020-08-06T04:34:18.208" 
04:34:23.022 [error] C1 propagation "2020-08-06T04:34:23.224" 
04:34:28.209 [error] Sending find_sub batch [] 
04:34:28.209 [error] Sending find_sub_aq batch [] 
04:34:28.209 [error] batched message propagation "2020-08-06T04:34:28.209" 
04:34:30.023 [error] C1 propagation "2020-08-06T04:34:30.230" 
04:34:37.024 [error] C1 propagation "2020-08-06T04:34:37.241" 
04:34:38.211 [error] Sending find_sub batch [] 
04:34:38.211 [error] Sending find_sub_aq batch [] 
04:34:38.211 [error] batched message propagation "2020-08-06T04:34:38.211" 
04:34:44.025 [error] C1 propagation "2020-08-06T04:34:44.254" 
04:34:47.718 [error] C2 propagation "2020-08-06T04:34:47.718" 
04:34:48.212 [error] Sending find_sub batch [] 
04:34:48.212 [error] Sending find_sub_aq batch [] 
04:34:48.212 [error] batched message propagation "2020-08-06T04:34:48.212" 
04:34:51.026 [error] C1 propagation "2020-08-06T04:34:51.265" 
04:34:57.580 [error] C3 propagation "2020-08-06T04:34:57.580" 
04:34:58.028 [error] C1 propagation "2020-08-06T04:34:58.285" 
04:34:58.213 [error] Sending find_sub batch [] 
04:34:58.213 [error] Sending find_sub_aq batch [] 
04:34:58.213 [error] batched message propagation "2020-08-06T04:34:58.213" 
04:35:05.029 [error] C1 propagation "2020-08-06T04:35:05.290" 
04:35:08.214 [error] Sending find_sub batch [] 
04:35:08.214 [error] Sending find_sub_aq batch [] 
04:35:08.214 [error] batched message propagation "2020-08-06T04:35:08.214" 
04:35:12.030 [error] C1 propagation "2020-08-06T04:35:12.301" 
04:35:18.215 [error] Sending find_sub batch [] 
04:35:18.215 [error] Sending find_sub_aq batch [] 
04:35:18.215 [error] batched message propagation "2020-08-06T04:35:18.215" 
04:35:19.032 [error] C1 propagation "2020-08-06T04:35:19.321" 
04:35:26.033 [error] C1 propagation "2020-08-06T04:35:26.335" 
04:35:27.719 [error] C2 propagation "2020-08-06T04:35:27.719" 
04:35:28.217 [error] Sending find_sub batch [] 
04:35:28.217 [error] Sending find_sub_aq batch [] 
04:35:28.217 [error] batched message propagation "2020-08-06T04:35:28.217" 
04:35:33.035 [error] C1 propagation "2020-08-06T04:35:33.355" 
04:35:38.218 [error] Sending find_sub batch [] 
04:35:38.218 [error] Sending find_sub_aq batch [] 
04:35:38.218 [error] batched message propagation "2020-08-06T04:35:38.218" 
04:35:40.037 [error] C1 propagation "2020-08-06T04:35:40.370" 
04:35:47.038 [error] C1 propagation "2020-08-06T04:35:47.381" 
04:35:48.219 [error] Sending find_sub batch [] 
04:35:48.219 [error] Sending find_sub_aq batch [] 
04:35:48.219 [error] batched message propagation "2020-08-06T04:35:48.219" 
04:35:54.039 [error] C1 propagation "2020-08-06T04:35:54.391" 
04:35:58.220 [error] Sending find_sub batch [] 
04:35:58.220 [error] Sending find_sub_aq batch [] 
04:35:58.220 [error] batched message propagation "2020-08-06T04:35:58.220" 
04:36:01.040 [error] C1 propagation "2020-08-06T04:36:01.404" 
04:36:07.582 [error] C3 propagation "2020-08-06T04:36:07.582" 
04:36:07.720 [error] C2 propagation "2020-08-06T04:36:07.720" 
04:36:08.042 [error] C1 propagation "2020-08-06T04:36:08.422" 
04:36:08.222 [error] Sending find_sub batch [] 
04:36:08.222 [error] Sending find_sub_aq batch [] 
04:36:08.222 [error] batched message propagation "2020-08-06T04:36:08.222" 
04:36:15.043 [error] C1 propagation "2020-08-06T04:36:15.431" 
04:36:18.223 [error] Sending find_sub batch [] 
04:36:18.223 [error] Sending find_sub_aq batch [] 
04:36:18.223 [error] batched message propagation "2020-08-06T04:36:18.223" 
04:36:22.044 [error] C1 propagation "2020-08-06T04:36:22.441" 
04:36:28.225 [error] Sending find_sub batch [] 
04:36:28.225 [error] Sending find_sub_aq batch [] 
04:36:28.225 [error] batched message propagation "2020-08-06T04:36:28.225" 
04:36:29.045 [error] C1 propagation "2020-08-06T04:36:29.451" 
04:36:36.047 [error] C1 propagation "2020-08-06T04:36:36.471" 
04:36:38.227 [error] Sending find_sub batch [] 
04:36:38.227 [error] Sending find_sub_aq batch [] 
04:36:38.227 [error] batched message propagation "2020-08-06T04:36:38.227" 
04:36:43.049 [error] C1 propagation "2020-08-06T04:36:43.494" 
04:36:47.721 [error] C2 propagation "2020-08-06T04:36:47.721" 
04:36:48.228 [error] Sending find_sub batch [] 
04:36:48.228 [error] Sending find_sub_aq batch [] 
04:36:48.228 [error] batched message propagation "2020-08-06T04:36:48.228" 
04:36:50.051 [error] C1 propagation "2020-08-06T04:36:50.514" 
04:36:57.053 [error] C1 propagation "2020-08-06T04:36:57.531" 
04:36:58.230 [error] Sending find_sub batch [] 
04:36:58.230 [error] Sending find_sub_aq batch [] 
04:36:58.230 [error] batched message propagation "2020-08-06T04:36:58.230" 
04:37:04.054 [error] C1 propagation "2020-08-06T04:37:04.544" 
04:37:08.231 [error] Sending find_sub batch [] 
04:37:08.231 [error] Sending find_sub_aq batch [] 
04:37:08.231 [error] batched message propagation "2020-08-06T04:37:08.231" 
04:37:11.056 [error] C1 propagation "2020-08-06T04:37:11.562" 
04:37:17.584 [error] C3 propagation "2020-08-06T04:37:17.584" 
04:37:18.057 [error] C1 propagation "2020-08-06T04:37:18.572" 
04:37:18.233 [error] Sending find_sub batch [] 
04:37:18.233 [error] Sending find_sub_aq batch [] 
04:37:18.233 [error] batched message propagation "2020-08-06T04:37:18.233" 
04:37:25.058 [error] C1 propagation "2020-08-06T04:37:25.581" 
04:37:27.722 [error] C2 propagation "2020-08-06T04:37:27.722" 
04:37:28.234 [error] Sending find_sub batch [] 
04:37:28.234 [error] Sending find_sub_aq batch [] 
04:37:28.234 [error] batched message propagation "2020-08-06T04:37:28.234" 
04:37:32.059 [error] C1 propagation "2020-08-06T04:37:32.591" 
04:37:38.235 [error] Sending find_sub batch [] 
04:37:38.235 [error] Sending find_sub_aq batch [] 
04:37:38.235 [error] batched message propagation "2020-08-06T04:37:38.235" 
04:37:39.061 [error] C1 propagation "2020-08-06T04:37:39.613" 
04:37:46.062 [error] C1 propagation "2020-08-06T04:37:46.624" 
04:37:48.236 [error] Sending find_sub batch [] 
04:37:48.236 [error] Sending find_sub_aq batch [] 
04:37:48.236 [error] batched message propagation "2020-08-06T04:37:48.236" 
04:37:53.064 [error] C1 propagation "2020-08-06T04:37:53.643" 
04:37:58.237 [error] Sending find_sub batch [] 
04:37:58.237 [error] Sending find_sub_aq batch [] 
04:37:58.237 [error] batched message propagation "2020-08-06T04:37:58.237" 
04:38:00.066 [error] C1 propagation "2020-08-06T04:38:00.662" 
04:38:07.068 [error] C1 propagation "2020-08-06T04:38:07.681" 
04:38:07.724 [error] C2 propagation "2020-08-06T04:38:07.724" 
04:38:08.239 [error] Sending find_sub batch [] 
04:38:08.239 [error] Sending find_sub_aq batch [] 
04:38:08.239 [error] batched message propagation "2020-08-06T04:38:08.239" 
04:38:14.069 [error] C1 propagation "2020-08-06T04:38:14.693" 
04:38:18.240 [error] Sending find_sub batch [] 
04:38:18.240 [error] Sending find_sub_aq batch [] 
04:38:18.240 [error] batched message propagation "2020-08-06T04:38:18.240" 
04:38:21.071 [error] C1 propagation "2020-08-06T04:38:21.713" 
04:38:27.585 [error] C3 propagation "2020-08-06T04:38:27.585" 
04:38:28.072 [error] C1 propagation "2020-08-06T04:38:28.723" 
04:38:28.242 [error] Sending find_sub batch [] 
04:38:28.242 [error] Sending find_sub_aq batch [] 
04:38:28.242 [error] batched message propagation "2020-08-06T04:38:28.242" 
04:38:35.073 [error] C1 propagation "2020-08-06T04:38:35.730" 
04:38:38.243 [error] Sending find_sub batch [] 
04:38:38.243 [error] Sending find_sub_aq batch [] 
04:38:38.243 [error] batched message propagation "2020-08-06T04:38:38.243" 
04:38:42.074 [error] C1 propagation "2020-08-06T04:38:42.741" 
04:38:47.726 [error] C2 propagation "2020-08-06T04:38:47.726" 
04:38:48.245 [error] Sending find_sub batch [] 
04:38:48.245 [error] Sending find_sub_aq batch [] 
04:38:48.245 [error] batched message propagation "2020-08-06T04:38:48.245" 
04:38:49.075 [error] C1 propagation "2020-08-06T04:38:49.753" 
04:38:56.076 [error] C1 propagation "2020-08-06T04:38:56.763" 
04:38:58.246 [error] Sending find_sub batch [] 
04:38:58.246 [error] Sending find_sub_aq batch [] 
04:38:58.246 [error] batched message propagation "2020-08-06T04:38:58.246" 
04:39:03.077 [error] C1 propagation "2020-08-06T04:39:03.771" 
04:39:08.247 [error] Sending find_sub batch [] 
04:39:08.247 [error] Sending find_sub_aq batch [] 
04:39:08.247 [error] batched message propagation "2020-08-06T04:39:08.247" 
04:39:10.079 [error] C1 propagation "2020-08-06T04:39:10.792" 
04:39:17.081 [error] C1 propagation "2020-08-06T04:39:17.811" 
04:39:18.248 [error] Sending find_sub batch [] 
04:39:18.248 [error] Sending find_sub_aq batch [] 
04:39:18.248 [error] batched message propagation "2020-08-06T04:39:18.248" 
04:39:24.083 [error] C1 propagation "2020-08-06T04:39:24.831" 
04:39:27.728 [error] C2 propagation "2020-08-06T04:39:27.728" 
04:39:28.250 [error] Sending find_sub batch [] 
04:39:28.250 [error] Sending find_sub_aq batch [] 
04:39:28.250 [error] batched message propagation "2020-08-06T04:39:28.250" 
04:39:31.085 [error] C1 propagation "2020-08-06T04:39:31.852" 
04:39:37.587 [error] C3 propagation "2020-08-06T04:39:37.587" 
04:39:38.086 [error] C1 propagation "2020-08-06T04:39:38.863" 
04:39:38.252 [error] Sending find_sub batch [] 
04:39:38.252 [error] Sending find_sub_aq batch [] 
04:39:38.252 [error] batched message propagation "2020-08-06T04:39:38.252" 
04:39:45.088 [error] C1 propagation "2020-08-06T04:39:45.882" 
04:39:48.253 [error] Sending find_sub batch [] 
04:39:48.253 [error] Sending find_sub_aq batch [] 
04:39:48.253 [error] batched message propagation "2020-08-06T04:39:48.253" 
04:39:52.089 [error] C1 propagation "2020-08-06T04:39:52.891" 
04:39:58.254 [error] Sending find_sub batch [] 
04:39:58.254 [error] Sending find_sub_aq batch [] 
04:39:58.254 [error] batched message propagation "2020-08-06T04:39:58.254" 
04:39:59.090 [error] C1 propagation "2020-08-06T04:39:59.902" 
04:40:06.092 [error] C1 propagation "2020-08-06T04:40:06.922" 
04:40:07.730 [error] C2 propagation "2020-08-06T04:40:07.730" 
04:40:08.256 [error] Sending find_sub batch [] 
04:40:08.256 [error] Sending find_sub_aq batch [] 
04:40:08.256 [error] batched message propagation "2020-08-06T04:40:08.256" 
04:40:13.093 [error] C1 propagation "2020-08-06T04:40:13.932" 
04:40:18.257 [error] Sending find_sub batch [] 
04:40:18.257 [error] Sending find_sub_aq batch [] 
04:40:18.257 [error] batched message propagation "2020-08-06T04:40:18.257" 
04:40:20.094 [error] C1 propagation "2020-08-06T04:40:20.941" 
04:40:27.096 [error] C1 propagation "2020-08-06T04:40:27.961" 
04:40:28.258 [error] Sending find_sub batch [] 
04:40:28.258 [error] Sending find_sub_aq batch [] 
04:40:28.258 [error] batched message propagation "2020-08-06T04:40:28.258" 
04:40:34.098 [error] C1 propagation "2020-08-06T04:40:34.981" 
04:40:38.259 [error] Sending find_sub batch [] 
04:40:38.259 [error] Sending find_sub_aq batch [] 
04:40:38.259 [error] batched message propagation "2020-08-06T04:40:38.259" 
04:40:41.099 [error] C1 propagation "2020-08-06T04:40:41.992" 
04:40:47.588 [error] C3 propagation "2020-08-06T04:40:47.588" 
04:40:47.732 [error] C2 propagation "2020-08-06T04:40:47.732" 
04:40:48.100 [error] C1 propagation "2020-08-06T04:40:48.100" 
04:40:48.261 [error] Sending find_sub batch [] 
04:40:48.261 [error] Sending find_sub_aq batch [] 
04:40:48.261 [error] batched message propagation "2020-08-06T04:40:48.261" 
04:40:55.101 [error] C1 propagation "2020-08-06T04:40:55.101" 
04:40:58.262 [error] Sending find_sub batch [] 
04:40:58.262 [error] Sending find_sub_aq batch [] 
04:40:58.262 [error] batched message propagation "2020-08-06T04:40:58.262" 
04:41:02.102 [error] C1 propagation "2020-08-06T04:41:02.102" 
04:41:08.263 [error] Sending find_sub batch [] 
04:41:08.263 [error] Sending find_sub_aq batch [] 
04:41:08.263 [error] batched message propagation "2020-08-06T04:41:08.263" 
04:41:09.103 [error] C1 propagation "2020-08-06T04:41:09.103" 
04:41:16.105 [error] C1 propagation "2020-08-06T04:41:16.105" 
04:41:18.265 [error] Sending find_sub batch [] 
04:41:18.265 [error] Sending find_sub_aq batch [] 
04:41:18.265 [error] batched message propagation "2020-08-06T04:41:18.265" 
04:41:23.106 [error] C1 propagation "2020-08-06T04:41:23.106" 
04:41:27.733 [error] C2 propagation "2020-08-06T04:41:27.733" 
04:41:28.267 [error] Sending find_sub batch [] 
04:41:28.267 [error] Sending find_sub_aq batch [] 
04:41:28.267 [error] batched message propagation "2020-08-06T04:41:28.267" 
04:41:30.107 [error] C1 propagation "2020-08-06T04:41:30.107" 
04:41:37.108 [error] C1 propagation "2020-08-06T04:41:37.108" 
04:41:38.269 [error] Sending find_sub batch [] 
04:41:38.269 [error] Sending find_sub_aq batch [] 
04:41:38.269 [error] batched message propagation "2020-08-06T04:41:38.269" 
04:41:44.110 [error] C1 propagation "2020-08-06T04:41:44.110" 
04:41:48.270 [error] Sending find_sub batch [] 
04:41:48.270 [error] Sending find_sub_aq batch [] 
04:41:48.270 [error] batched message propagation "2020-08-06T04:41:48.270" 
04:41:51.111 [error] C1 propagation "2020-08-06T04:41:51.111" 
04:41:57.590 [error] C3 propagation "2020-08-06T04:41:57.590" 
04:41:58.112 [error] C1 propagation "2020-08-06T04:41:58.112" 
04:41:58.272 [error] Sending find_sub batch [] 
04:41:58.272 [error] Sending find_sub_aq batch [] 
04:41:58.272 [error] batched message propagation "2020-08-06T04:41:58.272" 
04:42:05.113 [error] C1 propagation "2020-08-06T04:42:05.113" 
04:42:07.734 [error] C2 propagation "2020-08-06T04:42:07.734" 
04:42:08.273 [error] Sending find_sub batch [] 
04:42:08.273 [error] Sending find_sub_aq batch [] 
04:42:08.273 [error] batched message propagation "2020-08-06T04:42:08.273" 
04:42:12.114 [error] C1 propagation "2020-08-06T04:42:12.114" 
04:42:18.274 [error] Sending find_sub batch [] 
04:42:18.274 [error] Sending find_sub_aq batch [] 
04:42:18.274 [error] batched message propagation "2020-08-06T04:42:18.274" 
04:42:19.115 [error] C1 propagation "2020-08-06T04:42:19.115" 
04:42:26.117 [error] C1 propagation "2020-08-06T04:42:26.117" 
04:42:28.276 [error] Sending find_sub batch [] 
04:42:28.276 [error] Sending find_sub_aq batch [] 
04:42:28.276 [error] batched message propagation "2020-08-06T04:42:28.276" 
04:42:33.119 [error] C1 propagation "2020-08-06T04:42:33.119" 
04:42:38.278 [error] Sending find_sub batch [] 
04:42:38.278 [error] Sending find_sub_aq batch [] 
04:42:38.278 [error] batched message propagation "2020-08-06T04:42:38.278" 
04:42:40.120 [error] C1 propagation "2020-08-06T04:42:40.120" 
04:42:47.122 [error] C1 propagation "2020-08-06T04:42:47.122" 
04:42:47.736 [error] C2 propagation "2020-08-06T04:42:47.736" 
04:42:48.279 [error] Sending find_sub batch [] 
04:42:48.279 [error] Sending find_sub_aq batch [] 
04:42:48.279 [error] batched message propagation "2020-08-06T04:42:48.279" 
04:42:54.123 [error] C1 propagation "2020-08-06T04:42:54.123" 
04:42:58.281 [error] Sending find_sub batch [] 
04:42:58.281 [error] Sending find_sub_aq batch [] 
04:42:58.281 [error] batched message propagation "2020-08-06T04:42:58.281" 
04:43:01.124 [error] C1 propagation "2020-08-06T04:43:01.124" 
04:43:07.591 [error] C3 propagation "2020-08-06T04:43:07.591" 
04:43:08.126 [error] C1 propagation "2020-08-06T04:43:08.126" 
04:43:08.283 [error] Sending find_sub batch [] 
04:43:08.283 [error] Sending find_sub_aq batch [] 
04:43:08.283 [error] batched message propagation "2020-08-06T04:43:08.283" 
04:43:15.128 [error] C1 propagation "2020-08-06T04:43:15.128" 
04:43:18.285 [error] Sending find_sub batch [] 
04:43:18.285 [error] Sending find_sub_aq batch [] 
04:43:18.285 [error] batched message propagation "2020-08-06T04:43:18.285" 
04:43:22.130 [error] C1 propagation "2020-08-06T04:43:22.130" 
04:43:27.737 [error] C2 propagation "2020-08-06T04:43:27.737" 
04:43:28.287 [error] Sending find_sub batch [] 
04:43:28.287 [error] Sending find_sub_aq batch [] 
04:43:28.287 [error] batched message propagation "2020-08-06T04:43:28.287" 
04:43:29.132 [error] C1 propagation "2020-08-06T04:43:29.132" 
04:43:36.135 [error] C1 propagation "2020-08-06T04:43:36.134" 
04:43:38.289 [error] Sending find_sub batch [] 
04:43:38.289 [error] Sending find_sub_aq batch [] 
04:43:38.289 [error] batched message propagation "2020-08-06T04:43:38.289" 
04:43:43.138 [error] C1 propagation "2020-08-06T04:43:43.138" 
04:43:48.291 [error] Sending find_sub batch [] 
04:43:48.291 [error] Sending find_sub_aq batch [] 
04:43:48.291 [error] batched message propagation "2020-08-06T04:43:48.291" 
04:43:50.139 [error] C1 propagation "2020-08-06T04:43:50.139" 
04:43:57.141 [error] C1 propagation "2020-08-06T04:43:57.141" 
04:43:58.293 [error] Sending find_sub batch [] 
04:43:58.293 [error] Sending find_sub_aq batch [] 
04:43:58.293 [error] batched message propagation "2020-08-06T04:43:58.293" 
04:44:04.142 [error] C1 propagation "2020-08-06T04:44:04.142" 
04:44:07.739 [error] C2 propagation "2020-08-06T04:44:07.739" 
04:44:08.295 [error] Sending find_sub batch [] 
04:44:08.295 [error] Sending find_sub_aq batch [] 
04:44:08.295 [error] batched message propagation "2020-08-06T04:44:08.295" 
04:44:11.144 [error] C1 propagation "2020-08-06T04:44:11.144" 
04:44:17.592 [error] C3 propagation "2020-08-06T04:44:17.592" 
04:44:18.146 [error] C1 propagation "2020-08-06T04:44:18.146" 
04:44:18.297 [error] Sending find_sub batch [] 
04:44:18.297 [error] Sending find_sub_aq batch [] 
04:44:18.297 [error] batched message propagation "2020-08-06T04:44:18.297" 
04:44:25.147 [error] C1 propagation "2020-08-06T04:44:25.147" 
04:44:28.299 [error] Sending find_sub batch [] 
04:44:28.299 [error] Sending find_sub_aq batch [] 
04:44:28.299 [error] batched message propagation "2020-08-06T04:44:28.299" 
04:44:32.149 [error] C1 propagation "2020-08-06T04:44:32.149" 
04:44:38.301 [error] Sending find_sub batch [] 
04:44:38.301 [error] Sending find_sub_aq batch [] 
04:44:38.301 [error] batched message propagation "2020-08-06T04:44:38.301" 
04:44:39.150 [error] C1 propagation "2020-08-06T04:44:39.150" 
04:44:46.151 [error] C1 propagation "2020-08-06T04:44:46.151" 
04:44:47.741 [error] C2 propagation "2020-08-06T04:44:47.741" 
04:44:48.303 [error] Sending find_sub batch [] 
04:44:48.303 [error] Sending find_sub_aq batch [] 
04:44:48.303 [error] batched message propagation "2020-08-06T04:44:48.303" 
04:44:53.153 [error] C1 propagation "2020-08-06T04:44:53.152" 
04:44:58.305 [error] Sending find_sub batch [] 
04:44:58.305 [error] Sending find_sub_aq batch [] 
04:44:58.305 [error] batched message propagation "2020-08-06T04:44:58.305" 
04:45:00.154 [error] C1 propagation "2020-08-06T04:45:00.154" 
04:45:07.156 [error] C1 propagation "2020-08-06T04:45:07.156" 
04:45:08.307 [error] Sending find_sub batch [] 
04:45:08.307 [error] Sending find_sub_aq batch [] 
04:45:08.307 [error] batched message propagation "2020-08-06T04:45:08.307" 
04:45:14.157 [error] C1 propagation "2020-08-06T04:45:14.157" 
04:45:18.308 [error] Sending find_sub batch [] 
04:45:18.308 [error] Sending find_sub_aq batch [] 
04:45:18.308 [error] batched message propagation "2020-08-06T04:45:18.308" 
04:45:21.158 [error] C1 propagation "2020-08-06T04:45:21.158" 
04:45:27.593 [error] C3 propagation "2020-08-06T04:45:27.593" 
04:45:27.742 [error] C2 propagation "2020-08-06T04:45:27.742" 
04:45:28.159 [error] C1 propagation "2020-08-06T04:45:28.159" 
04:45:28.310 [error] Sending find_sub batch [] 
04:45:28.310 [error] Sending find_sub_aq batch [] 
04:45:28.310 [error] batched message propagation "2020-08-06T04:45:28.310" 
04:45:35.161 [error] C1 propagation "2020-08-06T04:45:35.161" 
04:45:38.312 [error] Sending find_sub batch [] 
04:45:38.312 [error] Sending find_sub_aq batch [] 
04:45:38.312 [error] batched message propagation "2020-08-06T04:45:38.312" 
04:45:42.163 [error] C1 propagation "2020-08-06T04:45:42.163" 
04:45:48.314 [error] Sending find_sub batch [] 
04:45:48.314 [error] Sending find_sub_aq batch [] 
04:45:48.314 [error] batched message propagation "2020-08-06T04:45:48.314" 
04:45:49.164 [error] C1 propagation "2020-08-06T04:45:49.164" 
04:45:56.166 [error] C1 propagation "2020-08-06T04:45:56.166" 
04:45:58.316 [error] Sending find_sub batch [] 
04:45:58.316 [error] Sending find_sub_aq batch [] 
04:45:58.316 [error] batched message propagation "2020-08-06T04:45:58.316" 
04:46:03.167 [error] C1 propagation "2020-08-06T04:46:03.167" 
04:46:07.743 [error] C2 propagation "2020-08-06T04:46:07.743" 
04:46:08.317 [error] Sending find_sub batch [] 
04:46:08.317 [error] Sending find_sub_aq batch [] 
04:46:08.317 [error] batched message propagation "2020-08-06T04:46:08.317" 
04:46:10.168 [error] C1 propagation "2020-08-06T04:46:10.168" 
04:46:17.169 [error] C1 propagation "2020-08-06T04:46:17.169" 
04:46:18.319 [error] Sending find_sub batch [] 
04:46:18.319 [error] Sending find_sub_aq batch [] 
04:46:18.319 [error] batched message propagation "2020-08-06T04:46:18.319" 
04:46:24.170 [error] C1 propagation "2020-08-06T04:46:24.170" 
04:46:28.320 [error] Sending find_sub batch [] 
04:46:28.320 [error] Sending find_sub_aq batch [] 
04:46:28.320 [error] batched message propagation "2020-08-06T04:46:28.320" 
04:46:31.172 [error] C1 propagation "2020-08-06T04:46:31.172" 
04:46:37.595 [error] C3 propagation "2020-08-06T04:46:37.595" 
04:46:38.174 [error] C1 propagation "2020-08-06T04:46:38.174" 
04:46:38.322 [error] Sending find_sub batch [] 
04:46:38.322 [error] Sending find_sub_aq batch [] 
04:46:38.322 [error] batched message propagation "2020-08-06T04:46:38.322" 
04:46:45.176 [error] C1 propagation "2020-08-06T04:46:45.176" 
04:46:47.745 [error] C2 propagation "2020-08-06T04:46:47.745" 
04:46:48.323 [error] Sending find_sub batch [] 
04:46:48.323 [error] Sending find_sub_aq batch [] 
04:46:48.323 [error] batched message propagation "2020-08-06T04:46:48.323" 
04:46:52.177 [error] C1 propagation "2020-08-06T04:46:52.177" 
04:46:58.325 [error] Sending find_sub batch [] 
04:46:58.325 [error] Sending find_sub_aq batch [] 
04:46:58.325 [error] batched message propagation "2020-08-06T04:46:58.325" 
04:46:59.179 [error] C1 propagation "2020-08-06T04:46:59.179" 
04:47:06.181 [error] C1 propagation "2020-08-06T04:47:06.181" 
04:47:08.326 [error] Sending find_sub batch [] 
04:47:08.326 [error] Sending find_sub_aq batch [] 
04:47:08.326 [error] batched message propagation "2020-08-06T04:47:08.326" 
04:47:13.183 [error] C1 propagation "2020-08-06T04:47:13.183" 
04:47:18.327 [error] Sending find_sub batch [] 
04:47:18.327 [error] Sending find_sub_aq batch [] 
04:47:18.327 [error] batched message propagation "2020-08-06T04:47:18.327" 
04:47:20.185 [error] C1 propagation "2020-08-06T04:47:20.185" 
04:47:27.187 [error] C1 propagation "2020-08-06T04:47:27.187" 
04:47:27.747 [error] C2 propagation "2020-08-06T04:47:27.747" 
04:47:28.329 [error] Sending find_sub batch [] 
04:47:28.329 [error] Sending find_sub_aq batch [] 
04:47:28.329 [error] batched message propagation "2020-08-06T04:47:28.329" 
04:47:34.188 [error] C1 propagation "2020-08-06T04:47:34.188" 
04:47:38.331 [error] Sending find_sub batch [] 
04:47:38.331 [error] Sending find_sub_aq batch [] 
04:47:38.331 [error] batched message propagation "2020-08-06T04:47:38.331" 
04:47:41.190 [error] C1 propagation "2020-08-06T04:47:41.190" 
04:47:47.597 [error] C3 propagation "2020-08-06T04:47:47.597" 
04:47:48.191 [error] C1 propagation "2020-08-06T04:47:48.191" 
04:47:48.333 [error] Sending find_sub batch [] 
04:47:48.333 [error] Sending find_sub_aq batch [] 
04:47:48.333 [error] batched message propagation "2020-08-06T04:47:48.333" 
04:47:55.192 [error] C1 propagation "2020-08-06T04:47:55.192" 
04:47:58.334 [error] Sending find_sub batch [] 
04:47:58.334 [error] Sending find_sub_aq batch [] 
04:47:58.334 [error] batched message propagation "2020-08-06T04:47:58.334" 
04:48:02.193 [error] C1 propagation "2020-08-06T04:48:02.193" 
04:48:07.748 [error] C2 propagation "2020-08-06T04:48:07.748" 
04:48:08.335 [error] Sending find_sub batch [] 
04:48:08.335 [error] Sending find_sub_aq batch [] 
04:48:08.335 [error] batched message propagation "2020-08-06T04:48:08.335" 
04:48:09.194 [error] C1 propagation "2020-08-06T04:48:09.194" 
04:48:16.195 [error] C1 propagation "2020-08-06T04:48:16.195" 
04:48:18.337 [error] Sending find_sub batch [] 
04:48:18.337 [error] Sending find_sub_aq batch [] 
04:48:18.337 [error] batched message propagation "2020-08-06T04:48:18.337" 
04:48:23.197 [error] C1 propagation "2020-08-06T04:48:23.197" 
04:48:28.338 [error] Sending find_sub batch [] 
04:48:28.338 [error] Sending find_sub_aq batch [] 
04:48:28.338 [error] batched message propagation "2020-08-06T04:48:28.338" 
04:48:30.200 [error] C1 propagation "2020-08-06T04:48:30.200" 
04:48:37.202 [error] C1 propagation "2020-08-06T04:48:37.202" 
04:48:38.340 [error] Sending find_sub batch [] 
04:48:38.340 [error] Sending find_sub_aq batch [] 
04:48:38.340 [error] batched message propagation "2020-08-06T04:48:38.340" 
04:48:44.204 [error] C1 propagation "2020-08-06T04:48:44.204" 
04:48:47.749 [error] C2 propagation "2020-08-06T04:48:47.749" 
04:48:48.341 [error] Sending find_sub batch [] 
04:48:48.341 [error] Sending find_sub_aq batch [] 
04:48:48.341 [error] batched message propagation "2020-08-06T04:48:48.341" 
04:48:51.206 [error] C1 propagation "2020-08-06T04:48:51.206" 
04:48:57.599 [error] C3 propagation "2020-08-06T04:48:57.599" 
04:48:58.208 [error] C1 propagation "2020-08-06T04:48:58.208" 
04:48:58.343 [error] Sending find_sub batch [] 
04:48:58.343 [error] Sending find_sub_aq batch [] 
04:48:58.343 [error] batched message propagation "2020-08-06T04:48:58.343" 
04:49:05.209 [error] C1 propagation "2020-08-06T04:49:05.209" 
04:49:08.344 [error] Sending find_sub batch [] 
04:49:08.344 [error] Sending find_sub_aq batch [] 
04:49:08.344 [error] batched message propagation "2020-08-06T04:49:08.344" 
04:49:12.211 [error] C1 propagation "2020-08-06T04:49:12.211" 
04:49:18.345 [error] Sending find_sub batch [] 
04:49:18.345 [error] Sending find_sub_aq batch [] 
04:49:18.345 [error] batched message propagation "2020-08-06T04:49:18.345" 
04:49:19.212 [error] C1 propagation "2020-08-06T04:49:19.212" 
04:49:26.214 [error] C1 propagation "2020-08-06T04:49:26.214" 
04:49:27.751 [error] C2 propagation "2020-08-06T04:49:27.751" 
04:49:28.346 [error] Sending find_sub batch [] 
04:49:28.346 [error] Sending find_sub_aq batch [] 
04:49:28.346 [error] batched message propagation "2020-08-06T04:49:28.346" 
04:49:33.216 [error] C1 propagation "2020-08-06T04:49:33.216" 
04:49:38.347 [error] Sending find_sub batch [] 
04:49:38.347 [error] Sending find_sub_aq batch [] 
04:49:38.347 [error] batched message propagation "2020-08-06T04:49:38.347" 
04:49:40.218 [error] C1 propagation "2020-08-06T04:49:40.218" 
04:49:47.219 [error] C1 propagation "2020-08-06T04:49:47.219" 
04:49:48.349 [error] Sending find_sub batch [] 
04:49:48.349 [error] Sending find_sub_aq batch [] 
04:49:48.349 [error] batched message propagation "2020-08-06T04:49:48.349" 
04:49:54.220 [error] C1 propagation "2020-08-06T04:49:54.220" 
04:49:58.350 [error] Sending find_sub batch [] 
04:49:58.350 [error] Sending find_sub_aq batch [] 
04:49:58.350 [error] batched message propagation "2020-08-06T04:49:58.350" 
04:50:01.222 [error] C1 propagation "2020-08-06T04:50:01.222" 
04:50:07.601 [error] C3 propagation "2020-08-06T04:50:07.601" 
04:50:07.752 [error] C2 propagation "2020-08-06T04:50:07.752" 
04:50:08.224 [error] C1 propagation "2020-08-06T04:50:08.224" 
04:50:08.352 [error] Sending find_sub batch [] 
04:50:08.352 [error] Sending find_sub_aq batch [] 
04:50:08.352 [error] batched message propagation "2020-08-06T04:50:08.352" 
04:50:15.225 [error] C1 propagation "2020-08-06T04:50:15.225" 
04:50:18.353 [error] Sending find_sub batch [] 
04:50:18.353 [error] Sending find_sub_aq batch [] 
04:50:18.353 [error] batched message propagation "2020-08-06T04:50:18.353" 
04:50:22.227 [error] C1 propagation "2020-08-06T04:50:22.227" 
04:50:28.355 [error] Sending find_sub batch [] 
04:50:28.355 [error] Sending find_sub_aq batch [] 
04:50:28.355 [error] batched message propagation "2020-08-06T04:50:28.355" 
04:50:29.228 [error] C1 propagation "2020-08-06T04:50:29.228" 
04:50:36.229 [error] C1 propagation "2020-08-06T04:50:36.229" 
04:50:38.357 [error] Sending find_sub batch [] 
04:50:38.357 [error] Sending find_sub_aq batch [] 
04:50:38.357 [error] batched message propagation "2020-08-06T04:50:38.357" 
04:50:43.230 [error] C1 propagation "2020-08-06T04:50:43.230" 
04:50:47.753 [error] C2 propagation "2020-08-06T04:50:47.753" 
04:50:48.358 [error] Sending find_sub batch [] 
04:50:48.358 [error] Sending find_sub_aq batch [] 
04:50:48.358 [error] batched message propagation "2020-08-06T04:50:48.358" 
04:50:50.232 [error] C1 propagation "2020-08-06T04:50:50.232" 
04:50:57.233 [error] C1 propagation "2020-08-06T04:50:57.233" 
04:50:58.360 [error] Sending find_sub batch [] 
04:50:58.360 [error] Sending find_sub_aq batch [] 
04:50:58.360 [error] batched message propagation "2020-08-06T04:50:58.360" 
04:51:04.234 [error] C1 propagation "2020-08-06T04:51:04.234" 
04:51:08.361 [error] Sending find_sub batch [] 
04:51:08.361 [error] Sending find_sub_aq batch [] 
04:51:08.361 [error] batched message propagation "2020-08-06T04:51:08.361" 
04:51:11.235 [error] C1 propagation "2020-08-06T04:51:11.235" 
04:51:17.603 [error] C3 propagation "2020-08-06T04:51:17.603" 
04:51:18.236 [error] C1 propagation "2020-08-06T04:51:18.236" 
04:51:18.363 [error] Sending find_sub batch [] 
04:51:18.363 [error] Sending find_sub_aq batch [] 
04:51:18.363 [error] batched message propagation "2020-08-06T04:51:18.363" 
04:51:25.238 [error] C1 propagation "2020-08-06T04:51:25.238" 
04:51:27.754 [error] C2 propagation "2020-08-06T04:51:27.754" 
04:51:28.364 [error] Sending find_sub batch [] 
04:51:28.364 [error] Sending find_sub_aq batch [] 
04:51:28.364 [error] batched message propagation "2020-08-06T04:51:28.364" 
04:51:32.239 [error] C1 propagation "2020-08-06T04:51:32.239" 
04:51:38.365 [error] Sending find_sub batch [] 
04:51:38.365 [error] Sending find_sub_aq batch [] 
04:51:38.365 [error] batched message propagation "2020-08-06T04:51:38.365" 
04:51:39.240 [error] C1 propagation "2020-08-06T04:51:39.240" 
04:51:46.242 [error] C1 propagation "2020-08-06T04:51:46.242" 
04:51:48.366 [error] Sending find_sub batch [] 
04:51:48.366 [error] Sending find_sub_aq batch [] 
04:51:48.366 [error] batched message propagation "2020-08-06T04:51:48.366" 
04:51:53.244 [error] C1 propagation "2020-08-06T04:51:53.244" 
04:51:58.368 [error] Sending find_sub batch [] 
04:51:58.368 [error] Sending find_sub_aq batch [] 
04:51:58.368 [error] batched message propagation "2020-08-06T04:51:58.368" 
04:52:00.245 [error] C1 propagation "2020-08-06T04:52:00.245" 
04:52:07.246 [error] C1 propagation "2020-08-06T04:52:07.246" 
04:52:07.755 [error] C2 propagation "2020-08-06T04:52:07.755" 
04:52:08.370 [error] Sending find_sub batch [] 
04:52:08.370 [error] Sending find_sub_aq batch [] 
04:52:08.370 [error] batched message propagation "2020-08-06T04:52:08.370" 
04:52:14.248 [error] C1 propagation "2020-08-06T04:52:14.248" 
04:52:18.371 [error] Sending find_sub batch [] 
04:52:18.371 [error] Sending find_sub_aq batch [] 
04:52:18.371 [error] batched message propagation "2020-08-06T04:52:18.371" 
04:52:21.250 [error] C1 propagation "2020-08-06T04:52:21.250" 
04:52:27.605 [error] C3 propagation "2020-08-06T04:52:27.605" 
04:52:28.251 [error] C1 propagation "2020-08-06T04:52:28.251" 
04:52:28.373 [error] Sending find_sub batch [] 
04:52:28.373 [error] Sending find_sub_aq batch [] 
04:52:28.373 [error] batched message propagation "2020-08-06T04:52:28.373" 
04:52:35.253 [error] C1 propagation "2020-08-06T04:52:35.253" 
04:52:38.375 [error] Sending find_sub batch [] 
04:52:38.375 [error] Sending find_sub_aq batch [] 
04:52:38.375 [error] batched message propagation "2020-08-06T04:52:38.375" 
04:52:42.255 [error] C1 propagation "2020-08-06T04:52:42.255" 
04:52:47.756 [error] C2 propagation "2020-08-06T04:52:47.756" 
04:52:48.376 [error] Sending find_sub batch [] 
04:52:48.376 [error] Sending find_sub_aq batch [] 
04:52:48.376 [error] batched message propagation "2020-08-06T04:52:48.376" 
04:52:49.257 [error] C1 propagation "2020-08-06T04:52:49.257" 
04:52:56.258 [error] C1 propagation "2020-08-06T04:52:56.258" 
04:52:58.377 [error] Sending find_sub batch [] 
04:52:58.377 [error] Sending find_sub_aq batch [] 
04:52:58.377 [error] batched message propagation "2020-08-06T04:52:58.377" 
04:53:03.260 [error] C1 propagation "2020-08-06T04:53:03.260" 
04:53:08.378 [error] Sending find_sub batch [] 
04:53:08.378 [error] Sending find_sub_aq batch [] 
04:53:08.378 [error] batched message propagation "2020-08-06T04:53:08.378" 
04:53:10.262 [error] C1 propagation "2020-08-06T04:53:10.262" 
04:53:17.264 [error] C1 propagation "2020-08-06T04:53:17.264" 
04:53:18.380 [error] Sending find_sub batch [] 
04:53:18.380 [error] Sending find_sub_aq batch [] 
04:53:18.380 [error] batched message propagation "2020-08-06T04:53:18.380" 
04:53:24.266 [error] C1 propagation "2020-08-06T04:53:24.266" 
04:53:27.757 [error] C2 propagation "2020-08-06T04:53:27.757" 
04:53:28.381 [error] Sending find_sub batch [] 
04:53:28.381 [error] Sending find_sub_aq batch [] 
04:53:28.381 [error] batched message propagation "2020-08-06T04:53:28.381" 
04:53:31.268 [error] C1 propagation "2020-08-06T04:53:31.268" 
04:53:37.607 [error] C3 propagation "2020-08-06T04:53:37.607" 
04:53:38.270 [error] C1 propagation "2020-08-06T04:53:38.270" 
04:53:38.383 [error] Sending find_sub batch [] 
04:53:38.383 [error] Sending find_sub_aq batch [] 
04:53:38.383 [error] batched message propagation "2020-08-06T04:53:38.383" 
04:53:45.272 [error] C1 propagation "2020-08-06T04:53:45.272" 
04:53:48.384 [error] Sending find_sub batch [] 
04:53:48.384 [error] Sending find_sub_aq batch [] 
04:53:48.384 [error] batched message propagation "2020-08-06T04:53:48.384" 
04:53:52.274 [error] C1 propagation "2020-08-06T04:53:52.274" 
04:53:58.386 [error] Sending find_sub batch [] 
04:53:58.386 [error] Sending find_sub_aq batch [] 
04:53:58.386 [error] batched message propagation "2020-08-06T04:53:58.386" 
04:53:59.275 [error] C1 propagation "2020-08-06T04:53:59.275" 
04:54:06.276 [error] C1 propagation "2020-08-06T04:54:06.276" 
04:54:07.758 [error] C2 propagation "2020-08-06T04:54:07.758" 
04:54:08.387 [error] Sending find_sub batch [] 
04:54:08.387 [error] Sending find_sub_aq batch [] 
04:54:08.387 [error] batched message propagation "2020-08-06T04:54:08.387" 
04:54:13.277 [error] C1 propagation "2020-08-06T04:54:13.277" 
04:54:18.388 [error] Sending find_sub batch [] 
04:54:18.388 [error] Sending find_sub_aq batch [] 
04:54:18.388 [error] batched message propagation "2020-08-06T04:54:18.388" 
04:54:20.278 [error] C1 propagation "2020-08-06T04:54:20.278" 
04:54:27.280 [error] C1 propagation "2020-08-06T04:54:27.280" 
04:54:28.390 [error] Sending find_sub batch [] 
04:54:28.390 [error] Sending find_sub_aq batch [] 
04:54:28.390 [error] batched message propagation "2020-08-06T04:54:28.390" 
04:54:34.281 [error] C1 propagation "2020-08-06T04:54:34.281" 
04:54:38.391 [error] Sending find_sub batch [] 
04:54:38.391 [error] Sending find_sub_aq batch [] 
04:54:38.391 [error] batched message propagation "2020-08-06T04:54:38.391" 
04:54:41.283 [error] C1 propagation "2020-08-06T04:54:41.283" 
04:54:47.608 [error] C3 propagation "2020-08-06T04:54:47.608" 
04:54:47.760 [error] C2 propagation "2020-08-06T04:54:47.760" 
04:54:48.284 [error] C1 propagation "2020-08-06T04:54:48.284" 
04:54:48.393 [error] Sending find_sub batch [] 
04:54:48.393 [error] Sending find_sub_aq batch [] 
04:54:48.393 [error] batched message propagation "2020-08-06T04:54:48.393" 
04:54:55.285 [error] C1 propagation "2020-08-06T04:54:55.285" 
04:54:58.394 [error] Sending find_sub batch [] 
04:54:58.394 [error] Sending find_sub_aq batch [] 
04:54:58.394 [error] batched message propagation "2020-08-06T04:54:58.394" 
04:55:02.287 [error] C1 propagation "2020-08-06T04:55:02.287" 
04:55:08.395 [error] Sending find_sub batch [] 
04:55:08.395 [error] Sending find_sub_aq batch [] 
04:55:08.395 [error] batched message propagation "2020-08-06T04:55:08.395" 
04:55:09.288 [error] C1 propagation "2020-08-06T04:55:09.288" 
04:55:16.290 [error] C1 propagation "2020-08-06T04:55:16.290" 
04:55:18.396 [error] Sending find_sub batch [] 
04:55:18.396 [error] Sending find_sub_aq batch [] 
04:55:18.396 [error] batched message propagation "2020-08-06T04:55:18.396" 
04:55:23.291 [error] C1 propagation "2020-08-06T04:55:23.291" 
04:55:27.761 [error] C2 propagation "2020-08-06T04:55:27.761" 
04:55:28.398 [error] Sending find_sub batch [] 
04:55:28.398 [error] Sending find_sub_aq batch [] 
04:55:28.398 [error] batched message propagation "2020-08-06T04:55:28.398" 
04:55:30.292 [error] C1 propagation "2020-08-06T04:55:30.292" 
04:55:37.293 [error] C1 propagation "2020-08-06T04:55:37.293" 
04:55:38.400 [error] Sending find_sub batch [] 
04:55:38.400 [error] Sending find_sub_aq batch [] 
04:55:38.400 [error] batched message propagation "2020-08-06T04:55:38.400" 
04:55:44.295 [error] C1 propagation "2020-08-06T04:55:44.295" 
04:55:48.401 [error] Sending find_sub batch [] 
04:55:48.401 [error] Sending find_sub_aq batch [] 
04:55:48.401 [error] batched message propagation "2020-08-06T04:55:48.401" 
04:55:51.297 [error] C1 propagation "2020-08-06T04:55:51.297" 
04:55:57.609 [error] C3 propagation "2020-08-06T04:55:57.609" 
04:55:58.298 [error] C1 propagation "2020-08-06T04:55:58.298" 
04:55:58.403 [error] Sending find_sub batch [] 
04:55:58.403 [error] Sending find_sub_aq batch [] 
04:55:58.403 [error] batched message propagation "2020-08-06T04:55:58.403" 
04:56:05.300 [error] C1 propagation "2020-08-06T04:56:05.300" 
04:56:07.763 [error] C2 propagation "2020-08-06T04:56:07.763" 
04:56:08.405 [error] Sending find_sub batch [] 
04:56:08.405 [error] Sending find_sub_aq batch [] 
04:56:08.405 [error] batched message propagation "2020-08-06T04:56:08.405" 
04:56:12.301 [error] C1 propagation "2020-08-06T04:56:12.301" 
04:56:18.406 [error] Sending find_sub batch [] 
04:56:18.406 [error] Sending find_sub_aq batch [] 
04:56:18.406 [error] batched message propagation "2020-08-06T04:56:18.406" 
04:56:19.302 [error] C1 propagation "2020-08-06T04:56:19.302" 
04:56:26.304 [error] C1 propagation "2020-08-06T04:56:26.304" 
04:56:28.407 [error] Sending find_sub batch [] 
04:56:28.407 [error] Sending find_sub_aq batch [] 
04:56:28.407 [error] batched message propagation "2020-08-06T04:56:28.407" 
04:56:33.306 [error] C1 propagation "2020-08-06T04:56:33.306" 
04:56:38.408 [error] Sending find_sub batch [] 
04:56:38.408 [error] Sending find_sub_aq batch [] 
04:56:38.408 [error] batched message propagation "2020-08-06T04:56:38.408" 
04:56:40.308 [error] C1 propagation "2020-08-06T04:56:40.308" 
04:56:47.310 [error] C1 propagation "2020-08-06T04:56:47.310" 
04:56:47.765 [error] C2 propagation "2020-08-06T04:56:47.765" 
04:56:48.410 [error] Sending find_sub batch [] 
04:56:48.410 [error] Sending find_sub_aq batch [] 
04:56:48.410 [error] batched message propagation "2020-08-06T04:56:48.410" 
04:56:54.311 [error] C1 propagation "2020-08-06T04:56:54.311" 
04:56:58.411 [error] Sending find_sub batch [] 
04:56:58.411 [error] Sending find_sub_aq batch [] 
04:56:58.411 [error] batched message propagation "2020-08-06T04:56:58.411" 
04:57:01.312 [error] C1 propagation "2020-08-06T04:57:01.312" 
04:57:07.611 [error] C3 propagation "2020-08-06T04:57:07.611" 
04:57:08.314 [error] C1 propagation "2020-08-06T04:57:08.314" 
04:57:08.413 [error] Sending find_sub batch [] 
04:57:08.413 [error] Sending find_sub_aq batch [] 
04:57:08.413 [error] batched message propagation "2020-08-06T04:57:08.413" 
04:57:15.316 [error] C1 propagation "2020-08-06T04:57:15.316" 
04:57:18.414 [error] Sending find_sub batch [] 
04:57:18.414 [error] Sending find_sub_aq batch [] 
04:57:18.414 [error] batched message propagation "2020-08-06T04:57:18.414" 
04:57:22.318 [error] C1 propagation "2020-08-06T04:57:22.318" 
04:57:27.766 [error] C2 propagation "2020-08-06T04:57:27.766" 
04:57:28.415 [error] Sending find_sub batch [] 
04:57:28.415 [error] Sending find_sub_aq batch [] 
04:57:28.415 [error] batched message propagation "2020-08-06T04:57:28.415" 
04:57:29.319 [error] C1 propagation "2020-08-06T04:57:29.319" 
04:57:36.320 [error] C1 propagation "2020-08-06T04:57:36.320" 
04:57:38.417 [error] Sending find_sub batch [] 
04:57:38.417 [error] Sending find_sub_aq batch [] 
04:57:38.417 [error] batched message propagation "2020-08-06T04:57:38.417" 
04:57:43.321 [error] C1 propagation "2020-08-06T04:57:43.321" 
04:57:48.418 [error] Sending find_sub batch [] 
04:57:48.418 [error] Sending find_sub_aq batch [] 
04:57:48.418 [error] batched message propagation "2020-08-06T04:57:48.418" 
04:57:50.322 [error] C1 propagation "2020-08-06T04:57:50.322" 
04:57:57.324 [error] C1 propagation "2020-08-06T04:57:57.324" 
04:57:58.420 [error] Sending find_sub batch [] 
04:57:58.420 [error] Sending find_sub_aq batch [] 
04:57:58.420 [error] batched message propagation "2020-08-06T04:57:58.420" 
04:58:04.325 [error] C1 propagation "2020-08-06T04:58:04.325" 
04:58:07.768 [error] C2 propagation "2020-08-06T04:58:07.768" 
04:58:08.421 [error] Sending find_sub batch [] 
04:58:08.421 [error] Sending find_sub_aq batch [] 
04:58:08.421 [error] batched message propagation "2020-08-06T04:58:08.421" 
04:58:11.327 [error] C1 propagation "2020-08-06T04:58:11.327" 
04:58:17.612 [error] C3 propagation "2020-08-06T04:58:17.612" 
04:58:18.329 [error] C1 propagation "2020-08-06T04:58:18.329" 
04:58:18.423 [error] Sending find_sub batch [] 
04:58:18.423 [error] Sending find_sub_aq batch [] 
04:58:18.423 [error] batched message propagation "2020-08-06T04:58:18.423" 
04:58:25.330 [error] C1 propagation "2020-08-06T04:58:25.330" 
04:58:28.424 [error] Sending find_sub batch [] 
04:58:28.424 [error] Sending find_sub_aq batch [] 
04:58:28.424 [error] batched message propagation "2020-08-06T04:58:28.424" 
04:58:32.332 [error] C1 propagation "2020-08-06T04:58:32.332" 
04:58:38.425 [error] Sending find_sub batch [] 
04:58:38.425 [error] Sending find_sub_aq batch [] 
04:58:38.425 [error] batched message propagation "2020-08-06T04:58:38.425" 
04:58:39.333 [error] C1 propagation "2020-08-06T04:58:39.333" 
04:58:46.334 [error] C1 propagation "2020-08-06T04:58:46.334" 
04:58:47.770 [error] C2 propagation "2020-08-06T04:58:47.770" 
04:58:48.426 [error] Sending find_sub batch [] 
04:58:48.426 [error] Sending find_sub_aq batch [] 
04:58:48.426 [error] batched message propagation "2020-08-06T04:58:48.426" 
04:58:53.336 [error] C1 propagation "2020-08-06T04:58:53.336" 
04:58:58.427 [error] Sending find_sub batch [] 
04:58:58.427 [error] Sending find_sub_aq batch [] 
04:58:58.427 [error] batched message propagation "2020-08-06T04:58:58.427" 
04:59:00.338 [error] C1 propagation "2020-08-06T04:59:00.338" 
04:59:07.339 [error] C1 propagation "2020-08-06T04:59:07.339" 
04:59:08.429 [error] Sending find_sub batch [] 
04:59:08.429 [error] Sending find_sub_aq batch [] 
04:59:08.429 [error] batched message propagation "2020-08-06T04:59:08.429" 
04:59:14.341 [error] C1 propagation "2020-08-06T04:59:14.341" 
04:59:18.431 [error] Sending find_sub batch [] 
04:59:18.431 [error] Sending find_sub_aq batch [] 
04:59:18.431 [error] batched message propagation "2020-08-06T04:59:18.431" 
04:59:21.342 [error] C1 propagation "2020-08-06T04:59:21.342" 
04:59:27.613 [error] C3 propagation "2020-08-06T04:59:27.613" 
04:59:27.772 [error] C2 propagation "2020-08-06T04:59:27.772" 
04:59:28.343 [error] C1 propagation "2020-08-06T04:59:28.343" 
04:59:28.433 [error] Sending find_sub batch [] 
04:59:28.433 [error] Sending find_sub_aq batch [] 
04:59:28.433 [error] batched message propagation "2020-08-06T04:59:28.433" 
04:59:35.344 [error] C1 propagation "2020-08-06T04:59:35.344" 
04:59:38.434 [error] Sending find_sub batch [] 
04:59:38.434 [error] Sending find_sub_aq batch [] 
04:59:38.434 [error] batched message propagation "2020-08-06T04:59:38.434" 
04:59:42.345 [error] C1 propagation "2020-08-06T04:59:42.345" 
04:59:48.436 [error] Sending find_sub batch [] 
04:59:48.436 [error] Sending find_sub_aq batch [] 
04:59:48.436 [error] batched message propagation "2020-08-06T04:59:48.436" 
04:59:49.346 [error] C1 propagation "2020-08-06T04:59:49.346" 
04:59:56.348 [error] C1 propagation "2020-08-06T04:59:56.348" 
04:59:58.438 [error] Sending find_sub batch [] 
04:59:58.438 [error] Sending find_sub_aq batch [] 
04:59:58.438 [error] batched message propagation "2020-08-06T04:59:58.438" 
05:00:03.349 [error] C1 propagation "2020-08-06T05:00:03.349" 
05:00:07.774 [error] C2 propagation "2020-08-06T05:00:07.774" 
05:00:08.440 [error] Sending find_sub batch [] 
05:00:08.440 [error] Sending find_sub_aq batch [] 
05:00:08.440 [error] batched message propagation "2020-08-06T05:00:08.440" 
05:00:10.350 [error] C1 propagation "2020-08-06T05:00:10.350" 
05:00:17.352 [error] C1 propagation "2020-08-06T05:00:17.352" 
05:00:18.442 [error] Sending find_sub batch [] 
05:00:18.442 [error] Sending find_sub_aq batch [] 
05:00:18.442 [error] batched message propagation "2020-08-06T05:00:18.442" 
05:00:24.353 [error] C1 propagation "2020-08-06T05:00:24.353" 
05:00:28.444 [error] Sending find_sub batch [] 
05:00:28.444 [error] Sending find_sub_aq batch [] 
05:00:28.444 [error] batched message propagation "2020-08-06T05:00:28.444" 
05:00:31.354 [error] C1 propagation "2020-08-06T05:00:31.354" 
05:00:37.615 [error] C3 propagation "2020-08-06T05:00:37.615" 
05:00:38.355 [error] C1 propagation "2020-08-06T05:00:38.355" 
05:00:38.446 [error] Sending find_sub batch [] 
05:00:38.446 [error] Sending find_sub_aq batch [] 
05:00:38.446 [error] batched message propagation "2020-08-06T05:00:38.446" 
05:00:45.356 [error] C1 propagation "2020-08-06T05:00:45.356" 
05:00:47.776 [error] C2 propagation "2020-08-06T05:00:47.776" 
05:00:48.448 [error] Sending find_sub batch [] 
05:00:48.448 [error] Sending find_sub_aq batch [] 
05:00:48.448 [error] batched message propagation "2020-08-06T05:00:48.448" 
05:00:52.357 [error] C1 propagation "2020-08-06T05:00:52.357" 
05:00:58.450 [error] Sending find_sub batch [] 
05:00:58.450 [error] Sending find_sub_aq batch [] 
05:00:58.450 [error] batched message propagation "2020-08-06T05:00:58.450" 
05:00:59.358 [error] C1 propagation "2020-08-06T05:00:59.358" 
05:01:06.360 [error] C1 propagation "2020-08-06T05:01:06.360" 
05:01:08.452 [error] Sending find_sub batch [] 
05:01:08.452 [error] Sending find_sub_aq batch [] 
05:01:08.452 [error] batched message propagation "2020-08-06T05:01:08.452" 
05:01:13.361 [error] C1 propagation "2020-08-06T05:01:13.361" 
05:01:18.454 [error] Sending find_sub batch [] 
05:01:18.454 [error] Sending find_sub_aq batch [] 
05:01:18.454 [error] batched message propagation "2020-08-06T05:01:18.454" 
05:01:20.362 [error] C1 propagation "2020-08-06T05:01:20.362" 
05:01:27.363 [error] C1 propagation "2020-08-06T05:01:27.363" 
05:01:27.777 [error] C2 propagation "2020-08-06T05:01:27.777" 
05:01:28.456 [error] Sending find_sub batch [] 
05:01:28.456 [error] Sending find_sub_aq batch [] 
05:01:28.456 [error] batched message propagation "2020-08-06T05:01:28.456" 
05:01:34.364 [error] C1 propagation "2020-08-06T05:01:34.364" 
05:01:38.458 [error] Sending find_sub batch [] 
05:01:38.458 [error] Sending find_sub_aq batch [] 
05:01:38.458 [error] batched message propagation "2020-08-06T05:01:38.458" 
05:01:41.365 [error] C1 propagation "2020-08-06T05:01:41.365" 
05:01:47.617 [error] C3 propagation "2020-08-06T05:01:47.617" 
05:01:48.366 [error] C1 propagation "2020-08-06T05:01:48.366" 
05:01:48.460 [error] Sending find_sub batch [] 
05:01:48.460 [error] Sending find_sub_aq batch [] 
05:01:48.460 [error] batched message propagation "2020-08-06T05:01:48.460" 
05:01:55.367 [error] C1 propagation "2020-08-06T05:01:55.367" 
05:01:58.462 [error] Sending find_sub batch [] 
05:01:58.462 [error] Sending find_sub_aq batch [] 
05:01:58.462 [error] batched message propagation "2020-08-06T05:01:58.462" 
05:02:02.368 [error] C1 propagation "2020-08-06T05:02:02.368" 
05:02:07.779 [error] C2 propagation "2020-08-06T05:02:07.779" 
05:02:08.464 [error] Sending find_sub batch [] 
05:02:08.464 [error] Sending find_sub_aq batch [] 
05:02:08.464 [error] batched message propagation "2020-08-06T05:02:08.464" 
05:02:09.369 [error] C1 propagation "2020-08-06T05:02:09.369" 
05:02:16.370 [error] C1 propagation "2020-08-06T05:02:16.370" 
05:02:18.466 [error] Sending find_sub batch [] 
05:02:18.466 [error] Sending find_sub_aq batch [] 
05:02:18.466 [error] batched message propagation "2020-08-06T05:02:18.466" 
05:02:23.372 [error] C1 propagation "2020-08-06T05:02:23.372" 
05:02:28.468 [error] Sending find_sub batch [] 
05:02:28.468 [error] Sending find_sub_aq batch [] 
05:02:28.468 [error] batched message propagation "2020-08-06T05:02:28.468" 
05:02:30.373 [error] C1 propagation "2020-08-06T05:02:30.373" 
05:02:37.374 [error] C1 propagation "2020-08-06T05:02:37.374" 
05:02:38.470 [error] Sending find_sub batch [] 
05:02:38.470 [error] Sending find_sub_aq batch [] 
05:02:38.470 [error] batched message propagation "2020-08-06T05:02:38.470" 
05:02:44.376 [error] C1 propagation "2020-08-06T05:02:44.376" 
05:02:47.780 [error] C2 propagation "2020-08-06T05:02:47.780" 
05:02:48.472 [error] Sending find_sub batch [] 
05:02:48.472 [error] Sending find_sub_aq batch [] 
05:02:48.472 [error] batched message propagation "2020-08-06T05:02:48.472" 
05:02:51.378 [error] C1 propagation "2020-08-06T05:02:51.378" 
05:02:57.618 [error] C3 propagation "2020-08-06T05:02:57.618" 
05:02:58.380 [error] C1 propagation "2020-08-06T05:02:58.380" 
05:02:58.474 [error] Sending find_sub batch [] 
05:02:58.474 [error] Sending find_sub_aq batch [] 
05:02:58.474 [error] batched message propagation "2020-08-06T05:02:58.474" 
05:03:05.382 [error] C1 propagation "2020-08-06T05:03:05.382" 
05:03:08.475 [error] Sending find_sub batch [] 
05:03:08.475 [error] Sending find_sub_aq batch [] 
05:03:08.475 [error] batched message propagation "2020-08-06T05:03:08.475" 
05:03:12.383 [error] C1 propagation "2020-08-06T05:03:12.383" 
05:03:18.477 [error] Sending find_sub batch [] 
05:03:18.477 [error] Sending find_sub_aq batch [] 
05:03:18.477 [error] batched message propagation "2020-08-06T05:03:18.477" 
05:03:19.384 [error] C1 propagation "2020-08-06T05:03:19.384" 
05:03:26.387 [error] C1 propagation "2020-08-06T05:03:26.387" 
05:03:27.782 [error] C2 propagation "2020-08-06T05:03:27.782" 
05:03:28.479 [error] Sending find_sub batch [] 
05:03:28.479 [error] Sending find_sub_aq batch [] 
05:03:28.479 [error] batched message propagation "2020-08-06T05:03:28.479" 
05:03:33.388 [error] C1 propagation "2020-08-06T05:03:33.388" 
05:03:38.480 [error] Sending find_sub batch [] 
05:03:38.480 [error] Sending find_sub_aq batch [] 
05:03:38.480 [error] batched message propagation "2020-08-06T05:03:38.480" 
05:03:40.390 [error] C1 propagation "2020-08-06T05:03:40.390" 
05:03:47.392 [error] C1 propagation "2020-08-06T05:03:47.392" 
05:03:48.482 [error] Sending find_sub batch [] 
05:03:48.482 [error] Sending find_sub_aq batch [] 
05:03:48.482 [error] batched message propagation "2020-08-06T05:03:48.482" 
05:03:54.394 [error] C1 propagation "2020-08-06T05:03:54.394" 
05:03:58.484 [error] Sending find_sub batch [] 
05:03:58.484 [error] Sending find_sub_aq batch [] 
05:03:58.484 [error] batched message propagation "2020-08-06T05:03:58.484" 
05:04:01.396 [error] C1 propagation "2020-08-06T05:04:01.396" 
05:04:07.620 [error] C3 propagation "2020-08-06T05:04:07.620" 
05:04:07.783 [error] C2 propagation "2020-08-06T05:04:07.783" 
05:04:08.398 [error] C1 propagation "2020-08-06T05:04:08.398" 
05:04:08.486 [error] Sending find_sub batch [] 
05:04:08.486 [error] Sending find_sub_aq batch [] 
05:04:08.486 [error] batched message propagation "2020-08-06T05:04:08.486" 
05:04:15.400 [error] C1 propagation "2020-08-06T05:04:15.400" 
05:04:18.487 [error] Sending find_sub batch [] 
05:04:18.487 [error] Sending find_sub_aq batch [] 
05:04:18.487 [error] batched message propagation "2020-08-06T05:04:18.487" 
05:04:22.402 [error] C1 propagation "2020-08-06T05:04:22.402" 
05:04:28.488 [error] Sending find_sub batch [] 
05:04:28.488 [error] Sending find_sub_aq batch [] 
05:04:28.488 [error] batched message propagation "2020-08-06T05:04:28.488" 
05:04:29.404 [error] C1 propagation "2020-08-06T05:04:29.404" 
05:04:36.405 [error] C1 propagation "2020-08-06T05:04:36.405" 
05:04:38.490 [error] Sending find_sub batch [] 
05:04:38.490 [error] Sending find_sub_aq batch [] 
05:04:38.490 [error] batched message propagation "2020-08-06T05:04:38.490" 
05:04:43.407 [error] C1 propagation "2020-08-06T05:04:43.407" 
