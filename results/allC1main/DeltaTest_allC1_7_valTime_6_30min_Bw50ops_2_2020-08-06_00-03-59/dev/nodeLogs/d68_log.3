

root@csst-06:/home/ubuntu/laspdev# 
root@csst-06:/home/ubuntu/laspdev# python /home/ubuntu/laspdev/utility/setup_laspp.py d68
d68
ip:16.0.0.18
node:h
root@d68:/# [Kroot@d68:/# service vnstat start
[....] Starting vnStat daemon: vnstatd[?25l7[1G[[32m ok [39;49m8[?12l[?25h.
root@d68:/# sysctl -w net.ipv4.ip_forward=0
net.ipv4.ip_forward = 0
root@d68:/# vnstat -u -i d68-eth0
Error: Unable to read database "/var/lib/vnstat/d68-eth0": No such file or directory
Info: -> A new database has been created.
root@d68:/# vnstat -u
root@d68:/# vnstat

                      rx      /      tx      /     total    /   estimated
 eth0:
       Jul '20      4.00 GiB  /       7 KiB  /    4.00 GiB
       Aug '20         0 KiB  /       0 KiB  /       0 KiB  /       0 KiB
      07/06/20      4.00 GiB  /       0 KiB  /    4.00 GiB
         today         0 KiB  /       0 KiB  /       0 KiB  /      --    

 d68-eth0: Not enough data available yet.
root@d68:/# export PEER_SERVICE=partisan_hyparview_peer_service_manager
root@d68:/# export RATE_CLASS=c1
root@d68:/# export RATE_C1=7000
root@d68:/# export RATE_C2=40000
root@d68:/# export RATE_C3=70000
root@d68:/# export DELTA_INTERVAL=7000
root@d68:/# export PROPAGATE_ON_UPDATE=false
root@d68:/# export MAX_ACTIVE_SIZE=50
root@d68:/# cd /opt/lasp
root@d68:/opt/lasp# epmd -daemon
root@d68:/opt/lasp# rebar3 shell --name h@16.0.0.18
[0;32m===> Verifying dependencies...
[0m[0;32m===> Compiling lasp
[0mErlang/OTP 19 [erts-8.3] [source] [64-bit] [smp:24:24] [ds:24:24:10] [async-threads:0] [hipe] [kernel-poll:false]

Eshell V8.3  (abort with ^G)
(h@16.0.0.18)1> [0;35m===> The rebar3 shell is a development tool; to deploy applications in production, consider using releases (http://www.rebar3.org/docs/releases)
[0m01:23:14.943 [info] Application lager started on node 'h@16.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::01:23:14 ===
          supervisor: {local,sasl_safe_sup}
             started: [{pid,<0.253.0>},
                       {id,alarm_handler},
                       {mfargs,{alarm_handler,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,2000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:14 ===
          supervisor: {local,sasl_sup}
             started: [{pid,<0.252.0>},
                       {id,sasl_safe_sup},
                       {mfargs,
                           {supervisor,start_link,
                               [{local,sasl_safe_sup},sasl,safe]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,sasl_sup}
             started: [{pid,<0.254.0>},
                       {id,release_handler},
                       {mfargs,{release_handler,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,2000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
         application: sasl
          started_at: 'h@16.0.0.18'
01:23:15.010 [info] Application sasl started on node 'h@16.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
         application: lasp_support
          started_at: 'h@16.0.0.18'
01:23:15.010 [info] Application lasp_support started on node 'h@16.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
         application: acceptor_pool
          started_at: 'h@16.0.0.18'
01:23:15.011 [info] Application acceptor_pool started on node 'h@16.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
         application: quickrand
          started_at: 'h@16.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
         application: uuid
          started_at: 'h@16.0.0.18'
01:23:15.011 [info] Application quickrand started on node 'h@16.0.0.18'
01:23:15.011 [info] Application uuid started on node 'h@16.0.0.18'
01:23:15.047 [info] Using node name: 'h@16.0.0.18'
01:23:15.075 [info] Resolving "16.0.0.18"...

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,kernel_safe_sup}
             started: [{pid,<0.266.0>},
                       {id,timer_server},
                       {mfargs,{timer,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,1000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,inet_gethost_native_sup}
             started: [{pid,<0.268.0>},{mfa,{inet_gethost_native,init,[[]]}}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,kernel_safe_sup}
             started: [{pid,<0.267.0>},
                       {id,inet_gethost_native_sup},
                       {mfargs,{inet_gethost_native,start_link,[]}},
                       {restart_type,temporary},
                       {shutdown,1000},
                       {child_type,worker}]
01:23:15.080 [info] Resolved "h@16.0.0.18" to {16,0,0,18}
01:23:15.080 [info] Resolved "16.0.0.18" to {16,0,0,18}
01:23:15.365 [info] Partisan listening on {16,0,0,18}:51527 listen_addrs: [#{ip => {16,0,0,18},port => 51527}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.313.0>},
                       {id,partisan_rpc_backend},
                       {mfargs,{partisan_rpc_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.314.0>},
                       {id,partisan_acknowledgement_backend},
                       {mfargs,
                           {partisan_acknowledgement_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
01:23:15.392 [info] Not using container orchestration; disabling.

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.315.0>},
                       {id,partisan_orchestration_backend},
                       {mfargs,{partisan_orchestration_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
01:23:15.459 [info] node 'h@16.0.0.18' choosing random seed: {120003042,-576460746226132375,-576460752303423405}

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.316.0>},
                       {id,partisan_hyparview_peer_service_manager},
                       {mfargs,
                           {partisan_hyparview_peer_service_manager,
                               start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.317.0>},
                       {id,partisan_peer_service_events},
                       {mfargs,{partisan_peer_service_events,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
01:23:15.478 [info] node 'h@16.0.0.18' choosing random seed: {120003042,-576460746226132375,-576460752303423405}

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.318.0>},
                       {id,partisan_plumtree_backend},
                       {mfargs,{partisan_plumtree_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.319.0>},
                       {id,partisan_plumtree_broadcast},
                       {mfargs,{partisan_plumtree_broadcast,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.320.0>},
                       {id,partisan_monitor},
                       {mfargs,{partisan_monitor,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,partisan_pool_sup}
             started: [{pid,<0.322.0>},
                       {id,partisan_pool},
                       {mfargs,{partisan_pool,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,partisan_pool_sup}
             started: [{pid,<0.323.0>},
                       {id,{partisan_socket,{16,0,0,18},51527}},
                       {mfargs,
                           {partisan_socket,start_link,[{16,0,0,18},51527]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.321.0>},
                       {id,partisan_pool_sup},
                       {mfargs,{partisan_pool_sup,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,20000},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
         application: partisan
          started_at: 'h@16.0.0.18'
01:23:15.705 [info] Application partisan started on node 'h@16.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
          supervisor: {local,plumtree_sup}
             started: [{pid,<0.338.0>},
                       {id,plumtree_broadcast},
                       {mfargs,{plumtree_broadcast,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
         application: plumtree
          started_at: 'h@16.0.0.18'
01:23:15.785 [info] Application plumtree started on node 'h@16.0.0.18'

=PROGRESS REPORT==== 6-Aug-2020::01:23:15 ===
         application: gen_fsm_compat
          started_at: 'h@16.0.0.18'
01:23:15.785 [info] Application gen_fsm_compat started on node 'h@16.0.0.18'
01:23:15.814 [info] Setting jitter: false
01:23:15.831 [info] Setting jitter percent: 1
01:23:15.833 [info] Setting event interval: 0
01:23:15.836 [info] Setting max events: 1000
01:23:15.839 [info] Setting extended logging: false
01:23:15.849 [info] Setting mailbox logging: false
01:23:15.852 [info] Setting operation mode: delta_based
01:23:15.854 [info] Setting set type: orset
01:23:15.887 [info] Setting broadcast: false
01:23:15.962 [info] Membership: false
01:23:15.965 [info] Workflow: false
01:23:16.000 [info] AdClientEnabled: false
01:23:16.006 [info] AdServerEnabled: false
01:23:16.016 [info] TournClientEnabled: false
01:23:16.018 [info] TournServerEnabled: false
01:23:16.020 [info] ThroughputType: gset
01:23:16.024 [info] ThroughputClientEnabled: false
01:23:16.026 [info] ThroughputServerEnabled: false
01:23:16.028 [info] DivergenceType: gcounter
01:23:16.034 [info] DivergenceClientEnabled: false
01:23:16.037 [info] DivergenceServerEnabled: false

=PROGRESS REPORT==== 6-Aug-2020::01:23:16 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.385.0>},
                       {id,lasp_unique},
                       {mfargs,{lasp_unique,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:16 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.386.0>},
                       {id,lasp_plumtree_backend},
                       {mfargs,{lasp_plumtree_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:16 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.387.0>},
                       {id,lasp_plumtree_memory_report},
                       {mfargs,{lasp_plumtree_memory_report,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 6-Aug-2020::01:23:16 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.388.0>},
                       {id,lasp_memory_utilization_report},
                       {mfargs,{lasp_memory_utilization_report,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
01:23:16.292 [info] Backend initialized with pid: <0.393.0>
01:23:16.294 [info] Backend lasp_ets_storage_backend initialized: <0.393.0>
01:23:16.345 [error] Rate Propagations c1: "7000" c2:"40000" c3:"70000" 

=PROGRESS REPORT==== 6-Aug-2020::01:23:16 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.389.0>},
                       {id,lasp_distribution_backend},
                       {mfargs,{lasp_distribution_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
01:23:16.347 [error] C1 propagation "2020-08-06T01:23:16.347" 

=PROGRESS REPORT==== 6-Aug-2020::01:23:16 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.395.0>},
                       {id,lasp_process_sup},
                       {mfargs,{lasp_process_sup,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,supervisor}]
[0;32m===> Booted types
[0m
=PROGRESS REPORT==== 6-Aug-2020::01:23:16 ===
         application: lasp
          started_at: 'h@16.0.0.18'
[0;32m===> Booted gen_flow
[0m[0;32m===> Booted syntax_tools
[0m[0;32m===> Booted compiler
[0m[0;32m===> Booted goldrush
[0m[0;32m===> Booted lager
[0m[0;32m===> Booted sasl
[0m[0;32m===> Booted lasp_support
[0m[0;32m===> Booted acceptor_pool
[0m[0;32m===> Booted quickrand
[0m[0;32m===> Booted uuid
[0m[0;32m===> Booted partisan
[0m[0;32m===> Booted plumtree
[0m[0;32m===> Booted gen_fsm_compat
[0m[0;32m===> Booted lasp
[0m01:23:16.347 [error] C2 propagation "2020-08-06T01:23:16.347" 
01:23:16.347 [error] C3 propagation "2020-08-06T01:23:16.347" 
01:23:16.347 [error] batched message propagation "2020-08-06T01:23:16.347" 
01:23:16.364 [info] Application lasp started on node 'h@16.0.0.18'

(h@16.0.0.18)1> erlang:set_cookie(node(),'RPJVCXYDYULBNZFEFPHJ').
true
(h@16.0.0.18)2> application:get_env(partisan, max_active_size).
{ok,50}
(h@16.0.0.18)3> application:get_env(partisan, max_passive_size).
{ok,10}
(h@16.0.0.18)4> application:get_env(partisan, min_active_size).
{ok,9}
(h@16.0.0.18)5> lasp_config:get(delta_interval, 7500).
7000
(h@16.0.0.18)6> partisan_config:set(passive_view_shuffle_period, 1000000000).
ok
(h@16.0.0.18)7> partisan_config:get(passive_view_shuffle_period).
1000000000
(h@16.0.0.18)8> )8> 01:23:21.460 [error] Id is not get_connections(): [] 
01:23:21.460 [error] Requesting c1 sub ~n
01:23:21.460 [error] Forwarding Req Id "h@16.0.0.18c1" to Peers RcvHop:0 IncHop:1 
01:23:23.349 [error] C1 propagation "2020-08-06T01:23:23.349" 
01:23:26.349 [error] Sending find_sub batch [] 
01:23:26.349 [error] Sending find_sub_aq batch [] 
01:23:26.349 [error] batched message propagation "2020-08-06T01:23:26.349" 
01:23:30.350 [error] C1 propagation "2020-08-06T01:23:30.350" 
01:23:36.351 [error] Sending find_sub batch [] 
01:23:36.351 [error] Sending find_sub_aq batch [] 
01:23:36.351 [error] batched message propagation "2020-08-06T01:23:36.351" 
01:23:37.351 [error] C1 propagation "2020-08-06T01:23:37.351" 
01:23:44.352 [error] C1 propagation "2020-08-06T01:23:44.352" 
01:23:46.353 [error] Sending find_sub batch [] 
01:23:46.353 [error] Sending find_sub_aq batch [] 
01:23:46.353 [error] batched message propagation "2020-08-06T01:23:46.353" 
01:23:51.353 [error] C1 propagation "2020-08-06T01:23:51.353" 
01:23:56.349 [error] C2 propagation "2020-08-06T01:23:56.349" 
01:23:56.390 [error] Sending find_sub batch [] 
01:23:56.390 [error] Sending find_sub_aq batch [] 
01:23:56.390 [error] batched message propagation "2020-08-06T01:23:56.390" 
01:23:58.354 [error] C1 propagation "2020-08-06T01:23:58.354" 
01:24:05.356 [error] C1 propagation "2020-08-06T01:24:05.356" 
01:24:06.392 [error] Sending find_sub batch [] 
01:24:06.392 [error] Sending find_sub_aq batch [] 
01:24:06.392 [error] batched message propagation "2020-08-06T01:24:06.392" 
01:24:12.357 [error] C1 propagation "2020-08-06T01:24:12.357" 
01:24:16.393 [error] Sending find_sub batch [] 
01:24:16.393 [error] Sending find_sub_aq batch [] 
01:24:16.393 [error] batched message propagation "2020-08-06T01:24:16.393" 
01:24:19.358 [error] C1 propagation "2020-08-06T01:24:19.358" 
01:24:26.349 [error] C3 propagation "2020-08-06T01:24:26.349" 
01:24:26.382 [error] C1 propagation "2020-08-06T01:24:26.382" 
01:24:26.415 [error] Sending find_sub batch [] 
01:24:26.415 [error] Sending find_sub_aq batch [] 
01:24:26.416 [error] batched message propagation "2020-08-06T01:24:26.416" 
01:24:33.384 [error] C1 propagation "2020-08-06T01:24:33.384" 
01:24:36.351 [error] C2 propagation "2020-08-06T01:24:36.351" 
01:24:36.417 [error] Sending find_sub batch [] 
01:24:36.417 [error] Sending find_sub_aq batch [] 
01:24:36.417 [error] batched message propagation "2020-08-06T01:24:36.417" 
01:24:40.385 [error] C1 propagation "2020-08-06T01:24:40.385" 
01:24:46.419 [error] Sending find_sub batch [] 
01:24:46.419 [error] Sending find_sub_aq batch [] 
01:24:46.419 [error] batched message propagation "2020-08-06T01:24:46.419" 
01:24:47.386 [error] C1 propagation "2020-08-06T01:24:47.386" 
01:24:54.387 [error] C1 propagation "2020-08-06T01:24:54.387" 
01:24:56.420 [error] Sending find_sub batch [] 
01:24:56.420 [error] Sending find_sub_aq batch [] 
01:24:56.420 [error] batched message propagation "2020-08-06T01:24:56.420" 
lasp_peer_service:join('a@16.0.0.11').
ok
(h@16.0.0.18)9> 01:25:00.667 [error] LASPVIN found the peer at "2020-08-06T01:25:00.667" for ID: "h@16.0.0.18c1" ToNode: 'a@16.0.0.11' Via:'h@16.0.0.18' 
01:25:01.661 [error] Path ToNode:'a@16.0.0.11' does not exists in find_sub_aq
01:25:01.661 [error] ToNode must be a peer 'a@16.0.0.11' as From is self for Id "h@16.0.0.18c1" 
01:25:01.661 [error] Sending Subscription to 'a@16.0.0.11' case4 
01:25:01.661 [error] C1 propagation "2020-08-06T01:25:01.661" 
01:25:01.709 [error] Sending rate "c1" to 'a@16.0.0.11' 
01:25:01.709 [error] Sending Subscription to 'a@16.0.0.11' case4 
01:25:01.767 [error] Rate_subscribe_ack received from 'a@16.0.0.11' for rate "c1" 
01:25:01.767 [error] Rate_subscribe_ack received from 'a@16.0.0.11' for rate "c1" 
lasp_peer_service:members().
{ok,['a@16.0.0.11','h@16.0.0.18']}
(h@16.0.0.18)10> 01:25:06.422 [error] Sending find_sub batch [] 
01:25:06.422 [error] Sending find_sub_aq batch [] 
01:25:06.422 [error] batched message propagation "2020-08-06T01:25:06.422" 
01:25:08.663 [error] C1 propagation "2020-08-06T01:25:08.663" 
01:25:15.664 [error] C1 propagation "2020-08-06T01:25:15.664" 
01:25:16.353 [error] C2 propagation "2020-08-06T01:25:16.353" 
01:25:16.423 [error] Sending find_sub batch [] 
01:25:16.423 [error] Sending find_sub_aq batch [] 
01:25:16.423 [error] batched message propagation "2020-08-06T01:25:16.423" 
lasp_delta_based_synchronization_backend:get_members(peer_rates).
[{'a@16.0.0.11',"c1"},
 {"self_rate","c1"},
 {"subscription",'a@16.0.0.11'}]
(h@16.0.0.18)11> 01:25:22.666 [error] C1 propagation "2020-08-06T01:25:22.666" 
01:25:26.425 [error] Sending find_sub batch [] 
01:25:26.425 [error] Sending find_sub_aq batch [] 
01:25:26.425 [error] batched message propagation "2020-08-06T01:25:26.425" 
01:25:29.668 [error] C1 propagation "2020-08-06T01:25:29.668" 
01:25:36.350 [error] C3 propagation "2020-08-06T01:25:36.350" 
01:25:36.427 [error] Sending find_sub batch [] 
01:25:36.427 [error] Sending find_sub_aq batch [] 
01:25:36.427 [error] batched message propagation "2020-08-06T01:25:36.427" 
01:25:36.670 [error] C1 propagation "2020-08-06T01:25:36.670" 
01:25:43.671 [error] C1 propagation "2020-08-06T01:25:43.671" 
01:25:46.429 [error] Sending find_sub batch [] 
01:25:46.429 [error] Sending find_sub_aq batch [] 
01:25:46.429 [error] batched message propagation "2020-08-06T01:25:46.429" 
01:25:50.673 [error] C1 propagation "2020-08-06T01:25:50.673" 
01:25:56.355 [error] C2 propagation "2020-08-06T01:25:56.355" 
01:25:56.431 [error] Sending find_sub batch [] 
01:25:56.431 [error] Sending find_sub_aq batch [] 
01:25:56.431 [error] batched message propagation "2020-08-06T01:25:56.431" 
01:25:57.675 [error] C1 propagation "2020-08-06T01:25:57.675" 
01:26:04.676 [error] C1 propagation "2020-08-06T01:26:04.676" 
01:26:06.433 [error] Sending find_sub batch [] 
01:26:06.433 [error] Sending find_sub_aq batch [] 
01:26:06.433 [error] batched message propagation "2020-08-06T01:26:06.433" 
01:26:11.678 [error] C1 propagation "2020-08-06T01:26:11.678" 
01:26:16.435 [error] Sending find_sub batch [] 
01:26:16.435 [error] Sending find_sub_aq batch [] 
01:26:16.435 [error] batched message propagation "2020-08-06T01:26:16.435" 
01:26:18.680 [error] C1 propagation "2020-08-06T01:26:18.680" 
01:26:25.682 [error] C1 propagation "2020-08-06T01:26:25.682" 
01:26:26.437 [error] Sending find_sub batch [] 
01:26:26.437 [error] Sending find_sub_aq batch [] 
01:26:26.437 [error] batched message propagation "2020-08-06T01:26:26.437" 
01:26:32.683 [error] C1 propagation "2020-08-06T01:26:32.683" 
01:26:36.357 [error] C2 propagation "2020-08-06T01:26:36.357" 
01:26:36.439 [error] Sending find_sub batch [] 
01:26:36.439 [error] Sending find_sub_aq batch [] 
01:26:36.439 [error] batched message propagation "2020-08-06T01:26:36.439" 
01:26:39.685 [error] C1 propagation "2020-08-06T01:26:39.685" 
01:26:46.352 [error] C3 propagation "2020-08-06T01:26:46.352" 
01:26:46.441 [error] Sending find_sub batch [] 
01:26:46.441 [error] Sending find_sub_aq batch [] 
01:26:46.441 [error] batched message propagation "2020-08-06T01:26:46.441" 
01:26:46.686 [error] C1 propagation "2020-08-06T01:26:46.686" 
01:26:53.688 [error] C1 propagation "2020-08-06T01:26:53.688" 
01:26:56.443 [error] Sending find_sub batch [] 
01:26:56.443 [error] Sending find_sub_aq batch [] 
01:26:56.443 [error] batched message propagation "2020-08-06T01:26:56.443" 
01:27:00.690 [error] C1 propagation "2020-08-06T01:27:00.690" 
01:27:06.445 [error] Sending find_sub batch [] 
01:27:06.445 [error] Sending find_sub_aq batch [] 
01:27:06.445 [error] batched message propagation "2020-08-06T01:27:06.445" 
01:27:07.691 [error] C1 propagation "2020-08-06T01:27:07.691" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)12> AwMapRes.
[]
(h@16.0.0.18)13> f(AwMapRes).
ok
(h@16.0.0.18)14> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:27:07.865"
(h@16.0.0.18)15> {ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mv register]}}).
{ok,[]}
(h@16.0.0.18)16> AwMapRes.
[]
(h@16.0.0.18)17> f(AwMapRes).
ok
(h@16.0.0.18)18> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:27:13.905"
(h@16.0.0.18)19> 01:27:14.692 [error] C1 propagation "2020-08-06T01:27:14.692" 
01:27:16.359 [error] C2 propagation "2020-08-06T01:27:16.359" 
01:27:16.447 [error] Sending find_sub batch [] 
01:27:16.447 [error] Sending find_sub_aq batch [] 
01:27:16.447 [error] batched message propagation "2020-08-06T01:27:16.447" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)20> AwMapRes.
[]
(h@16.0.0.18)21> f(AwMapRes).
ok
(h@16.0.0.18)22> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:27:19.932"
(h@16.0.0.18)23> 01:27:21.693 [error] C1 propagation "2020-08-06T01:27:21.693" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)24> AwMapRes.
[]
(h@16.0.0.18)25> f(AwMapRes).
ok
(h@16.0.0.18)26> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:27:25.967"
(h@16.0.0.18)27> 01:27:26.449 [error] Sending find_sub batch [] 
01:27:26.449 [error] Sending find_sub_aq batch [] 
01:27:26.449 [error] batched message propagation "2020-08-06T01:27:26.449" 
01:27:28.694 [error] C1 propagation "2020-08-06T01:27:28.694" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)28> AwMapRes.
[]
(h@16.0.0.18)29> f(AwMapRes).
ok
(h@16.0.0.18)30> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:27:32.340"
(h@16.0.0.18)31> 01:27:35.695 [error] C1 propagation "2020-08-06T01:27:35.695" 
01:27:36.451 [error] Sending find_sub batch [] 
01:27:36.451 [error] Sending find_sub_aq batch [] 
01:27:36.451 [error] batched message propagation "2020-08-06T01:27:36.451" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)32> AwMapRes.
[]
(h@16.0.0.18)33> f(AwMapRes).
ok
(h@16.0.0.18)34> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:27:38.699"
(h@16.0.0.18)35> 01:27:42.696 [error] C1 propagation "2020-08-06T01:27:42.696" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)36> AwMapRes.
[]
(h@16.0.0.18)37> f(AwMapRes).
ok
(h@16.0.0.18)38> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:27:44.103"
(h@16.0.0.18)39> 01:27:46.453 [error] Sending find_sub batch [] 
01:27:46.453 [error] Sending find_sub_aq batch [] 
01:27:46.453 [error] batched message propagation "2020-08-06T01:27:46.453" 
01:27:49.697 [error] C1 propagation "2020-08-06T01:27:49.697" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)40> AwMapRes.
[]
(h@16.0.0.18)41> f(AwMapRes).
ok
(h@16.0.0.18)42> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:27:50.140"
(h@16.0.0.18)43> {ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mv register]}}).
{ok,[]}
(h@16.0.0.18)44> AwMapRes.
[]
(h@16.0.0.18)45> f(AwMapRes).
ok
(h@16.0.0.18)46> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:27:56.194"
(h@16.0.0.18)47> 01:27:56.354 [error] C3 propagation "2020-08-06T01:27:56.354" 
01:27:56.388 [error] C2 propagation "2020-08-06T01:27:56.388" 
01:27:56.454 [error] Sending find_sub batch [] 
01:27:56.454 [error] Sending find_sub_aq batch [] 
01:27:56.454 [error] batched message propagation "2020-08-06T01:27:56.454" 
01:27:56.698 [error] C1 propagation "2020-08-06T01:27:56.698" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)48> AwMapRes.
[]
(h@16.0.0.18)49> f(AwMapRes).
ok
(h@16.0.0.18)50> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:28:02.230"
(h@16.0.0.18)51> 01:28:03.699 [error] C1 propagation "2020-08-06T01:28:03.699" 
01:28:06.456 [error] Sending find_sub batch [] 
01:28:06.456 [error] Sending find_sub_aq batch [] 
01:28:06.456 [error] batched message propagation "2020-08-06T01:28:06.456" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)52> AwMapRes.
[]
(h@16.0.0.18)53> f(AwMapRes).
ok
(h@16.0.0.18)54> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:28:08.264"
(h@16.0.0.18)55> 01:28:10.700 [error] C1 propagation "2020-08-06T01:28:10.700" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)56> AwMapRes.
[]
(h@16.0.0.18)57> f(AwMapRes).
ok
(h@16.0.0.18)58> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:28:14.300"
(h@16.0.0.18)59> 01:28:16.458 [error] Sending find_sub batch [] 
01:28:16.458 [error] Sending find_sub_aq batch [] 
01:28:16.458 [error] batched message propagation "2020-08-06T01:28:16.458" 
01:28:17.702 [error] C1 propagation "2020-08-06T01:28:17.702" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)60> AwMapRes.
[]
(h@16.0.0.18)61> f(AwMapRes).
ok
(h@16.0.0.18)62> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:28:20.354"
(h@16.0.0.18)63> 01:28:24.703 [error] C1 propagation "2020-08-06T01:28:24.703" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)64> AwMapRes.
[]
(h@16.0.0.18)65> f(AwMapRes).
ok
(h@16.0.0.18)66> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:28:26.390"
(h@16.0.0.18)67> 01:28:26.460 [error] Sending find_sub batch [] 
01:28:26.460 [error] Sending find_sub_aq batch [] 
01:28:26.460 [error] batched message propagation "2020-08-06T01:28:26.460" 
01:28:31.704 [error] C1 propagation "2020-08-06T01:28:31.704" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)68> AwMapRes.
[]
(h@16.0.0.18)69> f(AwMapRes).
ok
(h@16.0.0.18)70> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:28:32.430"
(h@16.0.0.18)71> 01:28:36.390 [error] C2 propagation "2020-08-06T01:28:36.390" 
01:28:36.462 [error] Sending find_sub batch [] 
01:28:36.462 [error] Sending find_sub_aq batch [] 
01:28:36.462 [error] batched message propagation "2020-08-06T01:28:36.462" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)72> AwMapRes.
[]
(h@16.0.0.18)73> f(AwMapRes).
ok
(h@16.0.0.18)74> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:28:38.471"
(h@16.0.0.18)75> 01:28:38.705 [error] C1 propagation "2020-08-06T01:28:38.705" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)76> AwMapRes.
[]
(h@16.0.0.18)77> f(AwMapRes).
ok
(h@16.0.0.18)78> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:28:44.506"
(h@16.0.0.18)79> 01:28:45.707 [error] C1 propagation "2020-08-06T01:28:45.707" 
01:28:46.464 [error] Sending find_sub batch [] 
01:28:46.464 [error] Sending find_sub_aq batch [] 
01:28:46.464 [error] batched message propagation "2020-08-06T01:28:46.464" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)80> AwMapRes.
[]
(h@16.0.0.18)81> f(AwMapRes).
ok
(h@16.0.0.18)82> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:28:50.541"
(h@16.0.0.18)83> 01:28:52.709 [error] C1 propagation "2020-08-06T01:28:52.709" 
01:28:56.466 [error] Sending find_sub batch [] 
01:28:56.466 [error] Sending find_sub_aq batch [] 
01:28:56.466 [error] batched message propagation "2020-08-06T01:28:56.466" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)84> AwMapRes.
[]
(h@16.0.0.18)85> f(AwMapRes).
ok
(h@16.0.0.18)86> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:28:56.572"
(h@16.0.0.18)87> 01:28:59.710 [error] C1 propagation "2020-08-06T01:28:59.710" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)88> AwMapRes.
[]
(h@16.0.0.18)89> f(AwMapRes).
ok
(h@16.0.0.18)90> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:29:02.606"
(h@16.0.0.18)91> 01:29:06.356 [error] C3 propagation "2020-08-06T01:29:06.356" 
01:29:06.467 [error] Sending find_sub batch [] 
01:29:06.467 [error] Sending find_sub_aq batch [] 
01:29:06.467 [error] batched message propagation "2020-08-06T01:29:06.467" 
01:29:06.712 [error] C1 propagation "2020-08-06T01:29:06.712" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)92> AwMapRes.
[]
(h@16.0.0.18)93> f(AwMapRes).
ok
(h@16.0.0.18)94> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:29:08.648"
(h@16.0.0.18)95> 01:29:13.713 [error] C1 propagation "2020-08-06T01:29:13.713" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)96> AwMapRes.
[]
(h@16.0.0.18)97> f(AwMapRes).
ok
(h@16.0.0.18)98> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:29:14.689"
(h@16.0.0.18)99> 01:29:16.392 [error] C2 propagation "2020-08-06T01:29:16.392" 
01:29:16.469 [error] Sending find_sub batch [] 
01:29:16.469 [error] Sending find_sub_aq batch [] 
01:29:16.469 [error] batched message propagation "2020-08-06T01:29:16.469" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)100> AwMapRes.
[]
(h@16.0.0.18)101> f(AwMapRes).
ok
(h@16.0.0.18)102> 01:29:20.715 [error] C1 propagation "2020-08-06T01:29:20.715"  
lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:29:20.758"
(h@16.0.0.18)103> 01:29:26.471 [error] Sending find_sub batch [] 
01:29:26.471 [error] Sending find_sub_aq batch [] 
01:29:26.471 [error] batched message propagation "2020-08-06T01:29:26.471" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)104> AwMapRes.
[]
(h@16.0.0.18)105> f(AwMapRes).
ok
(h@16.0.0.18)106> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:29:26.759"
(h@16.0.0.18)107> 01:29:27.716 [error] C1 propagation "2020-08-06T01:29:27.716"  
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)108> AwMapRes.
[]
(h@16.0.0.18)109> f(AwMapRes).
ok
(h@16.0.0.18)110> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:29:32.810"
(h@16.0.0.18)111> 01:29:34.717 [error] C1 propagation "2020-08-06T01:29:34.717"  
01:29:36.473 [error] Sending find_sub batch [] 
01:29:36.473 [error] Sending find_sub_aq batch [] 
01:29:36.473 [error] batched message propagation "2020-08-06T01:29:36.473" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[]}
(h@16.0.0.18)112> AwMapRes.
[]
(h@16.0.0.18)113> f(AwMapRes).
ok
(h@16.0.0.18)114> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:29:38.853"
(h@16.0.0.18)115> 01:29:40.747 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:29:40.746" Took=38108 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_29_06_454}],[],[],[],[]}}}}] 
01:29:40.747 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",0,0},{"delta_send",0,1},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",4,0},{"sub_cancel",0,0}] 
01:29:41.719 [error] C1 propagation "2020-08-06T01:29:41.719" 
01:29:41.815 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:29:41.816 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,2}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:1 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_29_06_454}],
             [],[],...}}}}]}
(h@16.0.0.18)116> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_29_06_454}],
         [],[],[],[]}}}}]
(h@16.0.0.18)117> f(AwMapRes).
ok
(h@16.0.0.18)118> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:29:44.889"
(h@16.0.0.18)119> 01:29:46.475 [error] Sending find_sub batch [] 
01:29:46.475 [error] Sending find_sub_aq batch [] 
01:29:46.475 [error] batched message propagation "2020-08-06T01:29:46.475" 
01:29:48.739 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:29:48.739" Took=39221 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_01_29_32_565}],[],[],[],[],[],[],[],[]}}}}] 
01:29:48.739 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",1,0},{"delta_send",1,2},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",6,0},{"sub_cancel",0,0}] 
01:29:48.739 [error] C1 propagation "2020-08-06T01:29:48.739" 
01:29:48.739 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:29:48.740 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,3}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:2 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_01_29_32_565}],
             [],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)120> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_01_29_32_565}],
         [],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)121> f(AwMapRes).
ok
(h@16.0.0.18)122> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:29:50.922"
(h@16.0.0.18)123> 01:29:54.270 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:29:54.270" Took=30311 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_29_38_587}],[],[],[]}}}}] 
01:29:54.270 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",2,0},{"delta_send",2,3},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",8,0},{"sub_cancel",0,0}] 
01:29:55.741 [error] C1 propagation "2020-08-06T01:29:55.741" 
01:29:55.741 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:29:55.741 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,4}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:3 
01:29:56.394 [error] C2 propagation "2020-08-06T01:29:56.394" 
01:29:56.477 [error] Sending find_sub batch [] 
01:29:56.477 [error] Sending find_sub_aq batch [] 
01:29:56.477 [error] batched message propagation "2020-08-06T01:29:56.477" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)124> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_29_38_587}],
         [],[],[]}}}}]
(h@16.0.0.18)125> f(AwMapRes).
ok
(h@16.0.0.18)126> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:29:56.965"
(h@16.0.0.18)127> 01:30:01.265 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:30:01.264" Took=24514 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_29_44_607}],[],[]}}}}] 
01:30:01.265 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",3,3},{"delta_send",3,4},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",10,0},{"sub_cancel",0,0}] 
01:30:02.742 [error] C1 propagation "2020-08-06T01:30:02.742" 
01:30:02.810 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:30:02.810 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,5}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:4 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)128> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_29_44_607}],
         [],[]}}}}]
(h@16.0.0.18)129> f(AwMapRes).
ok
(h@16.0.0.18)130> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:30:03.739"
(h@16.0.0.18)131> 01:30:06.478 [error] Sending find_sub batch [] 
01:30:06.478 [error] Sending find_sub_aq batch [] 
01:30:06.478 [error] batched message propagation "2020-08-06T01:30:06.478" 
01:30:08.290 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:30:08.290" Took=41574 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_29_50_627}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:30:08.291 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",4,4},{"delta_send",4,5},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",12,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_29_50_627}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)132> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_29_50_627}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)133> f(AwMapRes).
ok
(h@16.0.0.18)134> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:30:09.459"
(h@16.0.0.18)135> 01:30:09.743 [error] C1 propagation "2020-08-06T01:30:09.743"  
01:30:09.784 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:30:09.784 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,6}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:5 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_29_50_627}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)136> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_29_50_627}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)137> f(AwMapRes).
ok
(h@16.0.0.18)138> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:30:15.918"
(h@16.0.0.18)139> 01:30:15.361 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:30:15.361" Took=42873 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_29_56_647}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:30:15.361 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",5,5},{"delta_send",5,6},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",14,0},{"sub_cancel",0,0}] 
01:30:16.358 [error] C3 propagation "2020-08-06T01:30:16.358" 
01:30:16.479 [error] Sending find_sub batch [] 
01:30:16.479 [error] Sending find_sub_aq batch [] 
01:30:16.479 [error] batched message propagation "2020-08-06T01:30:16.479" 
01:30:16.744 [error] C1 propagation "2020-08-06T01:30:16.744" 
01:30:16.744 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:30:16.744 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,7}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:6 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_29_56_647}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)140> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_29_56_647}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)141> f(AwMapRes).
ok
(h@16.0.0.18)142> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:30:21.131"
(h@16.0.0.18)143> 01:30:23.601 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:30:23.601" Took=33167 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_30_08_696}],[]}}}}] 
01:30:23.602 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",6,6},{"delta_send",6,7},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",16,0},{"sub_cancel",0,0}] 
01:30:23.747 [error] C1 propagation "2020-08-06T01:30:23.747" 
01:30:23.748 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:30:23.748 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,8}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:7 
01:30:26.481 [error] Sending find_sub batch [] 
01:30:26.481 [error] Sending find_sub_aq batch [] 
01:30:26.481 [error] batched message propagation "2020-08-06T01:30:26.481" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)144> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)145> f(AwMapRes).
ok
(h@16.0.0.18)146> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:30:27.168"
(h@16.0.0.18)147> 01:30:29.343 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:30:29.343" Took=24812 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_30_14_719}],[],[],[]}}}}] 
01:30:29.343 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",7,7},{"delta_send",7,8},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",18,0},{"sub_cancel",0,0}] 
01:30:30.748 [error] C1 propagation "2020-08-06T01:30:30.748" 
01:30:30.748 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:30:30.748 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,9}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:8 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)148> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_30_14_719}],
         [],[],[]}}}}]
(h@16.0.0.18)149> f(AwMapRes).
ok
(h@16.0.0.18)150> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:30:33.210"
(h@16.0.0.18)151> 01:30:36.395 [error] C2 propagation "2020-08-06T01:30:36.395"  
01:30:36.483 [error] Sending find_sub batch [] 
01:30:36.483 [error] Sending find_sub_aq batch [] 
01:30:36.483 [error] batched message propagation "2020-08-06T01:30:36.483" 
01:30:36.732 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:30:36.732" Took=27259 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_01_30_20_739}],[],[],[],[],[],[],[],[]}}}}] 
01:30:36.732 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",8,8},{"delta_send",8,9},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",20,0},{"sub_cancel",0,0}] 
01:30:37.750 [error] C1 propagation "2020-08-06T01:30:37.750" 
01:30:37.751 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:30:37.751 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,10}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:9 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_01_30_20_739}],
             [],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)152> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_01_30_20_739}],
         [],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)153> f(AwMapRes).
ok
(h@16.0.0.18)154> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:30:39.249"
(h@16.0.0.18)155> 01:30:43.710 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:30:43.710" Took=35330 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_30_26_759}],[],[]}}}}] 
01:30:43.710 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",9,9},{"delta_send",9,10},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",22,0},{"sub_cancel",0,0}] 
01:30:44.752 [error] C1 propagation "2020-08-06T01:30:44.752" 
01:30:44.832 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:30:44.832 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,11}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:10 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)156> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_30_26_759}],
         [],[]}}}}]
(h@16.0.0.18)157> f(AwMapRes).
ok
(h@16.0.0.18)158> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:30:45.287"
(h@16.0.0.18)159> 01:30:46.485 [error] Sending find_sub batch [] 
01:30:46.485 [error] Sending find_sub_aq batch [] 
01:30:46.485 [error] batched message propagation "2020-08-06T01:30:46.485" 
01:30:50.747 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:30:50.747" Took=24032 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_30_32_778}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:30:50.748 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",10,10},{"delta_send",10,11},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",24,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_30_32_778}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)160> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_30_32_778}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)161> f(AwMapRes).
ok
(h@16.0.0.18)162> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:30:51.328"
(h@16.0.0.18)163> 01:30:51.754 [error] C1 propagation "2020-08-06T01:30:51.754"  
01:30:51.785 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:30:51.785 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,12}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:11 
01:30:56.487 [error] Sending find_sub batch [] 
01:30:56.487 [error] Sending find_sub_aq batch [] 
01:30:56.487 [error] batched message propagation "2020-08-06T01:30:56.487" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_30_32_778}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)164> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_30_32_778}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)165> f(AwMapRes).
ok
(h@16.0.0.18)166> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:30:57.366"
(h@16.0.0.18)167> 01:30:57.721 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:30:57.721" Took=39530 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_30_38_802}],[],[],[],[],[]}}}}] 
01:30:57.721 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",11,11},{"delta_send",11,12},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",26,0},{"sub_cancel",0,0}] 
01:30:58.755 [error] C1 propagation "2020-08-06T01:30:58.755" 
01:30:58.784 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:30:58.784 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,13}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:12 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_30_38_802}],
             [],[],[],...}}}}]}
(h@16.0.0.18)168> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_30_38_802}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)169> f(AwMapRes).
ok
(h@16.0.0.18)170> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:31:03.412"
(h@16.0.0.18)171> 01:31:04.723 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:31:04.723" Took=29754 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_30_50_851}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:31:04.723 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",12,12},{"delta_send",12,13},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",28,0},{"sub_cancel",0,0}] 
01:31:05.756 [error] C1 propagation "2020-08-06T01:31:05.756" 
01:31:05.761 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:31:05.761 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,14}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:13 
01:31:06.489 [error] Sending find_sub batch [] 
01:31:06.489 [error] Sending find_sub_aq batch [] 
01:31:06.489 [error] batched message propagation "2020-08-06T01:31:06.489" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_30_50_851}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)172> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_30_50_851}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)173> f(AwMapRes).
ok
(h@16.0.0.18)174> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:31:09.456"
(h@16.0.0.18)175> 01:31:11.705 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:31:11.705" Took=25050 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_30_56_871}],[],[],[]}}}}] 
01:31:11.706 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",13,13},{"delta_send",13,14},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",30,0},{"sub_cancel",0,0}] 
01:31:12.757 [error] C1 propagation "2020-08-06T01:31:12.757" 
01:31:12.757 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:31:12.757 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,15}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:14 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)176> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_30_56_871}],
         [],[],[]}}}}]
(h@16.0.0.18)177> f(AwMapRes).
ok
(h@16.0.0.18)178> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:31:15.502"
(h@16.0.0.18)179> 01:31:16.397 [error] C2 propagation "2020-08-06T01:31:16.397"  
01:31:16.491 [error] Sending find_sub batch [] 
01:31:16.491 [error] Sending find_sub_aq batch [] 
01:31:16.491 [error] batched message propagation "2020-08-06T01:31:16.491" 
01:31:18.707 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:31:18.707" Took=25616 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_31_02_895}],[],[],[],[],[]}}}}] 
01:31:18.708 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",14,14},{"delta_send",14,15},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",32,0},{"sub_cancel",0,0}] 
01:31:19.758 [error] C1 propagation "2020-08-06T01:31:19.758" 
01:31:19.758 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:31:19.758 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,16}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:15 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_31_02_895}],
             [],[],[],...}}}}]}
(h@16.0.0.18)180> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_31_02_895}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)181> f(AwMapRes).
ok
(h@16.0.0.18)182> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:31:21.537"
(h@16.0.0.18)183> 01:31:25.709 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:31:25.709" Took=29234 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_31_08_919}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:31:25.710 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",15,15},{"delta_send",15,16},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",34,0},{"sub_cancel",0,0}] 
01:31:26.359 [error] C3 propagation "2020-08-06T01:31:26.359" 
01:31:26.493 [error] Sending find_sub batch [] 
01:31:26.493 [error] Sending find_sub_aq batch [] 
01:31:26.493 [error] batched message propagation "2020-08-06T01:31:26.493" 
01:31:26.759 [error] C1 propagation "2020-08-06T01:31:26.759" 
01:31:26.759 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:31:26.759 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,17}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:16 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_31_08_919}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)184> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_31_08_919}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)185> f(AwMapRes).
ok
(h@16.0.0.18)186> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:31:27.580"
(h@16.0.0.18)187> 01:31:32.709 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:31:32.708" Took=26098 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_31_14_942}],[],[],[],[]}}}}] 
01:31:32.710 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",16,16},{"delta_send",16,17},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",36,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_31_14_942}],
             [],[],...}}}}]}
(h@16.0.0.18)188> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_31_14_942}],
         [],[],[],[]}}}}]
(h@16.0.0.18)189> f(AwMapRes).
ok
(h@16.0.0.18)190> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:31:33.635"
(h@16.0.0.18)191> 01:31:33.760 [error] C1 propagation "2020-08-06T01:31:33.760"  
01:31:33.760 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:31:33.760 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,18}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:17 
01:31:36.495 [error] Sending find_sub batch [] 
01:31:36.495 [error] Sending find_sub_aq batch [] 
01:31:36.495 [error] batched message propagation "2020-08-06T01:31:36.495" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_31_14_942}],
             [],[],...}}}}]}
(h@16.0.0.18)192> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_31_14_942}],
         [],[],[],[]}}}}]
(h@16.0.0.18)193> f(AwMapRes).
ok
(h@16.0.0.18)194> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:31:39.676"
(h@16.0.0.18)195> 01:31:39.722 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:31:39.722" Took=30749 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_31_20_961}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:31:39.723 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",17,17},{"delta_send",17,18},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",38,0},{"sub_cancel",0,0}] 
01:31:40.761 [error] C1 propagation "2020-08-06T01:31:40.761" 
01:31:40.761 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:31:40.761 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,19}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:18 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_31_20_961}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)196> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_31_20_961}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)197> f(AwMapRes).
ok
(h@16.0.0.18)198> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:31:45.712"
(h@16.0.0.18)199> 01:31:46.497 [error] Sending find_sub batch [] 
01:31:46.497 [error] Sending find_sub_aq batch [] 
01:31:46.497 [error] batched message propagation "2020-08-06T01:31:46.497" 
01:31:46.714 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:31:46.714" Took=27879 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_31_33_002}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:31:46.738 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",18,18},{"delta_send",18,19},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",40,0},{"sub_cancel",0,0}] 
01:31:47.762 [error] C1 propagation "2020-08-06T01:31:47.762" 
01:31:47.810 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:31:47.810 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,20}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:19 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_31_33_002}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)200> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_31_33_002}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)201> f(AwMapRes).
ok
(h@16.0.0.18)202> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:31:51.748"
(h@16.0.0.18)203> 01:31:53.722 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:31:53.722" Took=35012 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_31_39_023}],[]}}}}] 
01:31:53.723 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",19,19},{"delta_send",19,20},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",42,0},{"sub_cancel",0,0}] 
01:31:54.764 [error] C1 propagation "2020-08-06T01:31:54.764" 
01:31:54.819 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:31:54.819 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,21}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:20 
01:31:56.399 [error] C2 propagation "2020-08-06T01:31:56.399" 
01:31:56.499 [error] Sending find_sub batch [] 
01:31:56.499 [error] Sending find_sub_aq batch [] 
01:31:56.499 [error] batched message propagation "2020-08-06T01:31:56.499" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)204> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)205> f(AwMapRes).
ok
(h@16.0.0.18)206> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:31:57.782"
(h@16.0.0.18)207> 01:32:00.734 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:32:00.734" Took=46438 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_31_45_043}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:32:00.734 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",20,20},{"delta_send",20,21},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",44,0},{"sub_cancel",0,0}] 
01:32:01.766 [error] C1 propagation "2020-08-06T01:32:01.766" 
01:32:01.766 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:32:01.766 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,22}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:21 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_31_45_043}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)208> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_31_45_043}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)209> f(AwMapRes).
ok
(h@16.0.0.18)210> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:32:03.827"
(h@16.0.0.18)211> 01:32:06.501 [error] Sending find_sub batch [] 
01:32:06.501 [error] Sending find_sub_aq batch [] 
01:32:06.501 [error] batched message propagation "2020-08-06T01:32:06.501" 
01:32:07.720 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:32:07.720" Took=25020 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_31_51_063}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:32:07.720 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",21,21},{"delta_send",21,22},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",46,0},{"sub_cancel",0,0}] 
01:32:08.768 [error] C1 propagation "2020-08-06T01:32:08.768" 
01:32:08.771 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:32:08.771 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,23}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:22 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_31_51_063}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)212> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_31_51_063}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)213> f(AwMapRes).
ok
(h@16.0.0.18)214> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:32:09.864"
(h@16.0.0.18)215> 01:32:14.743 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:32:14.743" Took=47617 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_31_57_092}],[],[],[]}}}}] 
01:32:14.744 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",22,22},{"delta_send",22,23},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",48,0},{"sub_cancel",0,0}] 
01:32:15.770 [error] C1 propagation "2020-08-06T01:32:15.770" 
01:32:15.772 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)216> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_31_57_092}],
         [],[],[]}}}}]
(h@16.0.0.18)217> f(AwMapRes).
ok
(h@16.0.0.18)218> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:32:15.976"
(h@16.0.0.18)219> 01:32:15.772 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,24}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:23 
01:32:16.503 [error] Sending find_sub batch [] 
01:32:16.503 [error] Sending find_sub_aq batch [] 
01:32:16.503 [error] batched message propagation "2020-08-06T01:32:16.503" 
01:32:21.719 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:32:21.719" Took=24489 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_32_03_119}],[],[],[],[],[],[],[],[],[]}}}}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_32_03_119}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)220> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_32_03_119}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)221> 01:32:21.720 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",23,23},{"delta_send",23,24},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",50,0},{"sub_cancel",0,0}] 
f(AwMapRes).
ok
(h@16.0.0.18)222> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:32:21.944"
(h@16.0.0.18)223> 01:32:22.772 [error] C1 propagation "2020-08-06T01:32:22.772"  
01:32:22.775 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:32:22.775 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,25}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:24 
01:32:26.505 [error] Sending find_sub batch [] 
01:32:26.505 [error] Sending find_sub_aq batch [] 
01:32:26.505 [error] batched message propagation "2020-08-06T01:32:26.505" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_32_03_119}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)224> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_32_03_119}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)225> f(AwMapRes).
ok
(h@16.0.0.18)226> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:32:27.979"
(h@16.0.0.18)227> 01:32:28.751 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:32:28.751" Took=34727 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_32_15_159}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:32:28.752 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",24,24},{"delta_send",24,25},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",52,0},{"sub_cancel",0,0}] 
01:32:29.774 [error] C1 propagation "2020-08-06T01:32:29.774" 
01:32:29.799 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:32:29.799 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,26}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:25 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_32_15_159}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)228> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_32_15_159}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)229> f(AwMapRes).
ok
(h@16.0.0.18)230> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:32:34.189"
(h@16.0.0.18)231> 01:32:35.726 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:32:35.726" Took=31055 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_32_21_179}],[],[]}}}}] 
01:32:35.727 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",25,25},{"delta_send",25,26},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",54,0},{"sub_cancel",0,0}] 
01:32:36.360 [error] C3 propagation "2020-08-06T01:32:36.360" 
01:32:36.443 [error] C2 propagation "2020-08-06T01:32:36.443" 
01:32:36.507 [error] Sending find_sub batch [] 
01:32:36.507 [error] Sending find_sub_aq batch [] 
01:32:36.507 [error] batched message propagation "2020-08-06T01:32:36.507" 
01:32:36.775 [error] C1 propagation "2020-08-06T01:32:36.775" 
01:32:36.776 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:32:36.776 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,27}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:26 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)232> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_32_21_179}],
         [],[]}}}}]
(h@16.0.0.18)233> f(AwMapRes).
ok
(h@16.0.0.18)234> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:32:40.574"
(h@16.0.0.18)235> 01:32:42.726 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:32:42.726" Took=29714 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_01_32_27_205}],[],[],[],[],[],[],[],[]}}}}] 
01:32:42.726 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",26,26},{"delta_send",26,27},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",56,0},{"sub_cancel",0,0}] 
01:32:43.777 [error] C1 propagation "2020-08-06T01:32:43.777" 
01:32:43.814 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:32:43.814 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,28}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:27 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_01_32_27_205}],
             [],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)236> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_01_32_27_205}],
         [],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)237> f(AwMapRes).
ok
(h@16.0.0.18)238> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:32:46.980"
(h@16.0.0.18)239> 01:32:46.509 [error] Sending find_sub batch [] 
01:32:46.509 [error] Sending find_sub_aq batch [] 
01:32:46.509 [error] batched message propagation "2020-08-06T01:32:46.509" 
01:32:49.731 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:32:49.731" Took=34397 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_32_33_226}],[],[],[],[],[]}}}}] 
01:32:49.732 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",27,27},{"delta_send",27,28},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",58,0},{"sub_cancel",0,0}] 
01:32:50.778 [error] C1 propagation "2020-08-06T01:32:50.778" 
01:32:50.778 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:32:50.778 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,29}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:28 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_32_33_226}],
             [],[],[],...}}}}]}
(h@16.0.0.18)240> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_32_33_226}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)241> f(AwMapRes).
ok
(h@16.0.0.18)242> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:32:52.133"
(h@16.0.0.18)243> 01:32:56.511 [error] Sending find_sub batch [] 
01:32:56.511 [error] Sending find_sub_aq batch [] 
01:32:56.511 [error] batched message propagation "2020-08-06T01:32:56.511" 
01:32:56.748 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:32:56.747" Took=46354 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_01_32_39_246}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:32:56.840 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",28,28},{"delta_send",28,29},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",60,0},{"sub_cancel",0,0}] 
01:32:57.779 [error] C1 propagation "2020-08-06T01:32:57.779" 
01:32:57.820 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:32:57.821 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,30}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:29 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_01_32_39_246}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)244> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_01_32_39_246}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)245> f(AwMapRes).
ok
(h@16.0.0.18)246> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:32:58.174"
(h@16.0.0.18)247> 01:33:03.736 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:33:03.735" Took=32909 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_32_45_268}],[],[]}}}}] 
01:33:03.738 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",29,29},{"delta_send",29,30},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",62,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)248> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_32_45_268}],
         [],[]}}}}]
(h@16.0.0.18)249> f(AwMapRes).
ok
(h@16.0.0.18)250> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:33:04.220"
(h@16.0.0.18)251> 01:33:04.781 [error] C1 propagation "2020-08-06T01:33:04.781"  
01:33:04.801 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:33:04.801 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,31}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:30 
01:33:06.512 [error] Sending find_sub batch [] 
01:33:06.512 [error] Sending find_sub_aq batch [] 
01:33:06.512 [error] batched message propagation "2020-08-06T01:33:06.512" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)252> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_32_45_268}],
         [],[]}}}}]
(h@16.0.0.18)253> f(AwMapRes).
ok
(h@16.0.0.18)254> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:33:10.252"
(h@16.0.0.18)255> 01:33:10.731 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:33:10.731" Took=26727 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_32_57_307}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:33:10.732 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",30,30},{"delta_send",30,31},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",64,0},{"sub_cancel",0,0}] 
01:33:11.783 [error] C1 propagation "2020-08-06T01:33:11.783" 
01:33:11.805 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:33:11.806 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,32}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:31 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_32_57_307}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)256> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_32_57_307}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)257> f(AwMapRes).
ok
(h@16.0.0.18)258> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:33:16.294"
(h@16.0.0.18)259> 01:33:16.444 [error] C2 propagation "2020-08-06T01:33:16.444"  
01:33:16.513 [error] Sending find_sub batch [] 
01:33:16.513 [error] Sending find_sub_aq batch [] 
01:33:16.513 [error] batched message propagation "2020-08-06T01:33:16.513" 
01:33:17.734 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:33:17.734" Took=27901 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_33_03_331}],[],[],[]}}}}] 
01:33:17.735 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",31,31},{"delta_send",31,32},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",66,0},{"sub_cancel",0,0}] 
01:33:18.784 [error] C1 propagation "2020-08-06T01:33:18.784" 
01:33:18.810 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:33:18.810 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,33}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:32 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)260> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_33_03_331}],
         [],[],[]}}}}]
(h@16.0.0.18)261> f(AwMapRes).
ok
(h@16.0.0.18)262> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:33:22.332"
(h@16.0.0.18)263> 01:33:24.749 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:33:24.749" Took=39487 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_33_09_352}],[],[],[],[],[]}}}}] 
01:33:24.749 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",32,32},{"delta_send",32,33},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",68,0},{"sub_cancel",0,0}] 
01:33:25.785 [error] C1 propagation "2020-08-06T01:33:25.785" 
01:33:25.827 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:33:25.827 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,34}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:33 
01:33:26.515 [error] Sending find_sub batch [] 
01:33:26.515 [error] Sending find_sub_aq batch [] 
01:33:26.515 [error] batched message propagation "2020-08-06T01:33:26.515" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_33_09_352}],
             [],[],[],...}}}}]}
(h@16.0.0.18)264> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_33_09_352}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)265> f(AwMapRes).
ok
(h@16.0.0.18)266> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:33:28.366"
(h@16.0.0.18)267> 01:33:31.749 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:33:31.749" Took=40643 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_33_15_375}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:33:31.750 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",33,33},{"delta_send",33,34},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",70,0},{"sub_cancel",0,0}] 
01:33:32.786 [error] C1 propagation "2020-08-06T01:33:32.786" 
01:33:32.786 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:33:32.786 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,35}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:34 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_33_15_375}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)268> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_33_15_375}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)269> f(AwMapRes).
ok
(h@16.0.0.18)270> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:33:34.409"
(h@16.0.0.18)271> 01:33:36.517 [error] Sending find_sub batch [] 
01:33:36.517 [error] Sending find_sub_aq batch [] 
01:33:36.517 [error] batched message propagation "2020-08-06T01:33:36.517" 
01:33:38.746 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:33:38.746" Took=36545 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_33_21_392}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:33:38.746 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",34,34},{"delta_send",34,35},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",72,0},{"sub_cancel",0,0}] 
01:33:39.788 [error] C1 propagation "2020-08-06T01:33:39.788" 
01:33:39.876 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:33:39.876 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,36}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:35 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_33_21_392}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)272> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_33_21_392}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)273> f(AwMapRes).
ok
(h@16.0.0.18)274> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:33:40.443"
(h@16.0.0.18)275> 01:33:45.742 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:33:45.741" Took=28124 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_33_27_415}],[]}}}}] 
01:33:45.742 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",35,35},{"delta_send",35,36},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",74,0},{"sub_cancel",0,0}] 
01:33:46.361 [error] C3 propagation "2020-08-06T01:33:46.361" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)276> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)277> f(AwMapRes).
ok
(h@16.0.0.18)278> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:33:46.481"
(h@16.0.0.18)279> 01:33:46.519 [error] Sending find_sub batch [] 
01:33:46.519 [error] Sending find_sub_aq batch [] 
01:33:46.519 [error] batched message propagation "2020-08-06T01:33:46.519" 
01:33:46.789 [error] C1 propagation "2020-08-06T01:33:46.789" 
01:33:46.799 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:33:46.799 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,37}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:36 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)280> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)281> f(AwMapRes).
ok
(h@16.0.0.18)282> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:33:52.518"
(h@16.0.0.18)283> 01:33:52.740 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:33:52.740" Took=23313 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_33_33_438}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:33:52.740 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",36,36},{"delta_send",36,37},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",76,0},{"sub_cancel",0,0}] 
01:33:53.790 [error] C1 propagation "2020-08-06T01:33:53.790" 
01:33:53.833 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:33:53.833 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,38}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:37 
01:33:56.446 [error] C2 propagation "2020-08-06T01:33:56.446" 
01:33:56.521 [error] Sending find_sub batch [] 
01:33:56.521 [error] Sending find_sub_aq batch [] 
01:33:56.521 [error] batched message propagation "2020-08-06T01:33:56.521" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_33_33_438}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)284> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_33_33_438}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)285> f(AwMapRes).
ok
(h@16.0.0.18)286> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:33:58.560"
(h@16.0.0.18)287> 01:33:59.745 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:33:59.745" Took=29809 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_33_45_490}],[],[],[],[],[]}}}}] 
01:33:59.746 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",37,37},{"delta_send",37,38},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",78,0},{"sub_cancel",0,0}] 
01:34:00.791 [error] C1 propagation "2020-08-06T01:34:00.791" 
01:34:00.791 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:34:00.791 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,39}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:38 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_33_45_490}],
             [],[],[],...}}}}]}
(h@16.0.0.18)288> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_33_45_490}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)289> f(AwMapRes).
ok
(h@16.0.0.18)290> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:34:04.594"
(h@16.0.0.18)291> 01:34:06.523 [error] Sending find_sub batch [] 
01:34:06.523 [error] Sending find_sub_aq batch [] 
01:34:06.523 [error] batched message propagation "2020-08-06T01:34:06.523" 
01:34:06.792 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:34:06.792" Took=24786 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_33_51_515}]}}}}] 
01:34:06.917 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",38,38},{"delta_send",38,39},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",80,0},{"sub_cancel",0,0}] 
01:34:07.793 [error] C1 propagation "2020-08-06T01:34:07.793" 
01:34:07.861 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:34:07.861 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,40}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:39 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)292> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@16.0.0.18)293> f(AwMapRes).
ok
(h@16.0.0.18)294> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:34:10.627"
(h@16.0.0.18)295> 01:34:13.746 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:34:13.746" Took=30023 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_33_57_537}],[],[],[],[],[]}}}}] 
01:34:13.747 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",39,39},{"delta_send",39,40},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",82,0},{"sub_cancel",0,0}] 
01:34:14.795 [error] C1 propagation "2020-08-06T01:34:14.795" 
01:34:14.894 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:34:14.895 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,41}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:40 
01:34:16.525 [error] Sending find_sub batch [] 
01:34:16.525 [error] Sending find_sub_aq batch [] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
01:34:16.525 [error] batched message propagation "2020-08-06T01:34:16.525" 
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_33_57_537}],
             [],[],[],...}}}}]}
(h@16.0.0.18)296> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_33_57_537}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)297> f(AwMapRes).
ok
(h@16.0.0.18)298> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:34:16.709"
(h@16.0.0.18)299> 01:34:20.749 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:34:20.749" Took=28602 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_34_03_567}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:34:20.750 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",40,40},{"delta_send",40,41},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",84,0},{"sub_cancel",0,0}] 
01:34:21.797 [error] C1 propagation "2020-08-06T01:34:21.797" 
01:34:21.797 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:34:21.797 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,42}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:41 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_34_03_567}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)300> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_34_03_567}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)301> f(AwMapRes).
ok
(h@16.0.0.18)302> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:34:22.701"
(h@16.0.0.18)303> 01:34:26.527 [error] Sending find_sub batch [] 
01:34:26.527 [error] Sending find_sub_aq batch [] 
01:34:26.527 [error] batched message propagation "2020-08-06T01:34:26.527" 
01:34:27.758 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:34:27.758" Took=35982 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_01_34_09_587}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:34:27.758 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",41,41},{"delta_send",41,42},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",86,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_01_34_09_587}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)304> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_01_34_09_587}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)305> f(AwMapRes).
ok
(h@16.0.0.18)306> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:34:28.737"
(h@16.0.0.18)307> 01:34:28.798 [error] C1 propagation "2020-08-06T01:34:28.798"  
01:34:28.798 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:34:28.798 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,43}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:42 
01:34:34.748 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:34:34.748" Took=24188 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_34_15_608}],[],[],[],[],[]}}}}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
01:34:34.750 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",42,42},{"delta_send",42,43},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",88,0},{"sub_cancel",0,0}] 
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_34_15_608}],
             [],[],[],...}}}}]}
(h@16.0.0.18)308> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_34_15_608}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)309> f(AwMapRes).
ok
(h@16.0.0.18)310> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:34:34.892"
(h@16.0.0.18)311> 01:34:35.799 [error] C1 propagation "2020-08-06T01:34:35.799"  
01:34:35.814 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:34:35.814 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,44}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:43 
01:34:36.448 [error] C2 propagation "2020-08-06T01:34:36.448" 
01:34:36.574 [error] Sending find_sub batch [] 
01:34:36.574 [error] Sending find_sub_aq batch [] 
01:34:36.574 [error] batched message propagation "2020-08-06T01:34:36.574" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_34_15_608}],
             [],[],[],...}}}}]}
(h@16.0.0.18)312> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_34_15_608}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)313> f(AwMapRes).
ok
(h@16.0.0.18)314> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:34:40.813"
(h@16.0.0.18)315> 01:34:41.764 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:34:41.764" Took=40089 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_34_27_252}],[],[],[],[],[],[]}}}}] 
01:34:41.764 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",43,43},{"delta_send",43,44},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",90,0},{"sub_cancel",0,0}] 
01:34:42.800 [error] C1 propagation "2020-08-06T01:34:42.800" 
01:34:42.832 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:34:42.832 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,45}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:44 
01:34:46.576 [error] Sending find_sub batch [] 
01:34:46.576 [error] Sending find_sub_aq batch [] 
01:34:46.576 [error] batched message propagation "2020-08-06T01:34:46.576" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_34_27_252}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)316> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_34_27_252}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)317> f(AwMapRes).
ok
(h@16.0.0.18)318> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:34:46.848"
(h@16.0.0.18)319> 01:34:48.754 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:34:48.754" Took=28225 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_34_33_271}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:34:48.754 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",44,44},{"delta_send",44,45},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",92,0},{"sub_cancel",0,0}] 
01:34:49.801 [error] C1 propagation "2020-08-06T01:34:49.801" 
01:34:49.820 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:34:49.820 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,46}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:45 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_34_33_271}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)320> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_34_33_271}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)321> f(AwMapRes).
ok
(h@16.0.0.18)322> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:34:52.882"
(h@16.0.0.18)323> 01:34:55.771 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:34:55.771" Took=45786 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_34_39_292}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:34:55.771 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",45,45},{"delta_send",45,46},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",94,0},{"sub_cancel",0,0}] 
01:34:56.362 [error] C3 propagation "2020-08-06T01:34:56.362" 
01:34:56.577 [error] Sending find_sub batch [] 
01:34:56.577 [error] Sending find_sub_aq batch [] 
01:34:56.577 [error] batched message propagation "2020-08-06T01:34:56.577" 
01:34:56.802 [error] C1 propagation "2020-08-06T01:34:56.802" 
01:34:56.802 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:34:56.802 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,47}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:46 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_34_39_292}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)324> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_34_39_292}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)325> f(AwMapRes).
ok
(h@16.0.0.18)326> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:34:58.921"
(h@16.0.0.18)327> 01:35:02.756 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:35:02.756" Took=28256 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_34_45_316}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:35:02.757 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",46,46},{"delta_send",46,47},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",96,0},{"sub_cancel",0,0}] 
01:35:03.804 [error] C1 propagation "2020-08-06T01:35:03.804" 
01:35:03.804 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:35:03.804 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,48}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:47 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_34_45_316}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)328> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_34_45_316}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)329> f(AwMapRes).
ok
(h@16.0.0.18)330> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:35:04.956"
(h@16.0.0.18)331> 01:35:06.579 [error] Sending find_sub batch [] 
01:35:06.579 [error] Sending find_sub_aq batch [] 
01:35:06.579 [error] batched message propagation "2020-08-06T01:35:06.579" 
01:35:09.756 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:35:09.756" Took=28084 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_34_51_338}],[],[],[],[],[]}}}}] 
01:35:09.756 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",47,47},{"delta_send",47,48},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",98,0},{"sub_cancel",0,0}] 
01:35:10.805 [error] C1 propagation "2020-08-06T01:35:10.805" 
01:35:10.834 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:35:10.834 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,49}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:48 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_34_51_338}],
             [],[],[],...}}}}]}
(h@16.0.0.18)332> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_34_51_338}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)333> f(AwMapRes).
ok
(h@16.0.0.18)334> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:35:11.161"
(h@16.0.0.18)335> 01:35:16.449 [error] C2 propagation "2020-08-06T01:35:16.449"  
01:35:16.580 [error] Sending find_sub batch [] 
01:35:16.580 [error] Sending find_sub_aq batch [] 
01:35:16.580 [error] batched message propagation "2020-08-06T01:35:16.580" 
01:35:16.760 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:35:16.759" Took=27726 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_34_57_360}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:35:16.760 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",48,48},{"delta_send",48,49},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",100,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_34_57_360}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)336> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_34_57_360}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)337> f(AwMapRes).
ok
(h@16.0.0.18)338> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:35:17.366"
(h@16.0.0.18)339> 01:35:17.806 [error] C1 propagation "2020-08-06T01:35:17.806"  
01:35:17.806 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:35:17.806 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,50}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:49 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_34_57_360}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)340> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_34_57_360}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)341> f(AwMapRes).
ok
(h@16.0.0.18)342> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:35:23.684"
(h@16.0.0.18)343> 01:35:23.772 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:35:23.772" Took=38600 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_35_09_401}]}}}}] 
01:35:23.772 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",49,49},{"delta_send",49,50},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",102,0},{"sub_cancel",0,0}] 
01:35:24.808 [error] C1 propagation "2020-08-06T01:35:24.808" 
01:35:24.808 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:35:24.808 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,51}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:50 
01:35:26.582 [error] Sending find_sub batch [] 
01:35:26.582 [error] Sending find_sub_aq batch [] 
01:35:26.582 [error] batched message propagation "2020-08-06T01:35:26.582" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)344> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@16.0.0.18)345> f(AwMapRes).
ok
(h@16.0.0.18)346> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:35:29.105"
(h@16.0.0.18)347> 01:35:30.763 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:35:30.763" Took=31838 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_35_15_423}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:35:30.764 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",50,50},{"delta_send",50,51},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",104,0},{"sub_cancel",0,0}] 
01:35:31.809 [error] C1 propagation "2020-08-06T01:35:31.809" 
01:35:31.809 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:35:31.809 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,52}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:51 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_35_15_423}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)348> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_35_15_423}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)349> f(AwMapRes).
ok
(h@16.0.0.18)350> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:35:35.143"
(h@16.0.0.18)351> 01:35:36.584 [error] Sending find_sub batch [] 
01:35:36.584 [error] Sending find_sub_aq batch [] 
01:35:36.584 [error] batched message propagation "2020-08-06T01:35:36.584" 
01:35:37.766 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:35:37.765" Took=31661 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_35_21_443}],[],[],[],[],[]}}}}] 
01:35:37.766 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",51,51},{"delta_send",51,52},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",106,0},{"sub_cancel",0,0}] 
01:35:38.811 [error] C1 propagation "2020-08-06T01:35:38.811" 
01:35:38.811 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:35:38.811 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,53}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:52 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_35_21_443}],
             [],[],[],...}}}}]}
(h@16.0.0.18)352> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_35_21_443}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)353> f(AwMapRes).
ok
(h@16.0.0.18)354> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:35:41.177"
(h@16.0.0.18)355> 01:35:44.757 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:35:44.757" Took=25327 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_01_35_27_462}],[],[],[],[],[],[],[],[]}}}}] 
01:35:44.757 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",52,52},{"delta_send",52,53},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",108,0},{"sub_cancel",0,0}] 
01:35:45.812 [error] C1 propagation "2020-08-06T01:35:45.812" 
01:35:45.857 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:35:45.857 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,54}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:53 
01:35:46.586 [error] Sending find_sub batch [] 
01:35:46.586 [error] Sending find_sub_aq batch [] 
01:35:46.586 [error] batched message propagation "2020-08-06T01:35:46.586" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_01_35_27_462}],
             [],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)356> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_01_35_27_462}],
         [],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)357> f(AwMapRes).
ok
(h@16.0.0.18)358> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:35:47.212"
(h@16.0.0.18)359> 01:35:51.808 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:35:51.808" Took=25953 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_01_35_33_483}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:35:51.808 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",53,53},{"delta_send",53,54},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",110,0},{"sub_cancel",0,0}] 
01:35:52.813 [error] C1 propagation "2020-08-06T01:35:52.813" 
01:35:52.813 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:35:52.813 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,55}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:54 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_01_35_33_483}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)360> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_01_35_33_483}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)361> f(AwMapRes).
ok
(h@16.0.0.18)362> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:35:53.256"
(h@16.0.0.18)363> 01:35:56.451 [error] C2 propagation "2020-08-06T01:35:56.451"  
01:35:56.588 [error] Sending find_sub batch [] 
01:35:56.588 [error] Sending find_sub_aq batch [] 
01:35:56.588 [error] batched message propagation "2020-08-06T01:35:56.588" 
01:35:58.761 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:35:58.761" Took=24231 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_35_39_515}],[],[],[],[]}}}}] 
01:35:58.761 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",54,54},{"delta_send",54,55},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",112,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_35_39_515}],
             [],[],...}}}}]}
(h@16.0.0.18)364> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_35_39_515}],
         [],[],[],[]}}}}]
(h@16.0.0.18)365> f(AwMapRes).
ok
(h@16.0.0.18)366> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:35:59.292"
(h@16.0.0.18)367> 01:35:59.815 [error] C1 propagation "2020-08-06T01:35:59.815"  
01:35:59.829 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:35:59.830 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,56}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:55 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_35_39_515}],
             [],[],...}}}}]}
(h@16.0.0.18)368> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_35_39_515}],
         [],[],[],[]}}}}]
(h@16.0.0.18)369> f(AwMapRes).
ok
(h@16.0.0.18)370> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:36:05.327"
(h@16.0.0.18)371> 01:36:05.765 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:36:05.765" Took=27582 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_35_51_561}],[],[],[],[],[]}}}}] 
01:36:05.765 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",55,55},{"delta_send",55,56},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",114,0},{"sub_cancel",0,0}] 
01:36:06.364 [error] C3 propagation "2020-08-06T01:36:06.364" 
01:36:06.590 [error] Sending find_sub batch [] 
01:36:06.590 [error] Sending find_sub_aq batch [] 
01:36:06.590 [error] batched message propagation "2020-08-06T01:36:06.590" 
01:36:06.816 [error] C1 propagation "2020-08-06T01:36:06.816" 
01:36:06.817 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:36:06.817 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,57}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:56 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_35_51_561}],
             [],[],[],...}}}}]}
(h@16.0.0.18)372> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_35_51_561}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)373> f(AwMapRes).
ok
(h@16.0.0.18)374> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:36:11.363"
(h@16.0.0.18)375> 01:36:12.765 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:36:12.765" Took=25870 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_35_57_582}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:36:12.765 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",56,56},{"delta_send",56,57},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",116,0},{"sub_cancel",0,0}] 
01:36:13.818 [error] C1 propagation "2020-08-06T01:36:13.818" 
01:36:13.848 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:36:13.848 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,58}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:57 
01:36:16.592 [error] Sending find_sub batch [] 
01:36:16.592 [error] Sending find_sub_aq batch [] 
01:36:16.592 [error] batched message propagation "2020-08-06T01:36:16.592" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_35_57_582}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)376> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_35_57_582}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)377> f(AwMapRes).
ok
(h@16.0.0.18)378> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:36:17.393"
(h@16.0.0.18)379> 01:36:19.771 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:36:19.771" Took=27681 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_36_03_604}],[],[]}}}}] 
01:36:19.771 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",57,57},{"delta_send",57,58},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",118,0},{"sub_cancel",0,0}] 
01:36:20.820 [error] C1 propagation "2020-08-06T01:36:20.820" 
01:36:20.853 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:36:20.853 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,59}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:58 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)380> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_36_03_604}],
         [],[]}}}}]
(h@16.0.0.18)381> f(AwMapRes).
ok
(h@16.0.0.18)382> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:36:23.422"
(h@16.0.0.18)383> 01:36:26.594 [error] Sending find_sub batch [] 
01:36:26.594 [error] Sending find_sub_aq batch [] 
01:36:26.594 [error] batched message propagation "2020-08-06T01:36:26.594" 
01:36:26.801 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:36:26.800" Took=23092 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_36_09_627}],[],[],[],[]}}}}] 
01:36:26.801 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",58,58},{"delta_send",58,59},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",120,0},{"sub_cancel",0,0}] 
01:36:27.821 [error] C1 propagation "2020-08-06T01:36:27.821" 
01:36:27.880 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:36:27.880 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,60}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:59 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_36_09_627}],
             [],[],...}}}}]}
(h@16.0.0.18)384> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_36_09_627}],
         [],[],[],[]}}}}]
(h@16.0.0.18)385> f(AwMapRes).
ok
(h@16.0.0.18)386> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:36:29.461"
(h@16.0.0.18)387> 01:36:33.772 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:36:33.772" Took=25422 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_36_15_651}],[],[],[],[]}}}}] 
01:36:33.772 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",59,59},{"delta_send",59,60},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",122,0},{"sub_cancel",0,0}] 
01:36:34.822 [error] C1 propagation "2020-08-06T01:36:34.822" 
01:36:34.842 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:36:34.843 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,61}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:60 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_36_15_651}],
             [],[],...}}}}]}
(h@16.0.0.18)388> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_36_15_651}],
         [],[],[],[]}}}}]
(h@16.0.0.18)389> f(AwMapRes).
ok
(h@16.0.0.18)390> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:36:35.498"
(h@16.0.0.18)391> 01:36:36.452 [error] C2 propagation "2020-08-06T01:36:36.452"  
01:36:36.595 [error] Sending find_sub batch [] 
01:36:36.595 [error] Sending find_sub_aq batch [] 
01:36:36.595 [error] batched message propagation "2020-08-06T01:36:36.595" 
01:36:40.776 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:36:40.776" Took=29275 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_36_21_674}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:36:40.776 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",60,60},{"delta_send",60,61},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",124,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_36_21_674}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)392> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_36_21_674}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)393> f(AwMapRes).
ok
(h@16.0.0.18)394> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:36:41.536"
(h@16.0.0.18)395> 01:36:41.823 [error] C1 propagation "2020-08-06T01:36:41.823"  
01:36:41.841 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:36:41.841 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,62}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:61 
01:36:46.597 [error] Sending find_sub batch [] 
01:36:46.597 [error] Sending find_sub_aq batch [] 
01:36:46.597 [error] batched message propagation "2020-08-06T01:36:46.597" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_36_21_674}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)396> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_36_21_674}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)397> f(AwMapRes).
ok
(h@16.0.0.18)398> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:36:47.573"
(h@16.0.0.18)399> 01:36:47.781 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:36:47.781" Took=33809 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_36_33_718}],[],[],[],[],[],[],[],[],[]}}}}] 
01:36:47.781 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",61,61},{"delta_send",61,62},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",126,0},{"sub_cancel",0,0}] 
01:36:48.824 [error] C1 propagation "2020-08-06T01:36:48.824" 
01:36:48.824 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:36:48.824 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,63}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:62 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_36_33_718}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)400> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_36_33_718}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)401> f(AwMapRes).
ok
(h@16.0.0.18)402> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:36:53.608"
(h@16.0.0.18)403> 01:36:54.780 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:36:54.780" Took=29874 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_36_39_742}],[]}}}}] 
01:36:54.780 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",62,62},{"delta_send",62,63},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",128,0},{"sub_cancel",0,0}] 
01:36:55.826 [error] C1 propagation "2020-08-06T01:36:55.826" 
01:36:55.826 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:36:55.826 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,64}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:63 
01:36:56.599 [error] Sending find_sub batch [] 
01:36:56.599 [error] Sending find_sub_aq batch [] 
01:36:56.599 [error] batched message propagation "2020-08-06T01:36:56.599" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)404> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)405> f(AwMapRes).
ok
(h@16.0.0.18)406> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:36:59.646"
(h@16.0.0.18)407> 01:37:01.774 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:37:01.774" Took=23669 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_36_45_761}],[],[],[],[],[],[]}}}}] 
01:37:01.775 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",63,63},{"delta_send",63,64},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",130,0},{"sub_cancel",0,0}] 
01:37:02.827 [error] C1 propagation "2020-08-06T01:37:02.827" 
01:37:02.827 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:37:02.827 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,65}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:64 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_36_45_761}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)408> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_36_45_761}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)409> f(AwMapRes).
ok
(h@16.0.0.18)410> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:37:05.679"
(h@16.0.0.18)411> 01:37:06.601 [error] Sending find_sub batch [] 
01:37:06.601 [error] Sending find_sub_aq batch [] 
01:37:06.601 [error] batched message propagation "2020-08-06T01:37:06.601" 
01:37:08.775 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:37:08.775" Took=24210 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_36_51_788}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:37:08.776 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",64,64},{"delta_send",64,65},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",132,0},{"sub_cancel",0,0}] 
01:37:09.828 [error] C1 propagation "2020-08-06T01:37:09.828" 
01:37:09.875 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:37:09.875 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,66}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:65 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_36_51_788}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)412> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_36_51_788}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)413> f(AwMapRes).
ok
(h@16.0.0.18)414> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:37:11.713"
(h@16.0.0.18)415> 01:37:15.800 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:37:15.800" Took=45440 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_36_57_810}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:37:15.800 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",65,65},{"delta_send",65,66},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",134,0},{"sub_cancel",0,0}] 
01:37:16.365 [error] C3 propagation "2020-08-06T01:37:16.365" 
01:37:16.500 [error] C2 propagation "2020-08-06T01:37:16.500" 
01:37:16.602 [error] Sending find_sub batch [] 
01:37:16.602 [error] Sending find_sub_aq batch [] 
01:37:16.602 [error] batched message propagation "2020-08-06T01:37:16.602" 
01:37:16.829 [error] C1 propagation "2020-08-06T01:37:16.829" 
01:37:16.834 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:37:16.834 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,67}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:66 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_36_57_810}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)416> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_36_57_810}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)417> f(AwMapRes).
ok
(h@16.0.0.18)418> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:37:17.752"
(h@16.0.0.18)419> 01:37:22.779 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:37:22.779" Took=23287 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_37_03_830}],[]}}}}] 
01:37:22.779 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",66,66},{"delta_send",66,67},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",136,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)420> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)421> f(AwMapRes).
ok
(h@16.0.0.18)422> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:37:23.789"
(h@16.0.0.18)423> 01:37:23.830 [error] C1 propagation "2020-08-06T01:37:23.830"  
01:37:23.836 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:37:23.836 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,68}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:67 
01:37:26.604 [error] Sending find_sub batch [] 
01:37:26.604 [error] Sending find_sub_aq batch [] 
01:37:26.604 [error] batched message propagation "2020-08-06T01:37:26.604" 
01:37:29.797 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:37:29.797" Took=39598 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_37_15_870}]}}}}] 
01:37:29.798 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",67,67},{"delta_send",67,68},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",138,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)424> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@16.0.0.18)425> f(AwMapRes).
ok
(h@16.0.0.18)426> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:37:29.914"
(h@16.0.0.18)427> 01:37:30.831 [error] C1 propagation "2020-08-06T01:37:30.831"  
01:37:30.839 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:37:30.839 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,69}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:68 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)428> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@16.0.0.18)429> f(AwMapRes).
ok
(h@16.0.0.18)430> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:37:35.863"
(h@16.0.0.18)431> 01:37:36.606 [error] Sending find_sub batch [] 
01:37:36.606 [error] Sending find_sub_aq batch [] 
01:37:36.606 [error] batched message propagation "2020-08-06T01:37:36.606" 
01:37:36.823 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:37:36.823" Took=22516 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_37_21_892}],[],[]}}}}] 
01:37:36.901 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",68,68},{"delta_send",68,69},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",140,0},{"sub_cancel",0,0}] 
01:37:37.833 [error] C1 propagation "2020-08-06T01:37:37.833" 
01:37:37.855 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:37:37.855 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,70}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:69 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)432> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_37_21_892}],
         [],[]}}}}]
(h@16.0.0.18)433> f(AwMapRes).
ok
(h@16.0.0.18)434> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:37:41.898"
(h@16.0.0.18)435> 01:37:43.792 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:37:43.792" Took=30964 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_37_27_915}]}}}}] 
01:37:43.793 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",69,69},{"delta_send",69,70},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",142,0},{"sub_cancel",0,0}] 
01:37:44.835 [error] C1 propagation "2020-08-06T01:37:44.835" 
01:37:44.871 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:37:44.872 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,71}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:70 
01:37:46.608 [error] Sending find_sub batch [] 
01:37:46.608 [error] Sending find_sub_aq batch [] 
01:37:46.608 [error] batched message propagation "2020-08-06T01:37:46.608" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)436> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@16.0.0.18)437> f(AwMapRes).
ok
(h@16.0.0.18)438> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:37:47.934"
(h@16.0.0.18)439> 01:37:50.787 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:37:50.786" Took=27102 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_37_33_934}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:37:50.787 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",70,70},{"delta_send",70,71},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",144,0},{"sub_cancel",0,0}] 
01:37:51.836 [error] C1 propagation "2020-08-06T01:37:51.836" 
01:37:51.886 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:37:51.886 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,72}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:71 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_37_33_934}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)440> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_37_33_934}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)441> f(AwMapRes).
ok
(h@16.0.0.18)442> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:37:53.971"
(h@16.0.0.18)443> 01:37:56.501 [error] C2 propagation "2020-08-06T01:37:56.501"  
01:37:56.610 [error] Sending find_sub batch [] 
01:37:56.610 [error] Sending find_sub_aq batch [] 
01:37:56.610 [error] batched message propagation "2020-08-06T01:37:56.610" 
01:37:57.798 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:37:57.797" Took=33862 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_01_37_39_955}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:37:57.798 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",71,71},{"delta_send",71,72},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",146,0},{"sub_cancel",0,0}] 
01:37:58.837 [error] C1 propagation "2020-08-06T01:37:58.837" 
01:37:58.895 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:37:58.896 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,73}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:72 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_01_37_39_955}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)444> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_01_37_39_955}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)445> f(AwMapRes).
ok
(h@16.0.0.18)446> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:38:00.580"
(h@16.0.0.18)447> 01:38:04.820 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:38:04.819" Took=55626 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_37_45_979}],[],[],[]}}}}] 
01:38:04.820 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",72,72},{"delta_send",72,73},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",148,0},{"sub_cancel",0,0}] 
01:38:05.838 [error] C1 propagation "2020-08-06T01:38:05.838" 
01:38:05.841 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:38:05.841 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,74}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:73 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)448> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_37_45_979}],
         [],[],[]}}}}]
(h@16.0.0.18)449> f(AwMapRes).
ok
(h@16.0.0.18)450> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:38:06.451"
(h@16.0.0.18)451> 01:38:06.612 [error] Sending find_sub batch [] 
01:38:06.612 [error] Sending find_sub_aq batch [] 
01:38:06.612 [error] batched message propagation "2020-08-06T01:38:06.612" 
01:38:11.794 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:38:11.794" Took=29992 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_37_58_027}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:38:11.795 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",73,73},{"delta_send",73,74},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",150,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_37_58_027}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)452> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_37_58_027}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)453> f(AwMapRes).
ok
(h@16.0.0.18)454> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:38:12.772"
(h@16.0.0.18)455> 01:38:12.840 [error] C1 propagation "2020-08-06T01:38:12.840"  
01:38:12.840 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:38:12.840 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,75}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:74 
01:38:16.614 [error] Sending find_sub batch [] 
01:38:16.614 [error] Sending find_sub_aq batch [] 
01:38:16.614 [error] batched message propagation "2020-08-06T01:38:16.614" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_37_58_027}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)456> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_37_58_027}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)457> f(AwMapRes).
ok
(h@16.0.0.18)458> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:38:18.117"
(h@16.0.0.18)459> 01:38:18.800 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:38:18.800" Took=35172 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_38_04_051}],[],[],[],[],[]}}}}] 
01:38:18.801 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",74,74},{"delta_send",74,75},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",152,0},{"sub_cancel",0,0}] 
01:38:19.841 [error] C1 propagation "2020-08-06T01:38:19.841" 
01:38:19.880 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:38:19.880 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,76}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:75 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_38_04_051}],
             [],[],[],...}}}}]}
(h@16.0.0.18)460> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_38_04_051}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)461> f(AwMapRes).
ok
(h@16.0.0.18)462> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:38:24.154"
(h@16.0.0.18)463> 01:38:25.799 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:38:25.799" Took=34185 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_38_10_070}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:38:25.800 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",75,75},{"delta_send",75,76},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",154,0},{"sub_cancel",0,0}] 
01:38:26.366 [error] C3 propagation "2020-08-06T01:38:26.366" 
01:38:26.616 [error] Sending find_sub batch [] 
01:38:26.616 [error] Sending find_sub_aq batch [] 
01:38:26.616 [error] batched message propagation "2020-08-06T01:38:26.616" 
01:38:26.842 [error] C1 propagation "2020-08-06T01:38:26.842" 
01:38:26.855 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:38:26.856 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,77}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:76 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_38_10_070}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)464> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_38_10_070}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)465> f(AwMapRes).
ok
(h@16.0.0.18)466> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:38:30.188"
(h@16.0.0.18)467> 01:38:32.794 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:38:32.793" Took=23111 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_38_16_090}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:38:32.794 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",76,76},{"delta_send",76,77},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",156,0},{"sub_cancel",0,0}] 
01:38:33.843 [error] C1 propagation "2020-08-06T01:38:33.843" 
01:38:33.879 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:38:33.880 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,78}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:77 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_38_16_090}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)468> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_38_16_090}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)469> f(AwMapRes).
ok
(h@16.0.0.18)470> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:38:36.227"
(h@16.0.0.18)471> 01:38:36.502 [error] C2 propagation "2020-08-06T01:38:36.502"  
01:38:36.617 [error] Sending find_sub batch [] 
01:38:36.617 [error] Sending find_sub_aq batch [] 
01:38:36.617 [error] batched message propagation "2020-08-06T01:38:36.617" 
01:38:39.799 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:38:39.799" Took=29219 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_38_22_111}],[],[],[],[],[],[],[],[],[]}}}}] 
01:38:39.799 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",77,77},{"delta_send",77,78},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",158,0},{"sub_cancel",0,0}] 
01:38:40.845 [error] C1 propagation "2020-08-06T01:38:40.845" 
01:38:40.845 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:38:40.845 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,79}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:78 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_38_22_111}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)472> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_38_22_111}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)473> f(AwMapRes).
ok
(h@16.0.0.18)474> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:38:42.260"
(h@16.0.0.18)475> 01:38:46.619 [error] Sending find_sub batch [] 
01:38:46.619 [error] Sending find_sub_aq batch [] 
01:38:46.619 [error] batched message propagation "2020-08-06T01:38:46.619" 
01:38:46.834 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:38:46.833" Took=24863 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_38_28_131}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:38:46.909 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",78,78},{"delta_send",78,79},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",160,0},{"sub_cancel",0,0}] 
01:38:47.846 [error] C1 propagation "2020-08-06T01:38:47.846" 
01:38:47.863 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:38:47.863 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,80}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:79 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_38_28_131}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)476> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_38_28_131}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)477> f(AwMapRes).
ok
(h@16.0.0.18)478> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:38:48.295"
(h@16.0.0.18)479> 01:38:53.808 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:38:53.808" Took=33914 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_38_40_172}],[],[]}}}}] 
01:38:53.808 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",79,79},{"delta_send",79,80},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",162,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)480> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_38_40_172}],
         [],[]}}}}]
(h@16.0.0.18)481> f(AwMapRes).
ok
(h@16.0.0.18)482> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:38:54.331"
(h@16.0.0.18)483> 01:38:54.848 [error] C1 propagation "2020-08-06T01:38:54.848"  
01:38:54.851 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:38:54.851 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,81}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:80 
01:38:56.621 [error] Sending find_sub batch [] 
01:38:56.621 [error] Sending find_sub_aq batch [] 
01:38:56.621 [error] batched message propagation "2020-08-06T01:38:56.621" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)484> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_38_40_172}],
         [],[]}}}}]
(h@16.0.0.18)485> f(AwMapRes).
ok
(h@16.0.0.18)486> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:39:00.366"
(h@16.0.0.18)487> 01:39:00.804 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:39:00.804" Took=29050 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_38_46_191}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:39:00.805 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",80,80},{"delta_send",80,81},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",164,0},{"sub_cancel",0,0}] 
01:39:01.849 [error] C1 propagation "2020-08-06T01:39:01.849" 
01:39:01.953 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:39:01.953 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,82}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:81 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_38_46_191}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)488> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_38_46_191}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)489> f(AwMapRes).
ok
(h@16.0.0.18)490> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:39:06.407"
(h@16.0.0.18)491> 01:39:06.623 [error] Sending find_sub batch [] 
01:39:06.623 [error] Sending find_sub_aq batch [] 
01:39:06.623 [error] batched message propagation "2020-08-06T01:39:06.623" 
01:39:07.813 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:39:07.813" Took=34568 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_38_52_210}],[]}}}}] 
01:39:07.813 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",81,81},{"delta_send",81,82},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",166,0},{"sub_cancel",0,0}] 
01:39:08.850 [error] C1 propagation "2020-08-06T01:39:08.850" 
01:39:08.850 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:39:08.850 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,83}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:82 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)492> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)493> f(AwMapRes).
ok
(h@16.0.0.18)494> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:39:12.444"
(h@16.0.0.18)495> 01:39:14.807 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:39:14.807" Took=28986 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_38_58_231}],[],[],[],[],[]}}}}] 
01:39:14.808 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",82,82},{"delta_send",82,83},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",168,0},{"sub_cancel",0,0}] 
01:39:15.851 [error] C1 propagation "2020-08-06T01:39:15.851" 
01:39:15.851 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:39:15.851 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,84}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:83 
01:39:16.503 [error] C2 propagation "2020-08-06T01:39:16.503" 
01:39:16.625 [error] Sending find_sub batch [] 
01:39:16.625 [error] Sending find_sub_aq batch [] 
01:39:16.625 [error] batched message propagation "2020-08-06T01:39:16.625" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_38_58_231}],
             [],[],[],...}}}}]}
(h@16.0.0.18)496> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_38_58_231}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)497> f(AwMapRes).
ok
(h@16.0.0.18)498> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:39:18.479"
(h@16.0.0.18)499> 01:39:21.812 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:39:21.812" Took=33409 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_39_04_252}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:39:21.813 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",83,83},{"delta_send",83,84},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",170,0},{"sub_cancel",0,0}] 
01:39:22.852 [error] C1 propagation "2020-08-06T01:39:22.852" 
01:39:22.855 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:39:22.855 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,85}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:84 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_39_04_252}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)500> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_39_04_252}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)501> f(AwMapRes).
ok
(h@16.0.0.18)502> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:39:24.513"
(h@16.0.0.18)503> 01:39:26.627 [error] Sending find_sub batch [] 
01:39:26.627 [error] Sending find_sub_aq batch [] 
01:39:26.627 [error] batched message propagation "2020-08-06T01:39:26.627" 
01:39:28.820 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:39:28.820" Took=40991 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_39_10_271}],[]}}}}] 
01:39:28.821 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",84,84},{"delta_send",84,85},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",172,0},{"sub_cancel",0,0}] 
01:39:29.854 [error] C1 propagation "2020-08-06T01:39:29.854" 
01:39:29.880 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:39:29.881 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,86}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:85 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)504> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)505> f(AwMapRes).
ok
(h@16.0.0.18)506> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:39:30.547"
(h@16.0.0.18)507> 01:39:35.807 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:39:35.807" Took=22936 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_39_22_315}],[],[],[],[],[],[]}}}}] 
01:39:35.808 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",85,85},{"delta_send",85,86},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",174,0},{"sub_cancel",0,0}] 
01:39:36.367 [error] C3 propagation "2020-08-06T01:39:36.367" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_39_22_315}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)508> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_39_22_315}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)509> f(AwMapRes).
ok
(h@16.0.0.18)510> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:39:36.575"
(h@16.0.0.18)511> 01:39:36.629 [error] Sending find_sub batch [] 
01:39:36.629 [error] Sending find_sub_aq batch [] 
01:39:36.629 [error] batched message propagation "2020-08-06T01:39:36.629" 
01:39:36.856 [error] C1 propagation "2020-08-06T01:39:36.856" 
01:39:36.856 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:39:36.856 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,87}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:86 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_39_22_315}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)512> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_39_22_315}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)513> f(AwMapRes).
ok
(h@16.0.0.18)514> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:39:42.609"
(h@16.0.0.18)515> 01:39:43.857 [error] C1 propagation "2020-08-06T01:39:43.857"  
01:39:46.630 [error] Sending find_sub batch [] 
01:39:46.630 [error] Sending find_sub_aq batch [] 
01:39:46.630 [error] batched message propagation "2020-08-06T01:39:46.630" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_39_22_315}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)516> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_39_22_315}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)517> f(AwMapRes).
ok
(h@16.0.0.18)518> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:39:48.642"
(h@16.0.0.18)519> 01:39:49.809 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:39:49.809" Took=23538 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_39_33_901}],[],[],[],[],[],[],[],[],[]}}}}] 
01:39:49.810 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",86,86},{"delta_send",86,87},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",176,0},{"sub_cancel",0,0}] 
01:39:50.858 [error] C1 propagation "2020-08-06T01:39:50.858" 
01:39:50.858 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:39:50.858 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,88}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:87 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_39_33_901}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)520> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_39_33_901}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)521> f(AwMapRes).
ok
(h@16.0.0.18)522> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:39:54.677"
(h@16.0.0.18)523> 01:39:56.504 [error] C2 propagation "2020-08-06T01:39:56.504"  
01:39:56.632 [error] Sending find_sub batch [] 
01:39:56.632 [error] Sending find_sub_aq batch [] 
01:39:56.632 [error] batched message propagation "2020-08-06T01:39:56.632" 
01:39:56.813 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:39:56.813" Took=27538 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_39_39_923}],[],[],[],[],[],[]}}}}] 
01:39:56.813 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",87,87},{"delta_send",87,88},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",178,0},{"sub_cancel",0,0}] 
01:39:57.860 [error] C1 propagation "2020-08-06T01:39:57.860" 
01:39:57.860 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:39:57.860 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,89}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:88 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_39_39_923}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)524> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_39_39_923}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)525> f(AwMapRes).
ok
(h@16.0.0.18)526> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:40:00.718"
(h@16.0.0.18)527> 01:40:03.817 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:40:03.817" Took=28416 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_39_45_947}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:40:03.818 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",88,88},{"delta_send",88,89},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",180,0},{"sub_cancel",0,0}] 
01:40:04.861 [error] C1 propagation "2020-08-06T01:40:04.861" 
01:40:04.861 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:40:04.861 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,90}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:89 
01:40:06.634 [error] Sending find_sub batch [] 
01:40:06.634 [error] Sending find_sub_aq batch [] 
01:40:06.634 [error] batched message propagation "2020-08-06T01:40:06.634" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_39_45_947}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)528> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_39_45_947}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)529> f(AwMapRes).
ok
(h@16.0.0.18)530> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:40:06.786"
(h@16.0.0.18)531> 01:40:10.814 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:40:10.813" Took=23834 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_39_51_967}],[],[],[],[]}}}}] 
01:40:10.814 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",89,89},{"delta_send",89,90},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",182,0},{"sub_cancel",0,0}] 
01:40:11.862 [error] C1 propagation "2020-08-06T01:40:11.862" 
01:40:11.877 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:40:11.877 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,91}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:90 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_39_51_967}],
             [],[],...}}}}]}
(h@16.0.0.18)532> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_39_51_967}],
         [],[],[],[]}}}}]
(h@16.0.0.18)533> f(AwMapRes).
ok
(h@16.0.0.18)534> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:40:12.789"
(h@16.0.0.18)535> 01:40:16.636 [error] Sending find_sub batch [] 
01:40:16.636 [error] Sending find_sub_aq batch [] 
01:40:16.636 [error] batched message propagation "2020-08-06T01:40:16.636" 
01:40:17.841 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:40:17.841" Took=49202 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_40_04_007}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:40:17.841 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",90,90},{"delta_send",90,91},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",184,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_40_04_007}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)536> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_40_04_007}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)537> f(AwMapRes).
ok
(h@16.0.0.18)538> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:40:18.826"
(h@16.0.0.18)539> 01:40:18.863 [error] C1 propagation "2020-08-06T01:40:18.863"  
01:40:18.910 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:40:18.910 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,92}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:91 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
01:40:24.827 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:40:24.826" Took=32490 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_40_10_027}],[],[],[],[],[],[],[]}}}}] 
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_40_10_027}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)540> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_40_10_027}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)541> f(AwMapRes).
ok
(h@16.0.0.18)542> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:40:24.937"
(h@16.0.0.18)543> 01:40:24.827 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",91,91},{"delta_send",91,92},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",186,0},{"sub_cancel",0,0}] 
01:40:25.864 [error] C1 propagation "2020-08-06T01:40:25.864" 
01:40:25.864 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:40:25.865 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,93}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:92 
01:40:26.638 [error] Sending find_sub batch [] 
01:40:26.638 [error] Sending find_sub_aq batch [] 
01:40:26.638 [error] batched message propagation "2020-08-06T01:40:26.638" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_40_10_027}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)544> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_40_10_027}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)545> f(AwMapRes).
ok
(h@16.0.0.18)546> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:40:30.898"
(h@16.0.0.18)547> 01:40:31.825 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:40:31.825" Took=29294 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_40_16_047}],[],[],[],[],[],[],[]}}}}] 
01:40:31.826 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",92,92},{"delta_send",92,93},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",188,0},{"sub_cancel",0,0}] 
01:40:32.866 [error] C1 propagation "2020-08-06T01:40:32.866" 
01:40:32.866 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:40:32.866 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,94}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:93 
01:40:36.505 [error] C2 propagation "2020-08-06T01:40:36.505" 
01:40:36.640 [error] Sending find_sub batch [] 
01:40:36.640 [error] Sending find_sub_aq batch [] 
01:40:36.640 [error] batched message propagation "2020-08-06T01:40:36.640" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_40_16_047}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)548> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_40_16_047}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)549> f(AwMapRes).
ok
(h@16.0.0.18)550> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:40:36.933"
(h@16.0.0.18)551> 01:40:38.825 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:40:38.825" Took=25901 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_40_22_070}],[],[],[],[]}}}}] 
01:40:38.827 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",93,93},{"delta_send",93,94},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",190,0},{"sub_cancel",0,0}] 
01:40:39.867 [error] C1 propagation "2020-08-06T01:40:39.867" 
01:40:39.867 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:40:39.867 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,95}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:94 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_40_22_070}],
             [],[],...}}}}]}
(h@16.0.0.18)552> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_40_22_070}],
         [],[],[],[]}}}}]
(h@16.0.0.18)553> f(AwMapRes).
ok
(h@16.0.0.18)554> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:40:42.973"
(h@16.0.0.18)555> 01:40:45.826 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:40:45.826" Took=24950 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_40_28_090}],[],[],[],[],[]}}}}] 
01:40:45.827 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",94,94},{"delta_send",94,95},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",192,0},{"sub_cancel",0,0}] 
01:40:46.368 [error] C3 propagation "2020-08-06T01:40:46.368" 
01:40:46.642 [error] Sending find_sub batch [] 
01:40:46.642 [error] Sending find_sub_aq batch [] 
01:40:46.642 [error] batched message propagation "2020-08-06T01:40:46.642" 
01:40:46.897 [error] C1 propagation "2020-08-06T01:40:46.897" 
01:40:46.898 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:40:46.899 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,96}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:95 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_40_28_090}],
             [],[],[],...}}}}]}
(h@16.0.0.18)556> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_40_28_090}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)557> f(AwMapRes).
ok
(h@16.0.0.18)558> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:40:49.629"
(h@16.0.0.18)559> 01:40:52.855 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:40:52.855" Took=43266 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_40_34_111}],[],[],[],[]}}}}] 
01:40:52.855 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",95,95},{"delta_send",95,96},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",194,0},{"sub_cancel",0,0}] 
01:40:53.898 [error] C1 propagation "2020-08-06T01:40:53.898" 
01:40:53.898 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:40:53.898 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,97}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:96 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_40_34_111}],
             [],[],...}}}}]}
(h@16.0.0.18)560> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_40_34_111}],
         [],[],[],[]}}}}]
(h@16.0.0.18)561> f(AwMapRes).
ok
(h@16.0.0.18)562> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:40:55.422"
(h@16.0.0.18)563> 01:40:56.644 [error] Sending find_sub batch [] 
01:40:56.644 [error] Sending find_sub_aq batch [] 
01:40:56.644 [error] batched message propagation "2020-08-06T01:40:56.644" 
01:40:59.833 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:40:59.833" Took=29969 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_40_46_154}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:40:59.834 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",96,96},{"delta_send",96,97},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",196,0},{"sub_cancel",0,0}] 
01:41:00.899 [error] C1 propagation "2020-08-06T01:41:00.899" 
01:41:00.899 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:41:00.899 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,98}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:97 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_40_46_154}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)564> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_40_46_154}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)565> f(AwMapRes).
ok
(h@16.0.0.18)566> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:41:01.832"
(h@16.0.0.18)567> 01:41:06.646 [error] Sending find_sub batch [] 
01:41:06.646 [error] Sending find_sub_aq batch [] 
01:41:06.646 [error] batched message propagation "2020-08-06T01:41:06.646" 
01:41:06.826 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:41:06.825" Took=23641 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_40_52_174}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:41:06.826 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",97,97},{"delta_send",97,98},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",198,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_40_52_174}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)568> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_40_52_174}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)569> f(AwMapRes).
ok
(h@16.0.0.18)570> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:41:07.119"
(h@16.0.0.18)571> 01:41:07.900 [error] C1 propagation "2020-08-06T01:41:07.900"  
01:41:07.901 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:41:07.901 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,99}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:98 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_40_52_174}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)572> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_40_52_174}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)573> f(AwMapRes).
ok
(h@16.0.0.18)574> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:41:13.151"
(h@16.0.0.18)575> 01:41:13.857 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:41:13.857" Took=50894 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_40_58_199}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:41:13.858 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",98,98},{"delta_send",98,99},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",200,0},{"sub_cancel",0,0}] 
01:41:14.901 [error] C1 propagation "2020-08-06T01:41:14.901" 
01:41:14.901 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:41:14.901 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,100}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:99 
01:41:16.506 [error] C2 propagation "2020-08-06T01:41:16.506" 
01:41:16.648 [error] Sending find_sub batch [] 
01:41:16.648 [error] Sending find_sub_aq batch [] 
01:41:16.648 [error] batched message propagation "2020-08-06T01:41:16.648" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_40_58_199}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)576> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_40_58_199}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)577> f(AwMapRes).
ok
(h@16.0.0.18)578> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:41:19.189"
(h@16.0.0.18)579> 01:41:20.833 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:41:20.832" Took=24534 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_01_41_04_219}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:41:20.833 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",99,99},{"delta_send",99,100},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",202,0},{"sub_cancel",0,0}] 
01:41:21.903 [error] C1 propagation "2020-08-06T01:41:21.903" 
01:41:21.942 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:41:21.943 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,101}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:100 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_01_41_04_219}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)580> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_01_41_04_219}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)581> f(AwMapRes).
ok
(h@16.0.0.18)582> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:41:25.219"
(h@16.0.0.18)583> 01:41:26.650 [error] Sending find_sub batch [] 
01:41:26.650 [error] Sending find_sub_aq batch [] 
01:41:26.650 [error] batched message propagation "2020-08-06T01:41:26.650" 
01:41:27.831 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:41:27.831" Took=25213 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_41_10_239}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:41:27.832 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",100,100},{"delta_send",100,101},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",204,0},{"sub_cancel",0,0}] 
01:41:28.904 [error] C1 propagation "2020-08-06T01:41:28.904" 
01:41:28.958 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:41:28.958 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,102}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:101 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_41_10_239}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)584> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_41_10_239}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)585> f(AwMapRes).
ok
(h@16.0.0.18)586> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:41:31.251"
(h@16.0.0.18)587> 01:41:34.843 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:41:34.842" Took=29782 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_41_16_255}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:41:34.843 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",101,101},{"delta_send",101,102},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",206,0},{"sub_cancel",0,0}] 
01:41:35.905 [error] C1 propagation "2020-08-06T01:41:35.905" 
01:41:35.935 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:41:35.936 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,103}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:102 
01:41:36.652 [error] Sending find_sub batch [] 
01:41:36.652 [error] Sending find_sub_aq batch [] 
01:41:36.652 [error] batched message propagation "2020-08-06T01:41:36.652" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_41_16_255}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)588> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_41_16_255}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)589> f(AwMapRes).
ok
(h@16.0.0.18)590> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:41:37.284"
(h@16.0.0.18)591> 01:41:41.851 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:41:41.851" Took=37113 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_41_28_298}],[],[],[],[],[]}}}}] 
01:41:41.852 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",102,102},{"delta_send",102,103},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",208,0},{"sub_cancel",0,0}] 
01:41:42.906 [error] C1 propagation "2020-08-06T01:41:42.906" 
01:41:42.935 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:41:42.935 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,104}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:103 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_41_28_298}],
             [],[],[],...}}}}]}
(h@16.0.0.18)592> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_41_28_298}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)593> f(AwMapRes).
ok
(h@16.0.0.18)594> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:41:43.320"
(h@16.0.0.18)595> 01:41:46.654 [error] Sending find_sub batch [] 
01:41:46.654 [error] Sending find_sub_aq batch [] 
01:41:46.654 [error] batched message propagation "2020-08-06T01:41:46.654" 
01:41:48.844 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:41:48.844" Took=24170 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_41_34_324}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:41:48.846 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",103,103},{"delta_send",103,104},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",210,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_41_34_324}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)596> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_41_34_324}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)597> f(AwMapRes).
ok
(h@16.0.0.18)598> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:41:49.372"
(h@16.0.0.18)599> 01:41:49.907 [error] C1 propagation "2020-08-06T01:41:49.907"  
01:41:49.907 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:41:49.907 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,105}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:104 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_41_34_324}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)600> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_41_34_324}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)601> f(AwMapRes).
ok
(h@16.0.0.18)602> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:41:55.408"
(h@16.0.0.18)603> 01:41:55.850 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:41:55.850" Took=35431 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_01_41_40_347}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:41:55.850 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",104,104},{"delta_send",104,105},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",212,0},{"sub_cancel",0,0}] 
01:41:56.369 [error] C3 propagation "2020-08-06T01:41:56.369" 
01:41:56.508 [error] C2 propagation "2020-08-06T01:41:56.508" 
01:41:56.656 [error] Sending find_sub batch [] 
01:41:56.656 [error] Sending find_sub_aq batch [] 
01:41:56.656 [error] batched message propagation "2020-08-06T01:41:56.656" 
01:41:56.908 [error] C1 propagation "2020-08-06T01:41:56.908" 
01:41:56.908 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:41:56.908 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,106}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:105 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_01_41_40_347}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)604> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_01_41_40_347}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)605> f(AwMapRes).
ok
(h@16.0.0.18)606> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:42:01.446"
(h@16.0.0.18)607> 01:42:02.849 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:42:02.849" Took=32396 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_41_46_371}],[],[],[]}}}}] 
01:42:02.849 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",105,105},{"delta_send",105,106},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",214,0},{"sub_cancel",0,0}] 
01:42:03.910 [error] C1 propagation "2020-08-06T01:42:03.910" 
01:42:03.910 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:42:03.910 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,107}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:106 
01:42:06.657 [error] Sending find_sub batch [] 
01:42:06.657 [error] Sending find_sub_aq batch [] 
01:42:06.657 [error] batched message propagation "2020-08-06T01:42:06.657" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)608> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_41_46_371}],
         [],[],[]}}}}]
(h@16.0.0.18)609> f(AwMapRes).
ok
(h@16.0.0.18)610> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:42:07.483"
(h@16.0.0.18)611> 01:42:09.859 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:42:09.859" Took=41613 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_41_52_391}],[],[],[],[],[],[]}}}}] 
01:42:09.859 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",106,106},{"delta_send",106,107},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",216,0},{"sub_cancel",0,0}] 
01:42:10.911 [error] C1 propagation "2020-08-06T01:42:10.911" 
01:42:10.911 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:42:10.911 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,108}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:107 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_41_52_391}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)612> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_41_52_391}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)613> f(AwMapRes).
ok
(h@16.0.0.18)614> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:42:13.514"
(h@16.0.0.18)615> 01:42:16.659 [error] Sending find_sub batch [] 
01:42:16.659 [error] Sending find_sub_aq batch [] 
01:42:16.659 [error] batched message propagation "2020-08-06T01:42:16.659" 
01:42:16.842 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:42:16.842" Took=21106 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_41_58_414}],[],[],[],[]}}}}] 
01:42:16.843 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",107,107},{"delta_send",107,108},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",218,0},{"sub_cancel",0,0}] 
01:42:17.912 [error] C1 propagation "2020-08-06T01:42:17.912" 
01:42:17.912 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:42:17.912 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,109}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:108 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_41_58_414}],
             [],[],...}}}}]}
(h@16.0.0.18)616> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_41_58_414}],
         [],[],[],[]}}}}]
(h@16.0.0.18)617> f(AwMapRes).
ok
(h@16.0.0.18)618> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:42:19.547"
(h@16.0.0.18)619> 01:42:23.850 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:42:23.850" Took=30970 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_42_04_435}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:42:23.852 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",108,108},{"delta_send",108,109},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",220,0},{"sub_cancel",0,0}] 
01:42:24.913 [error] C1 propagation "2020-08-06T01:42:24.913" 
01:42:24.964 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:42:24.964 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,110}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:109 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_42_04_435}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)620> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_42_04_435}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)621> f(AwMapRes).
ok
(h@16.0.0.18)622> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:42:25.583"
(h@16.0.0.18)623> 01:42:26.661 [error] Sending find_sub batch [] 
01:42:26.661 [error] Sending find_sub_aq batch [] 
01:42:26.661 [error] batched message propagation "2020-08-06T01:42:26.661" 
01:42:30.858 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:42:30.858" Took=26472 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_01_42_16_482}],[],[],[],[],[],[],[],[]}}}}] 
01:42:30.858 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",109,109},{"delta_send",109,110},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",222,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_01_42_16_482}],
             [],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)624> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_01_42_16_482}],
         [],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)625> f(AwMapRes).
ok
(h@16.0.0.18)626> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:42:31.622"
(h@16.0.0.18)627> 01:42:31.914 [error] C1 propagation "2020-08-06T01:42:31.914"  
01:42:31.965 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:42:31.965 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,111}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:110 
01:42:36.509 [error] C2 propagation "2020-08-06T01:42:36.509" 
01:42:36.663 [error] Sending find_sub batch [] 
01:42:36.663 [error] Sending find_sub_aq batch [] 
01:42:36.663 [error] batched message propagation "2020-08-06T01:42:36.663" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_01_42_16_482}],
             [],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)628> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_01_42_16_482}],
         [],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)629> f(AwMapRes).
ok
(h@16.0.0.18)630> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:42:37.656"
(h@16.0.0.18)631> 01:42:37.847 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:42:37.847" Took=24942 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_01_42_22_503}],[],[],[],[],[],[],[],[]}}}}] 
01:42:37.848 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",110,110},{"delta_send",110,111},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",224,0},{"sub_cancel",0,0}] 
01:42:38.915 [error] C1 propagation "2020-08-06T01:42:38.915" 
01:42:38.961 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:42:38.962 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,112}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:111 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_01_42_22_503}],
             [],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)632> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_01_42_22_503}],
         [],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)633> f(AwMapRes).
ok
(h@16.0.0.18)634> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:42:43.699"
(h@16.0.0.18)635> 01:42:44.857 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:42:44.857" Took=33713 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_01_42_28_524}],[],[],[],[],[],[],[],[]}}}}] 
01:42:44.857 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",111,111},{"delta_send",111,112},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",226,0},{"sub_cancel",0,0}] 
01:42:45.917 [error] C1 propagation "2020-08-06T01:42:45.917" 
01:42:45.948 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:42:45.948 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,113}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:112 
01:42:46.664 [error] Sending find_sub batch [] 
01:42:46.664 [error] Sending find_sub_aq batch [] 
01:42:46.664 [error] batched message propagation "2020-08-06T01:42:46.664" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_01_42_28_524}],
             [],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)636> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_01_42_28_524}],
         [],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)637> f(AwMapRes).
ok
(h@16.0.0.18)638> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:42:49.734"
(h@16.0.0.18)639> 01:42:51.855 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:42:51.854" Took=27960 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_42_34_551}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:42:51.855 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",112,112},{"delta_send",112,113},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",228,0},{"sub_cancel",0,0}] 
01:42:52.919 [error] C1 propagation "2020-08-06T01:42:52.919" 
01:42:52.992 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:42:52.993 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,114}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:113 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_42_34_551}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)640> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_42_34_551}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)641> f(AwMapRes).
ok
(h@16.0.0.18)642> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:42:55.768"
(h@16.0.0.18)643> 01:42:56.666 [error] Sending find_sub batch [] 
01:42:56.666 [error] Sending find_sub_aq batch [] 
01:42:56.666 [error] batched message propagation "2020-08-06T01:42:56.666" 
01:42:58.852 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:42:58.851" Took=22389 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_42_40_573}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:42:58.852 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",113,113},{"delta_send",113,114},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",230,0},{"sub_cancel",0,0}] 
01:42:59.921 [error] C1 propagation "2020-08-06T01:42:59.921" 
01:42:59.921 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:42:59.921 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,115}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:114 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_42_40_573}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)644> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_42_40_573}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)645> f(AwMapRes).
ok
(h@16.0.0.18)646> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:43:01.798"
(h@16.0.0.18)647> 01:43:05.864 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:43:05.864" Took=32753 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_42_46_591}],[],[]}}}}] 
01:43:05.865 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",114,114},{"delta_send",114,115},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",232,0},{"sub_cancel",0,0}] 
01:43:06.371 [error] C3 propagation "2020-08-06T01:43:06.371" 
01:43:06.667 [error] Sending find_sub batch [] 
01:43:06.667 [error] Sending find_sub_aq batch [] 
01:43:06.667 [error] batched message propagation "2020-08-06T01:43:06.667" 
01:43:06.922 [error] C1 propagation "2020-08-06T01:43:06.922" 
01:43:06.922 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:43:06.922 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,116}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:115 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)648> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_42_46_591}],
         [],[]}}}}]
(h@16.0.0.18)649> f(AwMapRes).
ok
(h@16.0.0.18)650> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:43:07.834"
(h@16.0.0.18)651> 01:43:12.870 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:43:12.870" Took=36410 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_42_58_638}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:43:12.870 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",115,115},{"delta_send",115,116},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",234,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_42_58_638}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)652> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_42_58_638}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)653> f(AwMapRes).
ok
(h@16.0.0.18)654> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:43:13.872"
(h@16.0.0.18)655> 01:43:13.923 [error] C1 propagation "2020-08-06T01:43:13.923"  
01:43:13.923 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:43:13.923 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,117}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:116 
01:43:16.511 [error] C2 propagation "2020-08-06T01:43:16.511" 
01:43:16.669 [error] Sending find_sub batch [] 
01:43:16.669 [error] Sending find_sub_aq batch [] 
01:43:16.669 [error] batched message propagation "2020-08-06T01:43:16.669" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_43_04_660}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)656> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_43_04_660}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)657> f(AwMapRes).
ok
(h@16.0.0.18)658> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:43:19.906"
(h@16.0.0.18)659> 01:43:19.873 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:43:19.873" Took=38097 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_43_04_660}],[],[],[],[],[],[]}}}}] 
01:43:19.873 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",116,116},{"delta_send",116,117},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",236,0},{"sub_cancel",0,0}] 
01:43:20.924 [error] C1 propagation "2020-08-06T01:43:20.924" 
01:43:20.924 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:43:20.924 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,118}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:117 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_43_04_660}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)660> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_43_04_660}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)661> f(AwMapRes).
ok
(h@16.0.0.18)662> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:43:25.954"
(h@16.0.0.18)663> 01:43:26.671 [error] Sending find_sub batch [] 
01:43:26.671 [error] Sending find_sub_aq batch [] 
01:43:26.671 [error] batched message propagation "2020-08-06T01:43:26.671" 
01:43:26.865 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:43:26.865" Took=30360 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_43_10_683}],[]}}}}] 
01:43:26.865 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",117,117},{"delta_send",117,118},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",238,0},{"sub_cancel",0,0}] 
01:43:27.925 [error] C1 propagation "2020-08-06T01:43:27.925" 
01:43:27.925 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:43:27.925 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,119}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:118 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)664> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)665> f(AwMapRes).
ok
(h@16.0.0.18)666> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:43:31.986"
(h@16.0.0.18)667> 01:43:33.875 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:43:33.875" Took=37039 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_43_16_703}],[],[],[],[],[],[]}}}}] 
01:43:33.876 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",118,118},{"delta_send",118,119},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",240,0},{"sub_cancel",0,0}] 
01:43:34.927 [error] C1 propagation "2020-08-06T01:43:34.927" 
01:43:34.927 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:43:34.927 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,120}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:119 
01:43:36.673 [error] Sending find_sub batch [] 
01:43:36.673 [error] Sending find_sub_aq batch [] 
01:43:36.673 [error] batched message propagation "2020-08-06T01:43:36.673" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_43_16_703}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)668> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_43_16_703}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)669> f(AwMapRes).
ok
(h@16.0.0.18)670> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:43:38.200"
(h@16.0.0.18)671> 01:43:40.873 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:43:40.873" Took=36491 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_43_22_727}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:43:40.873 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",119,119},{"delta_send",119,120},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",242,0},{"sub_cancel",0,0}] 
01:43:41.928 [error] C1 propagation "2020-08-06T01:43:41.928" 
01:43:41.928 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:43:41.928 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,121}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:120 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_43_22_727}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)672> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_43_22_727}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)673> f(AwMapRes).
ok
(h@16.0.0.18)674> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:43:44.576"
(h@16.0.0.18)675> 01:43:46.675 [error] Sending find_sub batch [] 
01:43:46.675 [error] Sending find_sub_aq batch [] 
01:43:46.675 [error] batched message propagation "2020-08-06T01:43:46.675" 
01:43:47.863 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:43:47.863" Took=23431 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_43_28_751}],[],[],[],[],[],[],[]}}}}] 
01:43:47.864 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",120,120},{"delta_send",120,121},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",244,0},{"sub_cancel",0,0}] 
01:43:48.930 [error] C1 propagation "2020-08-06T01:43:48.930" 
01:43:48.930 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:43:48.930 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,122}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:121 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_43_28_751}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)676> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_43_28_751}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)677> f(AwMapRes).
ok
(h@16.0.0.18)678> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:43:50.918"
(h@16.0.0.18)679> 01:43:54.862 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:43:54.862" Took=23096 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_43_40_791}],[],[]}}}}] 
01:43:54.865 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",121,121},{"delta_send",121,122},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",246,0},{"sub_cancel",0,0}] 
01:43:55.931 [error] C1 propagation "2020-08-06T01:43:55.931" 
01:43:55.931 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:43:55.931 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,123}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:122 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)680> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_43_40_791}],
         [],[]}}}}]
(h@16.0.0.18)681> f(AwMapRes).
ok
(h@16.0.0.18)682> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:43:56.125"
(h@16.0.0.18)683> 01:43:56.512 [error] C2 propagation "2020-08-06T01:43:56.512"  
01:43:56.677 [error] Sending find_sub batch [] 
01:43:56.677 [error] Sending find_sub_aq batch [] 
01:43:56.677 [error] batched message propagation "2020-08-06T01:43:56.677" 
01:44:01.875 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:44:01.874" Took=32674 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_43_46_811}],[],[],[],[],[],[],[],[],[]}}}}] 
01:44:01.875 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",122,122},{"delta_send",122,123},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",248,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_43_46_811}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)684> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_43_46_811}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)685> f(AwMapRes).
ok
(h@16.0.0.18)686> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:44:02.164"
(h@16.0.0.18)687> 01:44:02.932 [error] C1 propagation "2020-08-06T01:44:02.932"  
01:44:02.932 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:44:02.932 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,124}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:123 
01:44:06.678 [error] Sending find_sub batch [] 
01:44:06.678 [error] Sending find_sub_aq batch [] 
01:44:06.678 [error] batched message propagation "2020-08-06T01:44:06.678" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_43_46_811}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)688> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_43_46_811}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)689> f(AwMapRes).
ok
(h@16.0.0.18)690> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:44:08.206"
(h@16.0.0.18)691> 01:44:08.868 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:44:08.867" Took=25357 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_43_52_831}],[],[],[],[],[],[],[]}}}}] 
01:44:08.868 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",123,123},{"delta_send",123,124},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",250,0},{"sub_cancel",0,0}] 
01:44:09.933 [error] C1 propagation "2020-08-06T01:44:09.933" 
01:44:09.945 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:44:09.945 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,125}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:124 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_43_52_831}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)692> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_43_52_831}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)693> f(AwMapRes).
ok
(h@16.0.0.18)694> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:44:14.249"
(h@16.0.0.18)695> 01:44:15.964 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:44:15.964" Took=44805 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_43_58_855}],[],[]}}}}] 
01:44:15.965 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",124,124},{"delta_send",124,125},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",252,0},{"sub_cancel",0,0}] 
01:44:16.373 [error] C3 propagation "2020-08-06T01:44:16.373" 
01:44:16.680 [error] Sending find_sub batch [] 
01:44:16.680 [error] Sending find_sub_aq batch [] 
01:44:16.680 [error] batched message propagation "2020-08-06T01:44:16.680" 
01:44:16.934 [error] C1 propagation "2020-08-06T01:44:16.934" 
01:44:17.007 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:44:17.007 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,126}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:125 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)696> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_43_58_855}],
         [],[]}}}}]
(h@16.0.0.18)697> f(AwMapRes).
ok
(h@16.0.0.18)698> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:44:20.287"
(h@16.0.0.18)699> 01:44:22.884 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:44:22.883" Took=36367 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_44_04_879}],[],[],[],[],[],[],[],[],[]}}}}] 
01:44:22.884 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",125,125},{"delta_send",125,126},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",254,0},{"sub_cancel",0,0}] 
01:44:23.936 [error] C1 propagation "2020-08-06T01:44:23.936" 
01:44:23.995 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:44:23.996 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,127}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:126 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_44_04_879}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)700> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_44_04_879}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)701> f(AwMapRes).
ok
(h@16.0.0.18)702> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:44:26.320"
(h@16.0.0.18)703> 01:44:26.682 [error] Sending find_sub batch [] 
01:44:26.682 [error] Sending find_sub_aq batch [] 
01:44:26.682 [error] batched message propagation "2020-08-06T01:44:26.682" 
01:44:29.879 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:44:29.879" Took=25164 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_44_10_901}]}}}}] 
01:44:29.880 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",126,126},{"delta_send",126,127},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",256,0},{"sub_cancel",0,0}] 
01:44:30.938 [error] C1 propagation "2020-08-06T01:44:30.938" 
01:44:30.949 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:44:30.950 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,128}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:127 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)704> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@16.0.0.18)705> f(AwMapRes).
ok
(h@16.0.0.18)706> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:44:32.360"
(h@16.0.0.18)707> 01:44:36.514 [error] C2 propagation "2020-08-06T01:44:36.514"  
01:44:36.684 [error] Sending find_sub batch [] 
01:44:36.684 [error] Sending find_sub_aq batch [] 
01:44:36.684 [error] batched message propagation "2020-08-06T01:44:36.684" 
01:44:36.921 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:44:36.921" Took=22070 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_44_22_945}],[],[],[],[],[],[],[],[],[]}}}}] 
01:44:37.023 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",127,127},{"delta_send",127,128},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",258,0},{"sub_cancel",0,0}] 
01:44:37.939 [error] C1 propagation "2020-08-06T01:44:37.939" 
01:44:37.971 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:44:37.971 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,129}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:128 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_44_22_945}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)708> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_44_22_945}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)709> f(AwMapRes).
ok
(h@16.0.0.18)710> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:44:38.391"
(h@16.0.0.18)711> 01:44:43.888 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:44:43.888" Took=27619 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_44_28_967}],[],[]}}}}] 
01:44:43.889 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",128,128},{"delta_send",128,129},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",260,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)712> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_44_28_967}],
         [],[]}}}}]
(h@16.0.0.18)713> f(AwMapRes).
ok
(h@16.0.0.18)714> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:44:44.427"
(h@16.0.0.18)715> 01:44:44.940 [error] C1 propagation "2020-08-06T01:44:44.940"  
01:44:44.961 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:44:44.961 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,130}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:129 
01:44:46.686 [error] Sending find_sub batch [] 
01:44:46.686 [error] Sending find_sub_aq batch [] 
01:44:46.686 [error] batched message propagation "2020-08-06T01:44:46.686" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)716> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_44_28_967}],
         [],[]}}}}]
(h@16.0.0.18)717> f(AwMapRes).
ok
(h@16.0.0.18)718> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:44:50.465"
(h@16.0.0.18)719> 01:44:51.941 [error] C1 propagation "2020-08-06T01:44:51.941"  
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)720> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_44_28_967}],
         [],[]}}}}]
(h@16.0.0.18)721> f(AwMapRes).
ok
(h@16.0.0.18)722> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:44:56.498"
(h@16.0.0.18)723> 01:44:56.688 [error] Sending find_sub batch [] 
01:44:56.688 [error] Sending find_sub_aq batch [] 
01:44:56.688 [error] batched message propagation "2020-08-06T01:44:56.688" 
01:44:57.907 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:44:57.907" Took=52712 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_44_40_584}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:44:57.907 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",129,129},{"delta_send",129,130},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",262,0},{"sub_cancel",0,0}] 
01:44:58.943 [error] C1 propagation "2020-08-06T01:44:58.943" 
01:44:58.943 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:44:58.943 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,131}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:130 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_44_40_584}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)724> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_44_40_584}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)725> f(AwMapRes).
ok
(h@16.0.0.18)726> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:45:02.530"
(h@16.0.0.18)727> 01:45:04.926 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:45:04.926" Took=34036 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_44_46_607}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:45:04.927 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",130,130},{"delta_send",130,131},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",264,0},{"sub_cancel",0,0}] 
01:45:05.944 [error] C1 propagation "2020-08-06T01:45:05.944" 
01:45:05.944 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:45:05.944 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,132}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:131 
01:45:06.690 [error] Sending find_sub batch [] 
01:45:06.690 [error] Sending find_sub_aq batch [] 
01:45:06.690 [error] batched message propagation "2020-08-06T01:45:06.690" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_44_46_607}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)728> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_44_46_607}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)729> f(AwMapRes).
ok
(h@16.0.0.18)730> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:45:08.561"
(h@16.0.0.18)731> 01:45:11.926 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:45:11.926" Took=33341 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_44_52_627}],[],[],[],[],[]}}}}] 
01:45:11.926 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",131,131},{"delta_send",131,132},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",266,0},{"sub_cancel",0,0}] 
01:45:12.945 [error] C1 propagation "2020-08-06T01:45:12.945" 
01:45:12.945 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:45:12.945 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,133}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:132 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_44_52_627}],
             [],[],[],...}}}}]}
(h@16.0.0.18)732> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_44_52_627}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)733> f(AwMapRes).
ok
(h@16.0.0.18)734> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:45:14.596"
(h@16.0.0.18)735> 01:45:16.516 [error] C2 propagation "2020-08-06T01:45:16.516"  
01:45:16.692 [error] Sending find_sub batch [] 
01:45:16.692 [error] Sending find_sub_aq batch [] 
01:45:16.692 [error] batched message propagation "2020-08-06T01:45:16.692" 
01:45:18.928 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:45:18.927" Took=26202 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_45_04_671}],[],[],[]}}}}] 
01:45:18.929 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",132,132},{"delta_send",132,133},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",268,0},{"sub_cancel",0,0}] 
01:45:19.946 [error] C1 propagation "2020-08-06T01:45:19.946" 
01:45:19.946 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:45:19.946 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,134}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:133 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)736> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_45_04_671}],
         [],[],[]}}}}]
(h@16.0.0.18)737> f(AwMapRes).
ok
(h@16.0.0.18)738> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:45:20.628"
(h@16.0.0.18)739> 01:45:25.931 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:45:25.931" Took=30726 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_45_10_697}],[],[],[],[],[],[],[],[],[]}}}}] 
01:45:25.932 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",133,133},{"delta_send",133,134},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",270,0},{"sub_cancel",0,0}] 
01:45:26.375 [error] C3 propagation "2020-08-06T01:45:26.375" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_45_10_697}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)740> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_45_10_697}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)741> f(AwMapRes).
ok
(h@16.0.0.18)742> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:45:26.660"
(h@16.0.0.18)743> 01:45:26.694 [error] Sending find_sub batch [] 
01:45:26.694 [error] Sending find_sub_aq batch [] 
01:45:26.694 [error] batched message propagation "2020-08-06T01:45:26.694" 
01:45:26.947 [error] C1 propagation "2020-08-06T01:45:26.947" 
01:45:26.962 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:45:26.963 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,135}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:134 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_45_10_697}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)744> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_45_10_697}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)745> f(AwMapRes).
ok
(h@16.0.0.18)746> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:45:32.698"
(h@16.0.0.18)747> 01:45:32.923 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:45:32.923" Took=26200 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_01_45_16_727}],[],[],[],[],[],[],[],[]}}}}] 
01:45:32.924 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",134,134},{"delta_send",134,135},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",272,0},{"sub_cancel",0,0}] 
01:45:33.949 [error] C1 propagation "2020-08-06T01:45:33.949" 
01:45:33.967 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:45:33.967 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,136}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:135 
01:45:36.696 [error] Sending find_sub batch [] 
01:45:36.696 [error] Sending find_sub_aq batch [] 
01:45:36.696 [error] batched message propagation "2020-08-06T01:45:36.696" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_01_45_16_727}],
             [],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)748> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_01_45_16_727}],
         [],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)749> f(AwMapRes).
ok
(h@16.0.0.18)750> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:45:38.730"
(h@16.0.0.18)751> 01:45:39.925 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:45:39.924" Took=25888 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_45_22_748}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:45:39.925 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",135,135},{"delta_send",135,136},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",274,0},{"sub_cancel",0,0}] 
01:45:40.950 [error] C1 propagation "2020-08-06T01:45:40.950" 
01:45:40.982 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:45:40.982 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,137}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:136 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_45_22_748}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)752> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_45_22_748}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)753> f(AwMapRes).
ok
(h@16.0.0.18)754> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:45:44.764"
(h@16.0.0.18)755> 01:45:46.698 [error] Sending find_sub batch [] 
01:45:46.698 [error] Sending find_sub_aq batch [] 
01:45:46.698 [error] batched message propagation "2020-08-06T01:45:46.698" 
01:45:46.935 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:45:46.935" Took=33015 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_45_28_771}],[],[],[],[],[],[],[]}}}}] 
01:45:46.997 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",136,136},{"delta_send",136,137},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",276,0},{"sub_cancel",0,0}] 
01:45:47.952 [error] C1 propagation "2020-08-06T01:45:47.952" 
01:45:47.952 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:45:47.952 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,138}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:137 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_45_28_771}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)756> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_45_28_771}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)757> f(AwMapRes).
ok
(h@16.0.0.18)758> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:45:50.798"
(h@16.0.0.18)759> 01:45:53.935 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:45:53.935" Took=29131 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_45_34_791}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:45:53.944 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",137,137},{"delta_send",137,138},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",278,0},{"sub_cancel",0,0}] 
01:45:54.954 [error] C1 propagation "2020-08-06T01:45:54.954" 
01:45:54.954 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:45:54.954 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,139}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:138 
01:45:56.518 [error] C2 propagation "2020-08-06T01:45:56.518" 
01:45:56.700 [error] Sending find_sub batch [] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_45_34_791}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)760> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_45_34_791}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)761> 01:45:56.700 [error] Sending find_sub_aq batch [] 
f(AwMapRes).
ok
(h@16.0.0.18)762> 01:45:56.700 [error] batched message propagation "2020-08-06T01:45:56.700" 
lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:45:56.834"
(h@16.0.0.18)763> 01:46:00.946 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:46:00.946" Took=39777 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_45_46_839}],[]}}}}] 
01:46:00.946 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",138,138},{"delta_send",138,139},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",280,0},{"sub_cancel",0,0}] 
01:46:01.955 [error] C1 propagation "2020-08-06T01:46:01.955" 
01:46:01.955 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:46:01.955 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,140}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:139 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)764> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)765> f(AwMapRes).
ok
(h@16.0.0.18)766> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:46:02.870"
(h@16.0.0.18)767> 01:46:06.702 [error] Sending find_sub batch [] 
01:46:06.702 [error] Sending find_sub_aq batch [] 
01:46:06.702 [error] batched message propagation "2020-08-06T01:46:06.702" 
01:46:07.931 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:46:07.931" Took=24581 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_01_45_52_859}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:46:07.931 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",139,139},{"delta_send",139,140},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",282,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_01_45_52_859}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)768> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_01_45_52_859}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)769> f(AwMapRes).
ok
(h@16.0.0.18)770> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:46:08.906"
(h@16.0.0.18)771> 01:46:08.956 [error] C1 propagation "2020-08-06T01:46:08.956"  
01:46:08.956 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:46:08.956 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,141}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:140 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)772> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)773> f(AwMapRes).
ok
(h@16.0.0.18)774> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:46:14.951"
(h@16.0.0.18)775> 01:46:14.943 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:46:14.943" Took=36205 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_45_58_879}],[]}}}}] 
01:46:14.944 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",140,140},{"delta_send",140,141},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",284,0},{"sub_cancel",0,0}] 
01:46:15.957 [error] C1 propagation "2020-08-06T01:46:15.957" 
01:46:15.985 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:46:15.985 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,142}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:141 
01:46:16.704 [error] Sending find_sub batch [] 
01:46:16.704 [error] Sending find_sub_aq batch [] 
01:46:16.704 [error] batched message propagation "2020-08-06T01:46:16.704" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)776> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)777> f(AwMapRes).
ok
(h@16.0.0.18)778> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:46:20.989"
(h@16.0.0.18)779> 01:46:21.942 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:46:21.942" Took=32864 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_46_04_900}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:46:21.943 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",141,141},{"delta_send",141,142},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",286,0},{"sub_cancel",0,0}] 
01:46:22.959 [error] C1 propagation "2020-08-06T01:46:22.959" 
01:46:22.959 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:46:22.959 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,143}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:142 
01:46:26.706 [error] Sending find_sub batch [] 
01:46:26.706 [error] Sending find_sub_aq batch [] 
01:46:26.706 [error] batched message propagation "2020-08-06T01:46:26.706" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_46_04_900}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)780> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_46_04_900}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)781> f(AwMapRes).
ok
(h@16.0.0.18)782> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:46:27.249"
(h@16.0.0.18)783> 01:46:28.940 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:46:28.940" Took=30903 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_46_10_923}]}}}}] 
01:46:28.940 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",142,142},{"delta_send",142,143},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",288,0},{"sub_cancel",0,0}] 
01:46:29.960 [error] C1 propagation "2020-08-06T01:46:29.960" 
01:46:29.960 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:46:29.960 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,144}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:143 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)784> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@16.0.0.18)785> f(AwMapRes).
ok
(h@16.0.0.18)786> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:46:33.597"
(h@16.0.0.18)787> 01:46:35.938 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:46:35.938" Took=28564 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_46_16_946}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:46:35.939 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",143,143},{"delta_send",143,144},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",290,0},{"sub_cancel",0,0}] 
01:46:36.376 [error] C3 propagation "2020-08-06T01:46:36.376" 
01:46:36.520 [error] C2 propagation "2020-08-06T01:46:36.520" 
01:46:36.707 [error] Sending find_sub batch [] 
01:46:36.707 [error] Sending find_sub_aq batch [] 
01:46:36.707 [error] batched message propagation "2020-08-06T01:46:36.707" 
01:46:36.961 [error] C1 propagation "2020-08-06T01:46:36.961" 
01:46:36.961 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:46:36.961 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,145}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:144 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_46_16_946}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)788> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_46_16_946}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)789> f(AwMapRes).
ok
(h@16.0.0.18)790> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:46:39.956"
(h@16.0.0.18)791> 01:46:42.937 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:46:42.937" Took=24828 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_46_28_990}],[],[],[]}}}}] 
01:46:42.937 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",144,144},{"delta_send",144,145},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",292,0},{"sub_cancel",0,0}] 
01:46:43.962 [error] C1 propagation "2020-08-06T01:46:43.962" 
01:46:43.962 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:46:43.962 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,146}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:145 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)792> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_46_28_990}],
         [],[],[]}}}}]
(h@16.0.0.18)793> f(AwMapRes).
ok
(h@16.0.0.18)794> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:46:45.129"
(h@16.0.0.18)795> 01:46:46.709 [error] Sending find_sub batch [] 
01:46:46.709 [error] Sending find_sub_aq batch [] 
01:46:46.709 [error] batched message propagation "2020-08-06T01:46:46.709" 
01:46:49.943 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:46:49.943" Took=27949 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_46_35_015}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:46:49.944 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",145,145},{"delta_send",145,146},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",294,0},{"sub_cancel",0,0}] 
01:46:50.964 [error] C1 propagation "2020-08-06T01:46:50.964" 
01:46:50.964 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_46_35_015}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)796> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_46_35_015}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)797> 01:46:50.964 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,147}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:146 
f(AwMapRes).
ok
(h@16.0.0.18)798> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:46:51.170"
(h@16.0.0.18)799> 01:46:56.710 [error] Sending find_sub batch [] 
01:46:56.710 [error] Sending find_sub_aq batch [] 
01:46:56.710 [error] batched message propagation "2020-08-06T01:46:56.710" 
01:46:57.036 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:46:57.365" Took=58731 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_46_41_033}],[],[],[]}}}}] 
01:46:57.036 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",146,146},{"delta_send",146,147},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",296,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)800> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_46_41_033}],
         [],[],[]}}}}]
(h@16.0.0.18)801> f(AwMapRes).
ok
(h@16.0.0.18)802> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:46:57.208"
(h@16.0.0.18)803> 01:46:57.965 [error] C1 propagation "2020-08-06T01:46:57.965"  
01:46:57.966 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:46:57.966 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,148}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:147 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)804> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_46_41_033}],
         [],[],[]}}}}]
(h@16.0.0.18)805> f(AwMapRes).
ok
(h@16.0.0.18)806> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:47:03.241"
(h@16.0.0.18)807> 01:47:03.956 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:47:03.956" Took=40052 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_46_47_055}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:47:03.957 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",147,147},{"delta_send",147,148},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",298,0},{"sub_cancel",0,0}] 
01:47:04.966 [error] C1 propagation "2020-08-06T01:47:04.966" 
01:47:04.966 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:47:04.966 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,149}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:148 
01:47:06.712 [error] Sending find_sub batch [] 
01:47:06.712 [error] Sending find_sub_aq batch [] 
01:47:06.712 [error] batched message propagation "2020-08-06T01:47:06.712" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_46_47_055}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)808> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_46_47_055}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)809> f(AwMapRes).
ok
(h@16.0.0.18)810> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:47:09.273"
(h@16.0.0.18)811> 01:47:10.943 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:47:10.943" Took=24840 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_46_53_077}],[],[],[],[],[],[],[]}}}}] 
01:47:10.943 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",148,148},{"delta_send",148,149},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",300,0},{"sub_cancel",0,0}] 
01:47:11.967 [error] C1 propagation "2020-08-06T01:47:11.967" 
01:47:11.999 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:47:11.999 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,150}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:149 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_46_53_077}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)812> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_46_53_077}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)813> f(AwMapRes).
ok
(h@16.0.0.18)814> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:47:15.309"
(h@16.0.0.18)815> 01:47:16.521 [error] C2 propagation "2020-08-06T01:47:16.521"  
01:47:16.714 [error] Sending find_sub batch [] 
01:47:16.714 [error] Sending find_sub_aq batch [] 
01:47:16.714 [error] batched message propagation "2020-08-06T01:47:16.714" 
01:47:17.958 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:47:17.958" Took=26189 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_46_59_100}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:47:17.959 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",149,149},{"delta_send",149,150},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",302,0},{"sub_cancel",0,0}] 
01:47:18.968 [error] C1 propagation "2020-08-06T01:47:18.968" 
01:47:18.969 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:47:18.969 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,151}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:150 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_46_59_100}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)816> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_46_59_100}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)817> f(AwMapRes).
ok
(h@16.0.0.18)818> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:47:21.343"
(h@16.0.0.18)819> 01:47:24.958 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:47:24.958" Took=34247 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_47_11_143}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:47:24.961 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",150,150},{"delta_send",150,151},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",304,0},{"sub_cancel",0,0}] 
01:47:25.969 [error] C1 propagation "2020-08-06T01:47:25.969" 
01:47:26.020 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:47:26.020 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,152}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:151 
01:47:26.716 [error] Sending find_sub batch [] 
01:47:26.716 [error] Sending find_sub_aq batch [] 
01:47:26.716 [error] batched message propagation "2020-08-06T01:47:26.716" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_47_11_143}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)820> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_47_11_143}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)821> f(AwMapRes).
ok
(h@16.0.0.18)822> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:47:27.375"
(h@16.0.0.18)823> 01:47:31.954 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:47:31.954" Took=32964 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_47_17_166}],[],[],[]}}}}] 
01:47:31.955 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",151,151},{"delta_send",151,152},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",306,0},{"sub_cancel",0,0}] 
01:47:32.971 [error] C1 propagation "2020-08-06T01:47:32.971" 
01:47:32.971 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:47:32.971 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,153}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:152 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)824> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_47_17_166}],
         [],[],[]}}}}]
(h@16.0.0.18)825> f(AwMapRes).
ok
(h@16.0.0.18)826> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:47:33.412"
(h@16.0.0.18)827> 01:47:36.718 [error] Sending find_sub batch [] 
01:47:36.718 [error] Sending find_sub_aq batch [] 
01:47:36.718 [error] batched message propagation "2020-08-06T01:47:36.718" 
01:47:38.961 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:47:38.961" Took=34007 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_47_23_187}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:47:38.962 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",152,152},{"delta_send",152,153},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",308,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_47_23_187}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)828> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_47_23_187}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)829> f(AwMapRes).
ok
(h@16.0.0.18)830> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:47:39.447"
(h@16.0.0.18)831> 01:47:39.972 [error] C1 propagation "2020-08-06T01:47:39.972"  
01:47:39.972 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:47:39.972 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,154}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:153 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_47_23_187}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)832> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_47_23_187}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)833> f(AwMapRes).
ok
(h@16.0.0.18)834> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:47:45.481"
(h@16.0.0.18)835> 01:47:45.958 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:47:45.958" Took=22779 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_47_29_207}],[],[],[]}}}}] 
01:47:45.959 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",153,153},{"delta_send",153,154},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",310,0},{"sub_cancel",0,0}] 
01:47:46.377 [error] C3 propagation "2020-08-06T01:47:46.377" 
01:47:46.719 [error] Sending find_sub batch [] 
01:47:46.719 [error] Sending find_sub_aq batch [] 
01:47:46.719 [error] batched message propagation "2020-08-06T01:47:46.719" 
01:47:46.996 [error] C1 propagation "2020-08-06T01:47:46.996" 
01:47:47.005 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:47:47.005 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,155}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:154 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)836> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_47_29_207}],
         [],[],[]}}}}]
(h@16.0.0.18)837> f(AwMapRes).
ok
(h@16.0.0.18)838> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:47:51.516"
(h@16.0.0.18)839> 01:47:52.966 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:47:52.966" Took=30461 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_47_35_227}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:47:52.968 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",154,154},{"delta_send",154,155},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",312,0},{"sub_cancel",0,0}] 
01:47:53.998 [error] C1 propagation "2020-08-06T01:47:53.998" 
01:47:54.020 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:47:54.020 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,156}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:155 
01:47:56.522 [error] C2 propagation "2020-08-06T01:47:56.522" 
01:47:56.720 [error] Sending find_sub batch [] 
01:47:56.720 [error] Sending find_sub_aq batch [] 
01:47:56.720 [error] batched message propagation "2020-08-06T01:47:56.720" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_47_35_227}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)840> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_47_35_227}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)841> f(AwMapRes).
ok
(h@16.0.0.18)842> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:47:57.554"
(h@16.0.0.18)843> 01:47:59.954 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:47:59.953" Took=26988 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_47_41_247}],[],[],[],[],[],[]}}}}] 
01:47:59.954 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",155,155},{"delta_send",155,156},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",314,0},{"sub_cancel",0,0}] 
01:48:01.000 [error] C1 propagation "2020-08-06T01:48:01.191" 
01:48:01.000 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:48:01.000 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,157}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:156 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_47_41_247}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)844> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_47_41_247}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)845> f(AwMapRes).
ok
(h@16.0.0.18)846> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:48:03.590"
(h@16.0.0.18)847> 01:48:06.722 [error] Sending find_sub batch [] 
01:48:06.722 [error] Sending find_sub_aq batch [] 
01:48:06.722 [error] batched message propagation "2020-08-06T01:48:06.722" 
01:48:06.956 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:48:06.956" Took=26784 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_47_53_289}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:48:06.956 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",156,156},{"delta_send",156,157},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",316,0},{"sub_cancel",0,0}] 
01:48:08.001 [error] C1 propagation "2020-08-06T01:48:08.118" 
01:48:08.052 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:48:08.052 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,158}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:157 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_47_53_289}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)848> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_47_53_289}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)849> f(AwMapRes).
ok
(h@16.0.0.18)850> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:48:09.623"
(h@16.0.0.18)851> 01:48:13.960 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:48:13.960" Took=29682 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_47_59_311}],[],[],[],[],[],[],[],[],[]}}}}] 
01:48:13.960 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",157,157},{"delta_send",157,158},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",318,0},{"sub_cancel",0,0}] 
01:48:15.003 [error] C1 propagation "2020-08-06T01:48:15.316" 
01:48:15.006 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:48:15.007 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,159}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:158 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_47_59_311}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)852> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_47_59_311}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)853> f(AwMapRes).
ok
(h@16.0.0.18)854> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:48:15.662"
(h@16.0.0.18)855> 01:48:16.724 [error] Sending find_sub batch [] 
01:48:16.724 [error] Sending find_sub_aq batch [] 
01:48:16.724 [error] batched message propagation "2020-08-06T01:48:16.724" 
01:48:20.967 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:48:20.967" Took=35430 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_48_05_331}],[],[],[],[],[],[],[],[],[]}}}}] 
01:48:20.967 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",158,158},{"delta_send",158,159},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",320,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_48_05_331}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)856> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_48_05_331}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)857> f(AwMapRes).
ok
(h@16.0.0.18)858> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:48:21.693"
(h@16.0.0.18)859> 01:48:22.005 [error] C1 propagation "2020-08-06T01:48:22.518"  
01:48:22.024 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:48:22.024 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,160}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:159 
01:48:26.726 [error] Sending find_sub batch [] 
01:48:26.726 [error] Sending find_sub_aq batch [] 
01:48:26.726 [error] batched message propagation "2020-08-06T01:48:26.726" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_48_05_331}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)860> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_48_05_331}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)861> f(AwMapRes).
ok
(h@16.0.0.18)862> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:48:27.726"
(h@16.0.0.18)863> 01:48:27.965 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:48:27.965" Took=31473 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_48_11_355}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:48:27.966 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",159,159},{"delta_send",159,160},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",322,0},{"sub_cancel",0,0}] 
01:48:29.006 [error] C1 propagation "2020-08-06T01:48:29.617" 
01:48:29.066 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:48:29.067 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,161}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:160 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_48_11_355}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)864> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_48_11_355}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)865> f(AwMapRes).
ok
(h@16.0.0.18)866> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:48:33.763"
(h@16.0.0.18)867> 01:48:34.963 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:48:34.963" Took=25934 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_48_17_376}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:48:34.964 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",160,160},{"delta_send",160,161},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",324,0},{"sub_cancel",0,0}] 
01:48:36.007 [error] C1 propagation "2020-08-06T01:48:36.722" 
01:48:36.032 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:48:36.032 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,162}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:161 
01:48:36.523 [error] C2 propagation "2020-08-06T01:48:36.523" 
01:48:36.728 [error] Sending find_sub batch [] 
01:48:36.728 [error] Sending find_sub_aq batch [] 
01:48:36.728 [error] batched message propagation "2020-08-06T01:48:36.728" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_48_17_376}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)868> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_48_17_376}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)869> f(AwMapRes).
ok
(h@16.0.0.18)870> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:48:39.798"
(h@16.0.0.18)871> 01:48:41.976 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:48:41.976" Took=38344 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_48_23_401}],[],[],[],[]}}}}] 
01:48:41.977 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",161,161},{"delta_send",161,162},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",326,0},{"sub_cancel",0,0}] 
01:48:43.009 [error] C1 propagation "2020-08-06T01:48:43.918" 
01:48:43.011 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:48:43.011 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,163}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:162 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_48_23_401}],
             [],[],...}}}}]}
(h@16.0.0.18)872> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_48_23_401}],
         [],[],[],[]}}}}]
(h@16.0.0.18)873> f(AwMapRes).
ok
(h@16.0.0.18)874> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:48:45.833"
(h@16.0.0.18)875> 01:48:46.730 [error] Sending find_sub batch [] 
01:48:46.730 [error] Sending find_sub_aq batch [] 
01:48:46.730 [error] batched message propagation "2020-08-06T01:48:46.730" 
01:48:48.970 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:48:48.970" Took=26788 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_48_35_443}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:48:48.972 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",162,162},{"delta_send",162,163},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",328,0},{"sub_cancel",0,0}] 
01:48:50.010 [error] C1 propagation "2020-08-06T01:48:50.101" 
01:48:50.010 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:48:50.010 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,164}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:163 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_48_35_443}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)876> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_48_35_443}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)877> f(AwMapRes).
ok
(h@16.0.0.18)878> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:48:51.865"
(h@16.0.0.18)879> 01:48:55.976 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:48:55.976" Took=33988 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_48_41_462}],[],[],[]}}}}] 
01:48:55.976 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",163,163},{"delta_send",163,164},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",330,0},{"sub_cancel",0,0}] 
01:48:56.379 [error] C3 propagation "2020-08-06T01:48:56.379" 
01:48:56.732 [error] Sending find_sub batch [] 
01:48:56.732 [error] Sending find_sub_aq batch [] 
01:48:56.732 [error] batched message propagation "2020-08-06T01:48:56.732" 
01:48:57.011 [error] C1 propagation "2020-08-06T01:48:57.112" 
01:48:57.011 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:48:57.011 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,165}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:164 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)880> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_48_41_462}],
         [],[],[]}}}}]
(h@16.0.0.18)881> f(AwMapRes).
ok
(h@16.0.0.18)882> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:48:57.900"
(h@16.0.0.18)883> 01:49:02.991 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:49:02.991" Took=32468 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_48_47_485}],[],[],[],[],[],[]}}}}] 
01:49:02.992 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",164,164},{"delta_send",164,165},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",332,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_48_47_485}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)884> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_48_47_485}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)885> f(AwMapRes).
ok
(h@16.0.0.18)886> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:49:03.937"
(h@16.0.0.18)887> 01:49:04.012 [error] C1 propagation "2020-08-06T01:49:04.122"  
01:49:04.053 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:49:04.054 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,166}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:165 
01:49:06.734 [error] Sending find_sub batch [] 
01:49:06.734 [error] Sending find_sub_aq batch [] 
01:49:06.734 [error] batched message propagation "2020-08-06T01:49:06.734" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_48_53_505}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)888> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_48_53_505}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)889> f(AwMapRes).
ok
(h@16.0.0.18)890> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:49:09.989"
(h@16.0.0.18)891> 01:49:09.987 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:49:09.987" Took=38695 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_48_53_505}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:49:09.988 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",165,165},{"delta_send",165,166},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",334,0},{"sub_cancel",0,0}] 
01:49:11.014 [error] C1 propagation "2020-08-06T01:49:11.142" 
01:49:11.014 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:49:11.014 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,167}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:166 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_48_53_505}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)892> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_48_53_505}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)893> f(AwMapRes).
ok
(h@16.0.0.18)894> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:49:16.148"
(h@16.0.0.18)895> 01:49:16.524 [error] C2 propagation "2020-08-06T01:49:16.524"  
01:49:16.736 [error] Sending find_sub batch [] 
01:49:16.736 [error] Sending find_sub_aq batch [] 
01:49:16.737 [error] batched message propagation "2020-08-06T01:49:16.737" 
01:49:16.966 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:49:16.966" Took=21497 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_48_59_543}],[]}}}}] 
01:49:16.967 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",166,166},{"delta_send",166,167},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",336,0},{"sub_cancel",0,0}] 
01:49:18.015 [error] C1 propagation "2020-08-06T01:49:18.151" 
01:49:18.015 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:49:18.015 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,168}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:167 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)896> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)897> f(AwMapRes).
ok
(h@16.0.0.18)898> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:49:22.521"
(h@16.0.0.18)899> 01:49:23.980 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:49:23.980" Took=32611 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_49_05_563}],[],[],[],[],[],[],[]}}}}] 
01:49:23.980 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",167,167},{"delta_send",167,168},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",338,0},{"sub_cancel",0,0}] 
01:49:25.016 [error] C1 propagation "2020-08-06T01:49:25.162" 
01:49:25.016 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:49:25.016 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,169}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:168 
01:49:26.738 [error] Sending find_sub batch [] 
01:49:26.738 [error] Sending find_sub_aq batch [] 
01:49:26.738 [error] batched message propagation "2020-08-06T01:49:26.738" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_49_05_563}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)900> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_49_05_563}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)901> f(AwMapRes).
ok
(h@16.0.0.18)902> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:49:28.825"
(h@16.0.0.18)903> 01:49:30.981 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:49:30.981" Took=33494 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_49_11_585}],[],[],[],[],[],[],[]}}}}] 
01:49:30.983 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",168,168},{"delta_send",168,169},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",340,0},{"sub_cancel",0,0}] 
01:49:32.018 [error] C1 propagation "2020-08-06T01:49:32.182" 
01:49:32.018 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:49:32.018 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,170}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:169 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_49_11_585}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)904> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_49_11_585}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)905> f(AwMapRes).
ok
(h@16.0.0.18)906> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:49:34.113"
(h@16.0.0.18)907> 01:49:36.740 [error] Sending find_sub batch [] 
01:49:36.740 [error] Sending find_sub_aq batch [] 
01:49:36.740 [error] batched message propagation "2020-08-06T01:49:36.740" 
01:49:37.990 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:49:37.990" Took=39255 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_49_23_623}],[],[]}}}}] 
01:49:37.990 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",169,169},{"delta_send",169,170},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",342,0},{"sub_cancel",0,0}] 
01:49:39.019 [error] C1 propagation "2020-08-06T01:49:39.192" 
01:49:39.038 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:49:39.038 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,171}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:170 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)908> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_49_23_623}],
         [],[]}}}}]
(h@16.0.0.18)909> f(AwMapRes).
ok
(h@16.0.0.18)910> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:49:40.166"
(h@16.0.0.18)911> 01:49:44.976 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:49:44.976" Took=25904 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_49_29_643}],[]}}}}] 
01:49:44.977 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",170,170},{"delta_send",170,171},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",344,0},{"sub_cancel",0,0}] 
01:49:46.020 [error] C1 propagation "2020-08-06T01:49:46.202" 
01:49:46.020 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)912> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)913> f(AwMapRes).
ok
(h@16.0.0.18)914> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:49:46.204"
(h@16.0.0.18)915> 01:49:46.020 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,172}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:171 
01:49:46.742 [error] Sending find_sub batch [] 
01:49:46.742 [error] Sending find_sub_aq batch [] 
01:49:46.742 [error] batched message propagation "2020-08-06T01:49:46.742" 
01:49:51.977 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:49:51.976" Took=25247 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_49_35_667}],[],[],[],[],[],[],[]}}}}] 
01:49:51.977 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",171,171},{"delta_send",171,172},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",346,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_49_35_667}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)916> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_49_35_667}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)917> f(AwMapRes).
ok
(h@16.0.0.18)918> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:49:52.232"
(h@16.0.0.18)919> 01:49:53.021 [error] C1 propagation "2020-08-06T01:49:53.212"  
01:49:53.021 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:49:53.021 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,173}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:172 
01:49:56.525 [error] C2 propagation "2020-08-06T01:49:56.525" 
01:49:56.744 [error] Sending find_sub batch [] 
01:49:56.744 [error] Sending find_sub_aq batch [] 
01:49:56.744 [error] batched message propagation "2020-08-06T01:49:56.744" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_49_35_667}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)920> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_49_35_667}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)921> f(AwMapRes).
ok
(h@16.0.0.18)922> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:49:58.267"
(h@16.0.0.18)923> 01:50:00.022 [error] C1 propagation "2020-08-06T01:50:00.223"  
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_49_35_667}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)924> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_49_35_667}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)925> f(AwMapRes).
ok
(h@16.0.0.18)926> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:50:04.304"
(h@16.0.0.18)927> 01:50:05.980 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:50:05.980" Took=22917 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_49_47_251}],[],[],[],[],[],[],[]}}}}] 
01:50:05.981 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",172,172},{"delta_send",172,173},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",348,0},{"sub_cancel",0,0}] 
01:50:06.380 [error] C3 propagation "2020-08-06T01:50:06.380" 
01:50:06.745 [error] Sending find_sub batch [] 
01:50:06.745 [error] Sending find_sub_aq batch [] 
01:50:06.745 [error] batched message propagation "2020-08-06T01:50:06.745" 
01:50:07.024 [error] C1 propagation "2020-08-06T01:50:07.242" 
01:50:07.072 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:50:07.072 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,174}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:173 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_49_47_251}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)928> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_49_47_251}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)929> f(AwMapRes).
ok
(h@16.0.0.18)930> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:50:10.341"
(h@16.0.0.18)931> 01:50:12.987 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:50:12.987" Took=29345 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_49_59_291}],[],[],[],[],[],[],[],[],[]}}}}] 
01:50:12.987 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",173,173},{"delta_send",173,174},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",350,0},{"sub_cancel",0,0}] 
01:50:14.026 [error] C1 propagation "2020-08-06T01:50:14.261" 
01:50:14.062 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:50:14.062 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,175}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:174 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_49_59_291}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)932> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_49_59_291}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)933> f(AwMapRes).
ok
(h@16.0.0.18)934> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:50:16.378"
(h@16.0.0.18)935> 01:50:16.747 [error] Sending find_sub batch [] 
01:50:16.747 [error] Sending find_sub_aq batch [] 
01:50:16.747 [error] batched message propagation "2020-08-06T01:50:16.747" 
01:50:19.986 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:50:19.986" Took=26338 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_50_05_315}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:50:19.987 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",174,174},{"delta_send",174,175},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",352,0},{"sub_cancel",0,0}] 
01:50:21.027 [error] C1 propagation "2020-08-06T01:50:21.271" 
01:50:21.082 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:50:21.082 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,176}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:175 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_50_05_315}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)936> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_50_05_315}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)937> f(AwMapRes).
ok
(h@16.0.0.18)938> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:50:22.413"
(h@16.0.0.18)939> 01:50:26.749 [error] Sending find_sub batch [] 
01:50:26.749 [error] Sending find_sub_aq batch [] 
01:50:26.749 [error] batched message propagation "2020-08-06T01:50:26.749" 
01:50:27.044 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:50:27.440" Took=23694 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_50_11_335}],[],[],[],[]}}}}] 
01:50:27.125 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",175,175},{"delta_send",175,176},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",354,0},{"sub_cancel",0,0}] 
01:50:28.028 [error] C1 propagation "2020-08-06T01:50:28.282" 
01:50:28.047 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:50:28.047 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,177}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:176 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_50_11_335}],
             [],[],...}}}}]}
(h@16.0.0.18)940> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_50_11_335}],
         [],[],[],[]}}}}]
(h@16.0.0.18)941> f(AwMapRes).
ok
(h@16.0.0.18)942> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:50:28.452"
(h@16.0.0.18)943> 01:50:33.986 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:50:33.986" Took=21360 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_50_17_355}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:50:33.987 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",176,176},{"delta_send",176,177},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",356,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_50_17_355}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)944> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_50_17_355}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)945> f(AwMapRes).
ok
(h@16.0.0.18)946> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:50:34.488"
(h@16.0.0.18)947> 01:50:35.029 [error] C1 propagation "2020-08-06T01:50:35.292"  
01:50:35.089 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:50:35.089 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,178}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:177 
01:50:36.526 [error] C2 propagation "2020-08-06T01:50:36.526" 
01:50:36.751 [error] Sending find_sub batch [] 
01:50:36.751 [error] Sending find_sub_aq batch [] 
01:50:36.751 [error] batched message propagation "2020-08-06T01:50:36.751" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_50_17_355}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)948> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_50_17_355}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)949> f(AwMapRes).
ok
(h@16.0.0.18)950> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:50:40.525"
(h@16.0.0.18)951> 01:50:40.999 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:50:40.999" Took=36202 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_50_23_375}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:50:40.999 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",177,177},{"delta_send",177,178},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",358,0},{"sub_cancel",0,0}] 
01:50:42.031 [error] C1 propagation "2020-08-06T01:50:42.311" 
01:50:42.055 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:50:42.087 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,179}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:178 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_50_23_375}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)952> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_50_23_375}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)953> f(AwMapRes).
ok
(h@16.0.0.18)954> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:50:46.568"
(h@16.0.0.18)955> 01:50:46.753 [error] Sending find_sub batch [] 
01:50:46.753 [error] Sending find_sub_aq batch [] 
01:50:46.753 [error] batched message propagation "2020-08-06T01:50:46.753" 
01:50:47.997 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:50:47.997" Took=26968 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_50_29_398}],[],[],[],[],[],[],[],[],[]}}}}] 
01:50:47.998 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",178,178},{"delta_send",178,179},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",360,0},{"sub_cancel",0,0}] 
01:50:49.032 [error] C1 propagation "2020-08-06T01:50:49.321" 
01:50:49.035 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:50:49.035 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,180}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:179 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_50_29_398}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)956> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_50_29_398}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)957> f(AwMapRes).
ok
(h@16.0.0.18)958> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:50:52.601"
(h@16.0.0.18)959> 01:50:55.002 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:50:55.275" Took=25053 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_50_41_436}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:50:55.003 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",179,179},{"delta_send",179,180},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",362,0},{"sub_cancel",0,0}] 
01:50:56.033 [error] C1 propagation "2020-08-06T01:50:56.332" 
01:50:56.061 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:50:56.061 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,181}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:180 
01:50:56.755 [error] Sending find_sub batch [] 
01:50:56.755 [error] Sending find_sub_aq batch [] 
01:50:56.755 [error] batched message propagation "2020-08-06T01:50:56.755" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_50_41_436}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)960> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_50_41_436}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)961> f(AwMapRes).
ok
(h@16.0.0.18)962> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:50:58.636"
(h@16.0.0.18)963> 01:51:01.988 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:51:01.988" Took=23039 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_50_47_458}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:51:01.989 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",180,180},{"delta_send",180,181},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",364,0},{"sub_cancel",0,0}] 
01:51:03.034 [error] C1 propagation "2020-08-06T01:51:03.342" 
01:51:03.055 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:51:03.055 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,182}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:181 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_50_47_458}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)964> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_50_47_458}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)965> f(AwMapRes).
ok
(h@16.0.0.18)966> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:51:04.678"
(h@16.0.0.18)967> 01:51:06.757 [error] Sending find_sub batch [] 
01:51:06.757 [error] Sending find_sub_aq batch [] 
01:51:06.757 [error] batched message propagation "2020-08-06T01:51:06.757" 
01:51:09.004 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:51:09.384" Took=35658 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_50_53_480}],[],[],[],[]}}}}] 
01:51:09.004 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",181,181},{"delta_send",181,182},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",366,0},{"sub_cancel",0,0}] 
01:51:10.036 [error] C1 propagation "2020-08-06T01:51:10.362" 
01:51:10.076 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:51:10.076 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,183}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:182 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_50_53_480}],
             [],[],...}}}}]}
(h@16.0.0.18)968> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_50_53_480}],
         [],[],[],[]}}}}]
(h@16.0.0.18)969> f(AwMapRes).
ok
(h@16.0.0.18)970> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:51:10.717"
(h@16.0.0.18)971> 01:51:16.002 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:51:16.216" Took=26172 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_50_59_503}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:51:16.002 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",182,182},{"delta_send",182,183},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",368,0},{"sub_cancel",0,0}] 
01:51:16.382 [error] C3 propagation "2020-08-06T01:51:16.382" 
01:51:16.527 [error] C2 propagation "2020-08-06T01:51:16.527" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_50_59_503}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)972> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_50_59_503}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)973> f(AwMapRes).
ok
(h@16.0.0.18)974> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:51:16.751"
(h@16.0.0.18)975> 01:51:16.759 [error] Sending find_sub batch [] 
01:51:16.759 [error] Sending find_sub_aq batch [] 
01:51:16.759 [error] batched message propagation "2020-08-06T01:51:16.759" 
01:51:17.037 [error] C1 propagation "2020-08-06T01:51:17.372" 
01:51:17.095 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:51:17.095 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,184}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:183 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_50_59_503}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)976> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_50_59_503}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)977> f(AwMapRes).
ok
(h@16.0.0.18)978> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:51:22.787"
(h@16.0.0.18)979> 01:51:23.018 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:51:23.180" Took=38907 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_51_05_524}],[],[]}}}}] 
01:51:23.018 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",183,183},{"delta_send",183,184},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",370,0},{"sub_cancel",0,0}] 
01:51:24.038 [error] C1 propagation "2020-08-06T01:51:24.382" 
01:51:24.056 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:51:24.056 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,185}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:184 
01:51:26.761 [error] Sending find_sub batch [] 
01:51:26.761 [error] Sending find_sub_aq batch [] 
01:51:26.761 [error] batched message propagation "2020-08-06T01:51:26.761" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)980> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_51_05_524}],
         [],[]}}}}]
(h@16.0.0.18)981> f(AwMapRes).
ok
(h@16.0.0.18)982> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:51:28.820"
(h@16.0.0.18)983> 01:51:30.014 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:51:30.142" Took=39461 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_51_11_542}],[]}}}}] 
01:51:30.014 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",184,184},{"delta_send",184,185},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",372,0},{"sub_cancel",0,0}] 
01:51:31.039 [error] C1 propagation "2020-08-06T01:51:31.391" 
01:51:31.057 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:51:31.057 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,186}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:185 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)984> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)985> f(AwMapRes).
ok
(h@16.0.0.18)986> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:51:34.859"
(h@16.0.0.18)987> 01:51:36.763 [error] Sending find_sub batch [] 
01:51:36.763 [error] Sending find_sub_aq batch [] 
01:51:36.763 [error] batched message propagation "2020-08-06T01:51:36.763" 
01:51:37.012 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:51:37.120" Took=31478 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_51_17_563}],[],[],[],[],[],[]}}}}] 
01:51:37.137 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",185,185},{"delta_send",185,186},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",374,0},{"sub_cancel",0,0}] 
01:51:38.040 [error] C1 propagation "2020-08-06T01:51:38.403" 
01:51:38.040 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:51:38.040 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,187}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:186 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_51_17_563}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)988> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_51_17_563}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)989> f(AwMapRes).
ok
(h@16.0.0.18)990> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:51:40.893"
(h@16.0.0.18)991> 01:51:44.092 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:51:44.924" Took=28179 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_51_29_613}],[],[]}}}}] 
01:51:44.092 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",186,186},{"delta_send",186,187},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",376,0},{"sub_cancel",0,0}] 
01:51:45.041 [error] C1 propagation "2020-08-06T01:51:45.412" 
01:51:45.041 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:51:45.041 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,188}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:187 
01:51:46.765 [error] Sending find_sub batch [] 
01:51:46.765 [error] Sending find_sub_aq batch [] 
01:51:46.765 [error] batched message propagation "2020-08-06T01:51:46.765" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)992> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_51_29_613}],
         [],[]}}}}]
(h@16.0.0.18)993> f(AwMapRes).
ok
(h@16.0.0.18)994> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:51:46.942"
(h@16.0.0.18)995> 01:51:51.065 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:51:51.653" Took=37502 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_51_35_636}],[],[]}}}}] 
01:51:51.065 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",187,187},{"delta_send",187,188},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",378,0},{"sub_cancel",0,0}] 
01:51:52.042 [error] C1 propagation "2020-08-06T01:51:52.421" 
01:51:52.139 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:51:52.139 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,189}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:188 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[...],...}}}}]}
(h@16.0.0.18)996> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_51_35_636}],
         [],[]}}}}]
(h@16.0.0.18)997> f(AwMapRes).
ok
(h@16.0.0.18)998> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:51:52.978"
(h@16.0.0.18)999> 01:51:56.528 [error] C2 propagation "2020-08-06T01:51:56.528"  
01:51:56.767 [error] Sending find_sub batch [] 
01:51:56.767 [error] Sending find_sub_aq batch [] 
01:51:56.767 [error] batched message propagation "2020-08-06T01:51:56.767" 
01:51:58.048 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:51:58.481" Took=24000 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_51_41_655}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:51:58.048 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",188,188},{"delta_send",188,189},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",380,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_51_41_655}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1000> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_51_41_655}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1001> f(AwMapRes).
ok
(h@16.0.0.18)1002> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:51:59.138"
(h@16.0.0.18)1003> 01:51:59.043 [error] C1 propagation "2020-08-06T01:51:59.431" 
01:51:59.043 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:51:59.043 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,190}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:189 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_51_41_655}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1004> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_51_41_655}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1005> f(AwMapRes).
ok
(h@16.0.0.18)1006> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:52:05.532"
(h@16.0.0.18)1007> 01:52:05.089 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:52:05.888" Took=23180 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_51_47_679}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:52:05.089 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",189,189},{"delta_send",189,190},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",382,0},{"sub_cancel",0,0}] 
01:52:06.044 [error] C1 propagation "2020-08-06T01:52:06.442" 
01:52:06.044 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:52:06.044 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,191}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:190 
01:52:06.769 [error] Sending find_sub batch [] 
01:52:06.769 [error] Sending find_sub_aq batch [] 
01:52:06.769 [error] batched message propagation "2020-08-06T01:52:06.769" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],
             [#{what => timeis_01_51_47_679}],
             [],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1008> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],
         [#{what => timeis_01_51_47_679}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1009> f(AwMapRes).
ok
(h@16.0.0.18)1010> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:52:11.947"
(h@16.0.0.18)1011> 01:52:12.086 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:52:12.867" Took=34593 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_51_53_699}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:52:12.087 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",190,190},{"delta_send",190,191},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",384,0},{"sub_cancel",0,0}] 
01:52:13.046 [error] C1 propagation "2020-08-06T01:52:13.464" 
01:52:13.047 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:52:13.048 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,192}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:191 
01:52:16.771 [error] Sending find_sub batch [] 
01:52:16.771 [error] Sending find_sub_aq batch [] 
01:52:16.771 [error] batched message propagation "2020-08-06T01:52:16.771" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_51_53_699}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1012> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_51_53_699}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1013> f(AwMapRes).
ok
(h@16.0.0.18)1014> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:52:17.134"
(h@16.0.0.18)1015> 01:52:19.049 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:52:19.493" Took=22878 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_51_59_720}],[],[],[],[]}}}}] 
01:52:19.049 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",191,191},{"delta_send",191,192},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",386,0},{"sub_cancel",0,0}] 
01:52:20.047 [error] C1 propagation "2020-08-06T01:52:20.471" 
01:52:20.074 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:52:20.074 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,193}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:192 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_51_59_720}],
             [],[],...}}}}]}
(h@16.0.0.18)1016> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_51_59_720}],
         [],[],[],[]}}}}]
(h@16.0.0.18)1017> f(AwMapRes).
ok
(h@16.0.0.18)1018> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:52:23.171"
(h@16.0.0.18)1019> 01:52:26.062 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:52:26.618" Took=32953 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_52_11_762}],[],[],[],[],[],[],[],[],[]}}}}] 
01:52:26.062 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",192,192},{"delta_send",192,193},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",388,0},{"sub_cancel",0,0}] 
01:52:26.383 [error] C3 propagation "2020-08-06T01:52:26.383" 
01:52:26.773 [error] Sending find_sub batch [] 
01:52:26.773 [error] Sending find_sub_aq batch [] 
01:52:26.773 [error] batched message propagation "2020-08-06T01:52:26.773" 
01:52:27.048 [error] C1 propagation "2020-08-06T01:52:27.482" 
01:52:27.101 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:52:27.101 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,194}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:193 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_52_11_762}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1020> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_52_11_762}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1021> f(AwMapRes).
ok
(h@16.0.0.18)1022> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:52:29.206"
(h@16.0.0.18)1023> 01:52:33.062 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:52:33.617" Took=35243 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_52_17_783}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:52:33.062 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",193,193},{"delta_send",193,194},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",390,0},{"sub_cancel",0,0}] 
01:52:34.049 [error] C1 propagation "2020-08-06T01:52:34.493" 
01:52:34.071 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:52:34.071 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,195}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:194 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_52_17_783}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1024> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_52_17_783}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1025> f(AwMapRes).
ok
(h@16.0.0.18)1026> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:52:35.266"
(h@16.0.0.18)1027> 01:52:36.530 [error] C2 propagation "2020-08-06T01:52:36.530" 
01:52:36.775 [error] Sending find_sub batch [] 
01:52:36.775 [error] Sending find_sub_aq batch [] 
01:52:36.775 [error] batched message propagation "2020-08-06T01:52:36.775" 
01:52:40.059 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:52:40.588" Took=31428 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_52_23_800}],[],[],[],[],[],[],[],[],[]}}}}] 
01:52:40.059 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",194,194},{"delta_send",194,195},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",392,0},{"sub_cancel",0,0}] 
01:52:41.050 [error] C1 propagation "2020-08-06T01:52:41.502" 
01:52:41.050 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:52:41.050 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,196}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:195 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_52_23_800}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1028> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_52_23_800}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1029> f(AwMapRes).
ok
(h@16.0.0.18)1030> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:52:41.379"
(h@16.0.0.18)1031> 01:52:46.777 [error] Sending find_sub batch [] 
01:52:46.777 [error] Sending find_sub_aq batch [] 
01:52:46.777 [error] batched message propagation "2020-08-06T01:52:46.777" 
01:52:47.127 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:52:47.127" Took=24268 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_52_29_824}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:52:47.127 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",195,195},{"delta_send",195,196},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",394,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_52_29_824}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1032> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_52_29_824}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1033> f(AwMapRes).
ok
(h@16.0.0.18)1034> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:52:47.342"
(h@16.0.0.18)1035> 01:52:48.052 [error] C1 propagation "2020-08-06T01:52:48.521" 
01:52:48.087 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:52:48.087 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,197}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:196 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_52_29_824}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1036> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_52_29_824}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1037> f(AwMapRes).
ok
(h@16.0.0.18)1038> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:52:53.379"
(h@16.0.0.18)1039> 01:52:54.057 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:52:54.568" Took=26024 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_52_35_846}],[],[],[]}}}}] 
01:52:54.057 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",196,196},{"delta_send",196,197},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",396,0},{"sub_cancel",0,0}] 
01:52:55.054 [error] C1 propagation "2020-08-06T01:52:55.542" 
01:52:55.054 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:52:55.054 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,198}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:197 
01:52:56.779 [error] Sending find_sub batch [] 
01:52:56.779 [error] Sending find_sub_aq batch [] 
01:52:56.779 [error] batched message propagation "2020-08-06T01:52:56.779" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)1040> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_52_35_846}],
         [],[],[]}}}}]
(h@16.0.0.18)1041> f(AwMapRes).
ok
(h@16.0.0.18)1042> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:52:59.410"
(h@16.0.0.18)1043> 01:53:01.064 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:53:01.644" Took=27893 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_52_41_865}],[],[],[]}}}}] 
01:53:01.065 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",197,197},{"delta_send",197,198},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",398,0},{"sub_cancel",0,0}] 
01:53:02.055 [error] C1 propagation "2020-08-06T01:53:02.552" 
01:53:02.103 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:53:02.103 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,199}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:198 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)1044> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_52_41_865}],
         [],[],[]}}}}]
(h@16.0.0.18)1045> f(AwMapRes).
ok
(h@16.0.0.18)1046> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:53:05.447"
(h@16.0.0.18)1047> 01:53:06.781 [error] Sending find_sub batch [] 
01:53:06.781 [error] Sending find_sub_aq batch [] 
01:53:06.781 [error] batched message propagation "2020-08-06T01:53:06.781" 
01:53:08.101 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:53:08.101" Took=27627 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_52_53_907}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:53:08.101 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",198,198},{"delta_send",198,199},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",400,0},{"sub_cancel",0,0}] 
01:53:09.056 [error] C1 propagation "2020-08-06T01:53:09.563" 
01:53:09.104 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:53:09.104 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,200}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:199 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_52_53_907}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1048> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_52_53_907}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1049> f(AwMapRes).
ok
(h@16.0.0.18)1050> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:53:11.484"
(h@16.0.0.18)1051> 01:53:15.064 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:53:15.642" Took=28063 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_52_59_927}],[],[],[],[],[],[],[],[],[]}}}}] 
01:53:15.064 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",199,199},{"delta_send",199,200},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",402,0},{"sub_cancel",0,0}] 
01:53:16.057 [error] C1 propagation "2020-08-06T01:53:16.573" 
01:53:16.125 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:53:16.126 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,201}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:200 
01:53:16.531 [error] C2 propagation "2020-08-06T01:53:16.531" 
01:53:16.783 [error] Sending find_sub batch [] 
01:53:16.783 [error] Sending find_sub_aq batch [] 
01:53:16.783 [error] batched message propagation "2020-08-06T01:53:16.783" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_52_59_927}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1052> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_52_59_927}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1053> f(AwMapRes).
ok
(h@16.0.0.18)1054> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:53:17.521"
(h@16.0.0.18)1055> 01:53:22.073 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:53:22.729" Took=32095 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_53_05_951}],[]}}}}] 
01:53:22.074 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",200,200},{"delta_send",200,201},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",404,0},{"sub_cancel",0,0}] 
01:53:23.059 [error] C1 propagation "2020-08-06T01:53:23.591" 
01:53:23.161 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:53:23.161 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,202}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:201 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1056> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)1057> f(AwMapRes).
ok
(h@16.0.0.18)1058> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:53:23.558"
(h@16.0.0.18)1059> 01:53:26.785 [error] Sending find_sub batch [] 
01:53:26.785 [error] Sending find_sub_aq batch [] 
01:53:26.785 [error] batched message propagation "2020-08-06T01:53:26.785" 
01:53:29.089 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:53:29.897" Took=34372 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_53_11_973}],[]}}}}] 
01:53:29.090 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",201,201},{"delta_send",201,202},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",406,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1060> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)1061> f(AwMapRes).
ok
(h@16.0.0.18)1062> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:53:29.603"
(h@16.0.0.18)1063> 01:53:30.061 [error] C1 propagation "2020-08-06T01:53:30.613" 
01:53:30.061 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:53:30.061 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,203}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:202 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1064> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)1065> f(AwMapRes).
ok
(h@16.0.0.18)1066> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:53:35.638"
(h@16.0.0.18)1067> 01:53:36.080 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:53:36.807" Took=41131 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_53_17_997}],[],[],[]}}}}] 
01:53:36.081 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",202,202},{"delta_send",202,203},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",408,0},{"sub_cancel",0,0}] 
01:53:36.384 [error] C3 propagation "2020-08-06T01:53:36.384" 
01:53:36.787 [error] Sending find_sub batch [] 
01:53:36.787 [error] Sending find_sub_aq batch [] 
01:53:36.787 [error] batched message propagation "2020-08-06T01:53:36.787" 
01:53:37.063 [error] C1 propagation "2020-08-06T01:53:37.632" 
01:53:37.102 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:53:37.103 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,204}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:203 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)1068> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_53_17_997}],
         [],[],[]}}}}]
(h@16.0.0.18)1069> f(AwMapRes).
ok
(h@16.0.0.18)1070> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:53:41.675"
(h@16.0.0.18)1071> 01:53:43.084 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:53:43.843" Took=40760 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_53_24_020}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:53:43.084 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",203,203},{"delta_send",203,204},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",410,0},{"sub_cancel",0,0}] 
01:53:44.064 [error] C1 propagation "2020-08-06T01:53:44.642" 
01:53:44.184 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:53:44.185 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,205}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:204 
01:53:46.788 [error] Sending find_sub batch [] 
01:53:46.788 [error] Sending find_sub_aq batch [] 
01:53:46.788 [error] batched message propagation "2020-08-06T01:53:46.788" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_53_24_020}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1072> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_53_24_020}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1073> f(AwMapRes).
ok
(h@16.0.0.18)1074> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:53:47.708"
(h@16.0.0.18)1075> 01:53:50.087 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:53:50.874" Took=38914 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_53_36_063}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:53:50.087 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",204,204},{"delta_send",204,205},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",412,0},{"sub_cancel",0,0}] 
01:53:51.066 [error] C1 propagation "2020-08-06T01:53:51.661" 
01:53:51.082 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:53:51.082 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,206}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:205 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_53_36_063}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1076> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_53_36_063}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1077> f(AwMapRes).
ok
(h@16.0.0.18)1078> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:53:53.744"
(h@16.0.0.18)1079> 01:53:56.532 [error] C2 propagation "2020-08-06T01:53:56.532" 
01:53:56.790 [error] Sending find_sub batch [] 
01:53:56.790 [error] Sending find_sub_aq batch [] 
01:53:56.790 [error] batched message propagation "2020-08-06T01:53:56.790" 
01:53:57.084 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:53:57.838" Took=25319 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_53_42_087}],[],[],[],[],[],[]}}}}] 
01:53:57.084 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",205,205},{"delta_send",205,206},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",414,0},{"sub_cancel",0,0}] 
01:53:58.067 [error] C1 propagation "2020-08-06T01:53:58.672" 
01:53:58.067 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:53:58.067 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,207}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:206 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_53_42_087}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)1080> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_53_42_087}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)1081> f(AwMapRes).
ok
(h@16.0.0.18)1082> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:53:59.776"
(h@16.0.0.18)1083> 01:54:04.089 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:54:04.893" Took=39139 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_53_48_107}],[],[],[],[]}}}}] 
01:54:04.089 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",206,206},{"delta_send",206,207},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",416,0},{"sub_cancel",0,0}] 
01:54:05.068 [error] C1 propagation "2020-08-06T01:54:05.683" 
01:54:05.129 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:54:05.129 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,208}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:207 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_53_48_107}],
             [],[],...}}}}]}
(h@16.0.0.18)1084> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_53_48_107}],
         [],[],[],[]}}}}]
(h@16.0.0.18)1085> f(AwMapRes).
ok
(h@16.0.0.18)1086> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:54:05.809"
(h@16.0.0.18)1087> 01:54:06.792 [error] Sending find_sub batch [] 
01:54:06.792 [error] Sending find_sub_aq batch [] 
01:54:06.792 [error] batched message propagation "2020-08-06T01:54:06.792" 
01:54:11.082 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:54:11.823" Took=34401 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_01_53_54_126}],[],[],[],[],[],[],[],[]}}}}] 
01:54:11.082 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",207,207},{"delta_send",207,208},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",418,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_01_53_54_126}],
             [],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1088> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_01_53_54_126}],
         [],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1089> f(AwMapRes).
ok
(h@16.0.0.18)1090> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:54:11.848"
(h@16.0.0.18)1091> 01:54:12.070 [error] C1 propagation "2020-08-06T01:54:12.702" 
01:54:12.070 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:54:12.070 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,209}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:208 
01:54:16.794 [error] Sending find_sub batch [] 
01:54:16.794 [error] Sending find_sub_aq batch [] 
01:54:16.794 [error] batched message propagation "2020-08-06T01:54:16.794" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],
             [#{what => timeis_01_53_54_126}],
             [],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1092> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],
         [#{what => timeis_01_53_54_126}],
         [],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1093> f(AwMapRes).
ok
(h@16.0.0.18)1094> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:54:17.883"
(h@16.0.0.18)1095> 01:54:18.080 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:54:18.800" Took=28038 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_54_00_147}],[]}}}}] 
01:54:18.080 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",208,208},{"delta_send",208,209},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",420,0},{"sub_cancel",0,0}] 
01:54:19.071 [error] C1 propagation "2020-08-06T01:54:19.712" 
01:54:19.071 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:54:19.071 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,210}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:209 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1096> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[]}}}}]
(h@16.0.0.18)1097> f(AwMapRes).
ok
(h@16.0.0.18)1098> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:54:23.918"
(h@16.0.0.18)1099> 01:54:25.117 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:54:25.117" Took=33952 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_54_06_166}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:54:25.117 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",209,209},{"delta_send",209,210},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",422,0},{"sub_cancel",0,0}] 
01:54:26.072 [error] C1 propagation "2020-08-06T01:54:26.722" 
01:54:26.072 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:54:26.072 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,211}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:210 
01:54:26.796 [error] Sending find_sub batch [] 
01:54:26.796 [error] Sending find_sub_aq batch [] 
01:54:26.796 [error] batched message propagation "2020-08-06T01:54:26.796" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_54_06_166}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1100> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_54_06_166}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1101> f(AwMapRes).
ok
(h@16.0.0.18)1102> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:54:29.955"
(h@16.0.0.18)1103> 01:54:32.118 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:54:32.117" Took=37327 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_54_18_211}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:54:32.118 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",210,210},{"delta_send",210,211},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",424,0},{"sub_cancel",0,0}] 
01:54:33.073 [error] C1 propagation "2020-08-06T01:54:33.732" 
01:54:33.073 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:54:33.073 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,212}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:211 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_54_18_211}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1104> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_54_18_211}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1105> f(AwMapRes).
ok
(h@16.0.0.18)1106> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:54:35.995"
(h@16.0.0.18)1107> 01:54:36.533 [error] C2 propagation "2020-08-06T01:54:36.533" 
01:54:36.798 [error] Sending find_sub batch [] 
01:54:36.798 [error] Sending find_sub_aq batch [] 
01:54:36.798 [error] batched message propagation "2020-08-06T01:54:36.798" 
01:54:39.125 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:54:39.125" Took=41995 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_54_24_232}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:54:39.125 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",211,211},{"delta_send",211,212},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",426,0},{"sub_cancel",0,0}] 
01:54:40.074 [error] C1 propagation "2020-08-06T01:54:40.742" 
01:54:40.074 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:54:40.074 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,213}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:212 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_54_24_232}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1108> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_54_24_232}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1109> f(AwMapRes).
ok
(h@16.0.0.18)1110> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:54:42.289"
(h@16.0.0.18)1111> 01:54:46.110 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:54:46.110" Took=27587 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_54_30_255}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:54:46.111 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",212,212},{"delta_send",212,213},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",428,0},{"sub_cancel",0,0}] 
01:54:46.386 [error] C3 propagation "2020-08-06T01:54:46.386" 
01:54:46.800 [error] Sending find_sub batch [] 
01:54:46.800 [error] Sending find_sub_aq batch [] 
01:54:46.800 [error] batched message propagation "2020-08-06T01:54:46.800" 
01:54:47.075 [error] C1 propagation "2020-08-06T01:54:47.752" 
01:54:47.075 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:54:47.075 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,214}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:213 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_54_30_255}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1112> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_54_30_255}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1113> f(AwMapRes).
ok
(h@16.0.0.18)1114> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:54:48.605"
(h@16.0.0.18)1115> 01:54:53.123 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:54:53.123" Took=36375 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_54_36_283}],[],[],[],[],[],[],[]}}}}] 
01:54:53.123 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",213,213},{"delta_send",213,214},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",430,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_54_36_283}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)1116> 01:54:54.076 [error] C1 propagation "2020-08-06T01:54:54.761" 
AwMapRes.
01:54:54.076 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:54:54.076 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,215}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:214 
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_54_36_283}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1117> f(AwMapRes).
ok
(h@16.0.0.18)1118> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:54:54.293"
(h@16.0.0.18)1119> 01:54:56.802 [error] Sending find_sub batch [] 
01:54:56.802 [error] Sending find_sub_aq batch [] 
01:54:56.802 [error] batched message propagation "2020-08-06T01:54:56.802" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_54_42_303}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)1120> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_54_42_303}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)1121> f(AwMapRes).
ok
(h@16.0.0.18)1122> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:55:00.163"
(h@16.0.0.18)1123> 01:55:00.129 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:55:00.129" Took=35732 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_54_42_303}],[],[],[],[],[],[]}}}}] 
01:55:00.130 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",214,214},{"delta_send",214,215},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",432,0},{"sub_cancel",0,0}] 
01:55:01.078 [error] C1 propagation "2020-08-06T01:55:01.781" 
01:55:01.078 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:55:01.078 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,216}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:215 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_54_42_303}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)1124> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_54_42_303}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)1125> f(AwMapRes).
ok
(h@16.0.0.18)1126> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:55:06.165"
(h@16.0.0.18)1127> 01:55:06.804 [error] Sending find_sub batch [] 
01:55:06.804 [error] Sending find_sub_aq batch [] 
01:55:06.804 [error] batched message propagation "2020-08-06T01:55:06.804" 
01:55:08.079 [error] C1 propagation "2020-08-06T01:55:08.791" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_54_42_303}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)1128> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_54_42_303}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)1129> f(AwMapRes).
ok
(h@16.0.0.18)1130> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:55:12.209"
(h@16.0.0.18)1131> 01:55:14.119 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:55:14.119" Took=25169 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_54_59_963}],[],[],[],[]}}}}] 
01:55:14.121 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",215,215},{"delta_send",215,216},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",434,0},{"sub_cancel",0,0}] 
01:55:15.080 [error] C1 propagation "2020-08-06T01:55:15.803" 
01:55:15.167 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:55:15.167 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,217}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:216 
01:55:16.534 [error] C2 propagation "2020-08-06T01:55:16.534" 
01:55:16.806 [error] Sending find_sub batch [] 
01:55:16.806 [error] Sending find_sub_aq batch [] 
01:55:16.806 [error] batched message propagation "2020-08-06T01:55:16.806" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_54_59_963}],
             [],[],...}}}}]}
(h@16.0.0.18)1132> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_54_59_963}],
         [],[],[],[]}}}}]
(h@16.0.0.18)1133> f(AwMapRes).
ok
(h@16.0.0.18)1134> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:55:18.243"
(h@16.0.0.18)1135> 01:55:21.133 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:55:21.133" Took=38815 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_55_05_983}],[],[],[]}}}}] 
01:55:21.133 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",216,216},{"delta_send",216,217},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",436,0},{"sub_cancel",0,0}] 
01:55:22.081 [error] C1 propagation "2020-08-06T01:55:22.812" 
01:55:22.153 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:55:22.154 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,218}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:217 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[#{...}],[],...}}}}]}
(h@16.0.0.18)1136> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_55_05_983}],
         [],[],[]}}}}]
(h@16.0.0.18)1137> f(AwMapRes).
ok
(h@16.0.0.18)1138> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:55:24.275"
(h@16.0.0.18)1139> 01:55:26.807 [error] Sending find_sub batch [] 
01:55:26.807 [error] Sending find_sub_aq batch [] 
01:55:26.807 [error] batched message propagation "2020-08-06T01:55:26.807" 
01:55:28.122 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:55:28.122" Took=23788 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_55_12_006}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:55:28.123 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",217,217},{"delta_send",217,218},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",438,0},{"sub_cancel",0,0}] 
01:55:29.083 [error] C1 propagation "2020-08-06T01:55:29.833" 
01:55:29.198 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:55:29.198 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,219}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:218 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_55_12_006}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1140> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_55_12_006}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1141> f(AwMapRes).
ok
(h@16.0.0.18)1142> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:55:30.307"
(h@16.0.0.18)1143> 01:55:35.131 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:55:35.131" Took=31544 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_55_18_027}],[],[],[],[],[],[]}}}}] 
01:55:35.131 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",218,218},{"delta_send",218,219},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",440,0},{"sub_cancel",0,0}] 
01:55:36.085 [error] C1 propagation "2020-08-06T01:55:36.852" 
01:55:36.085 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_55_18_027}],
             [],[],[],[],...}}}}]}
(h@16.0.0.18)1144> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_55_18_027}],
         [],[],[],[],[],[]}}}}]
(h@16.0.0.18)1145> f(AwMapRes).
ok
(h@16.0.0.18)1146> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:55:36.340"
(h@16.0.0.18)1147> 01:55:36.085 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,220}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:219 
01:55:36.809 [error] Sending find_sub batch [] 
01:55:36.809 [error] Sending find_sub_aq batch [] 
01:55:36.809 [error] batched message propagation "2020-08-06T01:55:36.809" 
01:55:42.152 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:55:42.152" Took=49816 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_55_24_047}]}}}}] 
01:55:42.153 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",219,219},{"delta_send",219,220},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",442,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1148> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@16.0.0.18)1149> f(AwMapRes).
ok
(h@16.0.0.18)1150> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:55:42.372"
(h@16.0.0.18)1151> 01:55:43.087 [error] C1 propagation "2020-08-06T01:55:43.873" 
01:55:43.088 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:55:43.088 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,221}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:220 
01:55:46.811 [error] Sending find_sub batch [] 
01:55:46.811 [error] Sending find_sub_aq batch [] 
01:55:46.811 [error] batched message propagation "2020-08-06T01:55:46.811" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1152> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@16.0.0.18)1153> f(AwMapRes).
ok
(h@16.0.0.18)1154> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:55:48.405"
(h@16.0.0.18)1155> 01:55:49.126 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:55:49.126" Took=24390 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_55_30_067}],[],[],[],[],[],[],[]}}}}] 
01:55:49.127 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",220,220},{"delta_send",220,221},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",444,0},{"sub_cancel",0,0}] 
01:55:50.088 [error] C1 propagation "2020-08-06T01:55:50.884" 
01:55:50.134 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:55:50.135 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,222}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:221 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],
             [#{what => timeis_01_55_30_067}],
             [],[],[],[],[],...}}}}]}
(h@16.0.0.18)1156> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],
         [#{what => timeis_01_55_30_067}],
         [],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1157> f(AwMapRes).
ok
(h@16.0.0.18)1158> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:55:54.439"
(h@16.0.0.18)1159> 01:55:56.137 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:55:56.137" Took=34288 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_55_42_107}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:55:56.137 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",221,221},{"delta_send",221,222},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",446,0},{"sub_cancel",0,0}] 
01:55:56.388 [error] C3 propagation "2020-08-06T01:55:56.388" 
01:55:56.535 [error] C2 propagation "2020-08-06T01:55:56.535" 
01:55:56.813 [error] Sending find_sub batch [] 
01:55:56.813 [error] Sending find_sub_aq batch [] 
01:55:56.813 [error] batched message propagation "2020-08-06T01:55:56.813" 
01:55:57.090 [error] C1 propagation "2020-08-06T01:55:57.902" 
01:55:57.192 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:55:57.192 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,223}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:222 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_55_42_107}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1160> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_55_42_107}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1161> f(AwMapRes).
ok
(h@16.0.0.18)1162> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:56:00.475"
(h@16.0.0.18)1163> 01:56:03.124 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:56:03.124" Took=23053 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_55_48_131}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:56:03.125 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",222,222},{"delta_send",222,223},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",448,0},{"sub_cancel",0,0}] 
01:56:04.091 [error] C1 propagation "2020-08-06T01:56:04.912" 
01:56:04.209 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:56:04.209 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,224}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:223 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],
             [#{what => timeis_01_55_48_131}],
             [],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1164> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],
         [#{what => timeis_01_55_48_131}],
         [],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1165> f(AwMapRes).
ok
(h@16.0.0.18)1166> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:56:06.514"
(h@16.0.0.18)1167> 01:56:06.815 [error] Sending find_sub batch [] 
01:56:06.815 [error] Sending find_sub_aq batch [] 
01:56:06.815 [error] batched message propagation "2020-08-06T01:56:06.815" 
01:56:10.140 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:56:10.139" Took=37834 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_55_54_154}],[],[],[],[]}}}}] 
01:56:10.140 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",223,223},{"delta_send",223,224},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",450,0},{"sub_cancel",0,0}] 
01:56:11.092 [error] C1 propagation "2020-08-06T01:56:11.923" 
01:56:11.092 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:56:11.092 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,225}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:224 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_55_54_154}],
             [],[],...}}}}]}
(h@16.0.0.18)1168> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_55_54_154}],
         [],[],[],[]}}}}]
(h@16.0.0.18)1169> f(AwMapRes).
ok
(h@16.0.0.18)1170> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:56:12.546"
(h@16.0.0.18)1171> 01:56:16.817 [error] Sending find_sub batch [] 
01:56:16.817 [error] Sending find_sub_aq batch [] 
01:56:16.817 [error] batched message propagation "2020-08-06T01:56:16.817" 
01:56:17.130 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:56:17.130" Took=25080 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_56_00_173}],[],[],[],[],[],[],[],[],[]}}}}] 
01:56:17.130 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",224,224},{"delta_send",224,225},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",452,0},{"sub_cancel",0,0}] 
01:56:18.093 [error] C1 propagation "2020-08-06T01:56:18.932" 
01:56:18.094 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:56:18.094 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,226}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:225 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_56_00_173}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1172> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_56_00_173}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1173> f(AwMapRes).
ok
(h@16.0.0.18)1174> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:56:18.580"
(h@16.0.0.18)1175> 01:56:24.129 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:56:24.129" Took=21619 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_56_06_196}],[],[],[],[],[],[],[],[],[]}}}}] 
01:56:24.130 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",225,225},{"delta_send",225,226},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",454,0},{"sub_cancel",0,0}] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_56_06_196}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1176> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_56_06_196}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1177> f(AwMapRes).
ok
(h@16.0.0.18)1178> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:56:24.617"
(h@16.0.0.18)1179> 01:56:25.094 [error] C1 propagation "2020-08-06T01:56:25.942" 
01:56:25.182 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:56:25.182 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,227}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:226 
01:56:26.819 [error] Sending find_sub batch [] 
01:56:26.819 [error] Sending find_sub_aq batch [] 
01:56:26.819 [error] batched message propagation "2020-08-06T01:56:26.819" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],
             [#{what => timeis_01_56_06_196}],
             [],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1180> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],
         [#{what => timeis_01_56_06_196}],
         [],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1181> f(AwMapRes).
ok
(h@16.0.0.18)1182> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:56:30.652"
(h@16.0.0.18)1183> 01:56:31.148 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:56:31.148" Took=34706 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_56_12_217}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:56:31.149 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",226,226},{"delta_send",226,227},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",456,0},{"sub_cancel",0,0}] 
01:56:32.096 [error] C1 propagation "2020-08-06T01:56:32.963" 
01:56:32.096 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:56:32.096 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,228}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:227 
01:56:36.536 [error] C2 propagation "2020-08-06T01:56:36.536" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[#{what => timeis_01_56_12_217}],
             [],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1184> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[#{what => timeis_01_56_12_217}],
         [],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1185> f(AwMapRes).
ok
(h@16.0.0.18)1186> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:56:36.690"
(h@16.0.0.18)1187> 01:56:36.821 [error] Sending find_sub batch [] 
01:56:36.821 [error] Sending find_sub_aq batch [] 
01:56:36.821 [error] batched message propagation "2020-08-06T01:56:36.821" 
01:56:38.147 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:56:38.147" Took=38746 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_01_56_24_262}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:56:38.148 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",227,227},{"delta_send",227,228},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",458,0},{"sub_cancel",0,0}] 
01:56:39.097 [error] C1 propagation "2020-08-06T01:56:39.973" 
01:56:39.159 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:56:39.160 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,229}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:228 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_01_56_24_262}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1188> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_01_56_24_262}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1189> f(AwMapRes).
ok
(h@16.0.0.18)1190> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:56:42.720"
(h@16.0.0.18)1191> 01:56:45.146 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:56:45.146" Took=36164 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_56_30_283}],[],[],[],[],[]}}}}] 
01:56:45.146 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",228,228},{"delta_send",228,229},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",460,0},{"sub_cancel",0,0}] 
01:56:46.098 [error] C1 propagation "2020-08-06T01:56:46.983" 
01:56:46.098 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:56:46.098 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,230}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:229 
01:56:46.823 [error] Sending find_sub batch [] 
01:56:46.823 [error] Sending find_sub_aq batch [] 
01:56:46.823 [error] batched message propagation "2020-08-06T01:56:46.823" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],
             [#{what => timeis_01_56_30_283}],
             [],[],[],...}}}}]}
(h@16.0.0.18)1192> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],
         [#{what => timeis_01_56_30_283}],
         [],[],[],[],[]}}}}]
(h@16.0.0.18)1193> f(AwMapRes).
ok
(h@16.0.0.18)1194> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:56:48.758"
(h@16.0.0.18)1195> 01:56:52.186 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:56:52.186" Took=29574 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_56_36_305}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:56:52.186 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",229,229},{"delta_send",229,230},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",462,0},{"sub_cancel",0,0}] 
01:56:53.099 [error] C1 propagation "2020-08-06T01:56:53.992" 
01:56:53.099 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:56:53.100 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,231}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:230 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],
             [#{what => timeis_01_56_36_305}],
             [],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1196> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],
         [#{what => timeis_01_56_36_305}],
         [],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1197> f(AwMapRes).
ok
(h@16.0.0.18)1198> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:56:54.793"
(h@16.0.0.18)1199> 01:56:56.825 [error] Sending find_sub batch [] 
01:56:56.825 [error] Sending find_sub_aq batch [] 
01:56:56.825 [error] batched message propagation "2020-08-06T01:56:56.825" 
01:56:59.139 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:56:59.139" Took=24196 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_56_42_330}]}}}}] 
01:56:59.139 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",230,230},{"delta_send",230,231},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",464,0},{"sub_cancel",0,0}] 
01:57:00.101 [error] C1 propagation "2020-08-06T01:57:00.101" 
01:57:00.101 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:57:00.101 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,232}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:231 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1200> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[...]}}}}]
(h@16.0.0.18)1201> f(AwMapRes).
ok
(h@16.0.0.18)1202> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:57:00.829"
(h@16.0.0.18)1203> 01:57:06.165 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:57:06.165" Took=49308 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[#{what => timeis_01_56_48_353}],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:57:06.165 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",231,231},{"delta_send",231,232},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",466,0},{"sub_cancel",0,0}] 
01:57:06.389 [error] C3 propagation "2020-08-06T01:57:06.389" 
01:57:06.827 [error] Sending find_sub batch [] 
01:57:06.827 [error] Sending find_sub_aq batch [] 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
01:57:06.827 [error] batched message propagation "2020-08-06T01:57:06.827" 
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_56_48_353}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1204> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_56_48_353}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1205> f(AwMapRes).
ok
(h@16.0.0.18)1206> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:57:07.222"
(h@16.0.0.18)1207> 01:57:07.103 [error] C1 propagation "2020-08-06T01:57:07.103" 
01:57:07.230 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:57:07.231 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,233}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:232 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],
             [#{what => timeis_01_56_48_353}],
             [],[],[],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1208> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],
         [#{what => timeis_01_56_48_353}],
         [],[],[],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1209> f(AwMapRes).
ok
(h@16.0.0.18)1210> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:57:12.900"
(h@16.0.0.18)1211> 01:57:13.138 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:57:13.138" Took=22323 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_01_56_54_375}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:57:13.138 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",232,232},{"delta_send",232,233},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",468,0},{"sub_cancel",0,0}] 
01:57:14.104 [error] C1 propagation "2020-08-06T01:57:14.104" 
01:57:14.155 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:57:14.155 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,234}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:233 
01:57:16.537 [error] C2 propagation "2020-08-06T01:57:16.537" 
01:57:16.829 [error] Sending find_sub batch [] 
01:57:16.829 [error] Sending find_sub_aq batch [] 
01:57:16.829 [error] batched message propagation "2020-08-06T01:57:16.829" 
{ok, AwMapRes} = lasp:query({<<"awmap">>,{state_awmap,[state_mvregister]}}).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],
             [#{what => timeis_01_56_54_375}],
             [],[],[],[],[],[],[],[],[],...}}}}]}
(h@16.0.0.18)1212> AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],
         [#{what => timeis_01_56_54_375}],
         [],[],[],[],[],[],[],[],[],[],[]}}}}]
(h@16.0.0.18)1213> f(AwMapRes).
ok
(h@16.0.0.18)1214> lasp_delta_based_synchronization_backend:time_stamp().
"2020-08-06T01:57:18.934"
(h@16.0.0.18)1215> 01:57:20.162 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:57:20.162" Took=43823 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_57_06_423}],[],[],[],[],[]}}}}] 
01:57:20.163 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",233,233},{"delta_send",233,234},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",470,0},{"sub_cancel",0,0}] 
01:57:21.105 [error] C1 propagation "2020-08-06T01:57:21.105" 
01:57:21.214 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:57:21.214 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,235}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:234 
01:57:26.831 [error] Sending find_sub batch [] 
01:57:26.831 [error] Sending find_sub_aq batch [] 
01:57:26.831 [error] batched message propagation "2020-08-06T01:57:26.831" 
01:57:27.152 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:57:27.152" Took=34750 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_57_12_447}],[],[],[],[]}}}}] 
01:57:27.152 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",234,234},{"delta_send",234,235},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",472,0},{"sub_cancel",0,0}] 
01:57:28.107 [error] C1 propagation "2020-08-06T01:57:28.107" 
01:57:28.108 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:57:28.108 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,236}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:235 
01:57:34.162 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:57:34.162" Took=43694 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_57_18_468}],[],[],[],[],[],[],[]}}}}] 
01:57:34.163 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",235,235},{"delta_send",235,236},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",474,0},{"sub_cancel",0,0}] 
01:57:35.108 [error] C1 propagation "2020-08-06T01:57:35.108" 
01:57:35.108 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:57:35.108 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,237}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:236 
01:57:36.833 [error] Sending find_sub batch [] 
01:57:36.833 [error] Sending find_sub_aq batch [] 
01:57:36.833 [error] batched message propagation "2020-08-06T01:57:36.833" 
01:57:41.171 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:57:41.170" Took=47207 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[#{what => timeis_01_57_24_487}],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:57:41.171 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",236,236},{"delta_send",236,237},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",476,0},{"sub_cancel",0,0}] 
01:57:42.110 [error] C1 propagation "2020-08-06T01:57:42.110" 
01:57:42.110 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:57:42.110 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,238}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:237 
01:57:46.835 [error] Sending find_sub batch [] 
01:57:46.835 [error] Sending find_sub_aq batch [] 
01:57:46.835 [error] batched message propagation "2020-08-06T01:57:46.835" 
01:57:48.167 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:57:48.166" Took=41298 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_57_30_519}],[],[],[],[],[],[],[]}}}}] 
01:57:48.167 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",237,237},{"delta_send",237,238},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",478,0},{"sub_cancel",0,0}] 
01:57:49.112 [error] C1 propagation "2020-08-06T01:57:49.112" 
01:57:49.112 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:57:49.112 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,239}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:238 
01:57:55.158 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:57:55.157" Took=32990 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_57_36_555}]}}}}] 
01:57:55.158 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",238,238},{"delta_send",238,239},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",480,0},{"sub_cancel",0,0}] 
01:57:56.114 [error] C1 propagation "2020-08-06T01:57:56.114" 
01:57:56.114 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:57:56.114 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,240}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:239 
01:57:56.539 [error] C2 propagation "2020-08-06T01:57:56.539" 
01:57:56.837 [error] Sending find_sub batch [] 
01:57:56.837 [error] Sending find_sub_aq batch [] 
01:57:56.837 [error] batched message propagation "2020-08-06T01:57:56.837" 
01:58:02.159 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:58:02.159" Took=33426 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_57_48_622}],[],[]}}}}] 
01:58:02.160 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",239,239},{"delta_send",239,240},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",482,0},{"sub_cancel",0,0}] 
01:58:03.116 [error] C1 propagation "2020-08-06T01:58:03.116" 
01:58:03.116 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:58:03.116 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,241}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:240 
01:58:06.839 [error] Sending find_sub batch [] 
01:58:06.839 [error] Sending find_sub_aq batch [] 
01:58:06.839 [error] batched message propagation "2020-08-06T01:58:06.839" 
01:58:09.168 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:58:09.168" Took=38002 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_57_54_659}],[],[],[],[],[],[]}}}}] 
01:58:09.168 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",240,240},{"delta_send",240,241},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",484,0},{"sub_cancel",0,0}] 
01:58:10.117 [error] C1 propagation "2020-08-06T01:58:10.117" 
01:58:10.117 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:58:10.117 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,242}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:241 
01:58:16.162 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:58:16.161" Took=24867 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_58_00_695}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:58:16.162 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",241,241},{"delta_send",241,242},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",486,0},{"sub_cancel",0,0}] 
01:58:16.390 [error] C3 propagation "2020-08-06T01:58:16.390" 
01:58:16.841 [error] Sending find_sub batch [] 
01:58:16.841 [error] Sending find_sub_aq batch [] 
01:58:16.841 [error] batched message propagation "2020-08-06T01:58:16.841" 
01:58:17.118 [error] C1 propagation "2020-08-06T01:58:17.118" 
01:58:17.172 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:58:17.172 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,243}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:242 
01:58:23.164 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:58:23.164" Took=33662 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_58_06_731}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:58:23.164 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",242,242},{"delta_send",242,243},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",488,0},{"sub_cancel",0,0}] 
01:58:24.119 [error] C1 propagation "2020-08-06T01:58:24.119" 
01:58:24.119 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:58:24.119 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,244}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:243 
01:58:26.843 [error] Sending find_sub batch [] 
01:58:26.843 [error] Sending find_sub_aq batch [] 
01:58:26.843 [error] batched message propagation "2020-08-06T01:58:26.843" 
01:58:30.167 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:58:30.167" Took=32382 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_58_12_762}]}}}}] 
01:58:30.167 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",243,243},{"delta_send",243,244},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",490,0},{"sub_cancel",0,0}] 
01:58:31.120 [error] C1 propagation "2020-08-06T01:58:31.120" 
01:58:31.120 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:58:31.120 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,245}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:244 
01:58:36.540 [error] C2 propagation "2020-08-06T01:58:36.540" 
01:58:36.845 [error] Sending find_sub batch [] 
01:58:36.845 [error] Sending find_sub_aq batch [] 
01:58:36.845 [error] batched message propagation "2020-08-06T01:58:36.845" 
01:58:37.169 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:58:37.168" Took=22620 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[#{what => timeis_01_58_18_798}],[],[],[],[],[],[],[]}}}}] 
01:58:37.169 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",244,244},{"delta_send",244,245},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",492,0},{"sub_cancel",0,0}] 
01:58:38.121 [error] C1 propagation "2020-08-06T01:58:38.121" 
01:58:38.121 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:58:38.121 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,246}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:245 
01:58:44.171 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:58:44.171" Took=36239 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[#{what => timeis_01_58_24_833}],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:58:44.171 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",245,245},{"delta_send",245,246},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",494,0},{"sub_cancel",0,0}] 
01:58:45.122 [error] C1 propagation "2020-08-06T01:58:45.122" 
01:58:45.122 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:58:45.123 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,247}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:246 
01:58:46.846 [error] Sending find_sub batch [] 
01:58:46.846 [error] Sending find_sub_aq batch [] 
01:58:46.846 [error] batched message propagation "2020-08-06T01:58:46.846" 
01:58:51.180 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:58:51.180" Took=41413 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[#{what => timeis_01_58_36_912}],[],[],[],[],[],[],[],[],[]}}}}] 
01:58:51.181 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",246,246},{"delta_send",246,247},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",496,0},{"sub_cancel",0,0}] 
01:58:52.123 [error] C1 propagation "2020-08-06T01:58:52.123" 
01:58:52.222 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:58:52.222 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,248}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:247 
01:58:56.848 [error] Sending find_sub batch [] 
01:58:56.848 [error] Sending find_sub_aq batch [] 
01:58:56.848 [error] batched message propagation "2020-08-06T01:58:56.848" 
01:58:58.166 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:58:58.166" Took=24269 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_58_42_943}],[],[]}}}}] 
01:58:58.166 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",247,247},{"delta_send",247,248},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",498,0},{"sub_cancel",0,0}] 
01:58:59.125 [error] C1 propagation "2020-08-06T01:58:59.125" 
01:58:59.227 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:58:59.228 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,249}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:248 
01:59:05.167 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:59:05.167" Took=25063 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_01_58_48_979}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:59:05.167 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",248,248},{"delta_send",248,249},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",500,0},{"sub_cancel",0,0}] 
01:59:06.126 [error] C1 propagation "2020-08-06T01:59:06.126" 
01:59:06.181 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:59:06.182 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,250}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:249 
01:59:06.850 [error] Sending find_sub batch [] 
01:59:06.850 [error] Sending find_sub_aq batch [] 
01:59:06.850 [error] batched message propagation "2020-08-06T01:59:06.850" 
01:59:12.175 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:59:12.174" Took=32688 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_58_55_015}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:59:12.175 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",249,249},{"delta_send",249,250},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",502,0},{"sub_cancel",0,0}] 
01:59:13.127 [error] C1 propagation "2020-08-06T01:59:13.127" 
01:59:13.229 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:59:13.229 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,251}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:250 
01:59:16.542 [error] C2 propagation "2020-08-06T01:59:16.542" 
01:59:16.852 [error] Sending find_sub batch [] 
01:59:16.852 [error] Sending find_sub_aq batch [] 
01:59:16.852 [error] batched message propagation "2020-08-06T01:59:16.852" 
01:59:19.178 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:59:19.178" Took=33738 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_01_59_01_046}],[],[],[],[],[],[],[],[]}}}}] 
01:59:19.178 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",250,250},{"delta_send",250,251},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",504,0},{"sub_cancel",0,0}] 
01:59:20.128 [error] C1 propagation "2020-08-06T01:59:20.128" 
01:59:20.128 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:59:20.128 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,252}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:251 
01:59:26.171 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:59:26.171" Took=24776 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_59_07_079}],[]}}}}] 
01:59:26.171 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",251,251},{"delta_send",251,252},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",506,0},{"sub_cancel",0,0}] 
01:59:26.391 [error] C3 propagation "2020-08-06T01:59:26.391" 
01:59:26.853 [error] Sending find_sub batch [] 
01:59:26.853 [error] Sending find_sub_aq batch [] 
01:59:26.853 [error] batched message propagation "2020-08-06T01:59:26.853" 
01:59:27.130 [error] C1 propagation "2020-08-06T01:59:27.130" 
01:59:27.130 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:59:27.130 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,253}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:252 
01:59:33.175 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:59:33.175" Took=27524 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[#{what => timeis_01_59_19_154}],[],[],[],[],[],[]}}}}] 
01:59:33.176 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",252,252},{"delta_send",252,253},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",508,0},{"sub_cancel",0,0}] 
01:59:34.132 [error] C1 propagation "2020-08-06T01:59:34.132" 
01:59:34.132 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:59:34.132 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,254}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:253 
01:59:36.854 [error] Sending find_sub batch [] 
01:59:36.854 [error] Sending find_sub_aq batch [] 
01:59:36.854 [error] batched message propagation "2020-08-06T01:59:36.854" 
01:59:40.185 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:59:40.185" Took=36520 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[#{what => timeis_01_59_25_192}],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:59:40.185 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",253,253},{"delta_send",253,254},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",510,0},{"sub_cancel",0,0}] 
01:59:41.133 [error] C1 propagation "2020-08-06T01:59:41.133" 
01:59:41.133 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:59:41.133 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,255}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:254 
01:59:46.856 [error] Sending find_sub batch [] 
01:59:46.856 [error] Sending find_sub_aq batch [] 
01:59:46.856 [error] batched message propagation "2020-08-06T01:59:46.856" 
01:59:47.182 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:59:47.182" Took=34501 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[#{what => timeis_01_59_31_225}],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:59:47.182 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",254,254},{"delta_send",254,255},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",512,0},{"sub_cancel",0,0}] 
01:59:48.135 [error] C1 propagation "2020-08-06T01:59:48.135" 
01:59:48.135 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:59:48.135 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,256}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:255 
01:59:54.180 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T01:59:54.180" Took=28661 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[#{what => timeis_01_59_37_262}],[],[],[],[],[],[],[],[],[],[],[]}}}}] 
01:59:54.181 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",255,255},{"delta_send",255,256},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",514,0},{"sub_cancel",0,0}] 
01:59:55.137 [error] C1 propagation "2020-08-06T01:59:55.137" 
01:59:55.239 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
01:59:55.240 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,257}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:256 
01:59:56.543 [error] C2 propagation "2020-08-06T01:59:56.543" 
01:59:56.858 [error] Sending find_sub batch [] 
01:59:56.858 [error] Sending find_sub_aq batch [] 
01:59:56.858 [error] batched message propagation "2020-08-06T01:59:56.858" 
02:00:01.199 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T02:00:01.199" Took=26287 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_59_43_301}],[]}}}}] 
02:00:01.202 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",256,256},{"delta_send",256,257},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",516,0},{"sub_cancel",0,0}] 
02:00:02.138 [error] C1 propagation "2020-08-06T02:00:02.138" 
02:00:02.255 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
02:00:02.255 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,258}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:257 
02:00:06.860 [error] Sending find_sub batch [] 
02:00:06.860 [error] Sending find_sub_aq batch [] 
02:00:06.860 [error] batched message propagation "2020-08-06T02:00:06.860" 
02:00:08.190 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T02:00:08.190" Took=34314 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[],[],[],[#{what => timeis_01_59_49_339}],[],[],[],[],[]}}}}] 
02:00:08.190 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",257,257},{"delta_send",257,258},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",518,0},{"sub_cancel",0,0}] 
02:00:09.139 [error] C1 propagation "2020-08-06T02:00:09.139" 
02:00:09.139 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
02:00:09.139 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,259}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:258 
02:00:16.140 [error] C1 propagation "2020-08-06T02:00:16.140" 
02:00:16.862 [error] Sending find_sub batch [] 
02:00:16.862 [error] Sending find_sub_aq batch [] 
02:00:16.862 [error] batched message propagation "2020-08-06T02:00:16.862" 
02:00:17.096 [error] LASPVIN Received delta From='a@16.0.0.11' at TimeStamp="2020-08-06T02:00:17.964" Took=23776 microseconds DeltaVal:[{<<"key1">>,{set,1,16,16,8,80,48,{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},{{[],[],[],[],[],[],[],[#{what => timeis_02_00_00_997}],[],[],[],[],[],[],[],[]}}}}] 
02:00:17.096 [error] Message Counters [{"Message","Tx","Rx"},{"check_tonode",0,0},{"check_tonode_ack",0,0},{"delta_ack",258,258},{"delta_send",258,259},{"find_sub",0,0},{"find_sub_aq",0,0},{"find_sub_aq_lock",0,0},{"rate_ack",1,1},{"rate_class",1,1},{"rate_refresh",0,0},{"rate_subscribe",2,0},{"rate_subscribe_ack",0,2},{"send_backend",520,0},{"sub_cancel",0,0}] 
02:00:23.141 [error] C1 propagation "2020-08-06T02:00:23.141" 
02:00:23.159 [error] LASPVIN Sending delta to 'a@16.0.0.11' 
02:00:23.159 [error] Id: {<<"awmap">>,{state_awmap,[state_mvregister]}} Type: {state_awmap,[state_mvregister]} Metadata: [{clock,[{<<93,84,134,151,152,29,25,153,97,133,129,183,144,190,176,47,72,252,163,155>>,260}]}] Deltas: {state_awmap,{state_mvregister,{[],{[],[]}}}} Counter:259 
02:00:26.864 [error] Sending find_sub batch [] 
02:00:26.864 [error] Sending find_sub_aq batch [] 
02:00:26.864 [error] batched message propagation "2020-08-06T02:00:26.864" 
02:00:30.142 [error] C1 propagation "2020-08-06T02:00:30.142" 
02:00:36.392 [error] C3 propagation "2020-08-06T02:00:36.392" 
02:00:36.545 [error] C2 propagation "2020-08-06T02:00:36.545" 
02:00:36.866 [error] Sending find_sub batch [] 
02:00:36.866 [error] Sending find_sub_aq batch [] 
02:00:36.866 [error] batched message propagation "2020-08-06T02:00:36.866" 
02:00:37.143 [error] C1 propagation "2020-08-06T02:00:37.143" 
02:00:44.144 [error] C1 propagation "2020-08-06T02:00:44.144" 
02:00:46.868 [error] Sending find_sub batch [] 
02:00:46.868 [error] Sending find_sub_aq batch [] 
02:00:46.869 [error] batched message propagation "2020-08-06T02:00:46.868" 
02:00:51.145 [error] C1 propagation "2020-08-06T02:00:51.145" 
02:00:56.870 [error] Sending find_sub batch [] 
02:00:56.870 [error] Sending find_sub_aq batch [] 
02:00:56.870 [error] batched message propagation "2020-08-06T02:00:56.870" 
02:00:58.147 [error] C1 propagation "2020-08-06T02:00:58.147" 
02:01:05.148 [error] C1 propagation "2020-08-06T02:01:05.148" 
02:01:06.872 [error] Sending find_sub batch [] 
02:01:06.872 [error] Sending find_sub_aq batch [] 
02:01:06.872 [error] batched message propagation "2020-08-06T02:01:06.872" 
02:01:12.150 [error] C1 propagation "2020-08-06T02:01:12.150" 
02:01:16.547 [error] C2 propagation "2020-08-06T02:01:16.547" 
02:01:16.874 [error] Sending find_sub batch [] 
02:01:16.874 [error] Sending find_sub_aq batch [] 
02:01:16.874 [error] batched message propagation "2020-08-06T02:01:16.874" 
02:01:19.151 [error] C1 propagation "2020-08-06T02:01:19.151" 
02:01:26.152 [error] C1 propagation "2020-08-06T02:01:26.152" 
02:01:26.876 [error] Sending find_sub batch [] 
02:01:26.876 [error] Sending find_sub_aq batch [] 
02:01:26.876 [error] batched message propagation "2020-08-06T02:01:26.876" 
02:01:33.154 [error] C1 propagation "2020-08-06T02:01:33.154" 
02:01:36.878 [error] Sending find_sub batch [] 
02:01:36.878 [error] Sending find_sub_aq batch [] 
02:01:36.878 [error] batched message propagation "2020-08-06T02:01:36.878" 
02:01:40.155 [error] C1 propagation "2020-08-06T02:01:40.155" 
02:01:46.393 [error] C3 propagation "2020-08-06T02:01:46.393" 
02:01:46.880 [error] Sending find_sub batch [] 
02:01:46.880 [error] Sending find_sub_aq batch [] 
02:01:46.880 [error] batched message propagation "2020-08-06T02:01:46.880" 
02:01:47.156 [error] C1 propagation "2020-08-06T02:01:47.156" 
02:01:54.158 [error] C1 propagation "2020-08-06T02:01:54.158" 
02:01:56.548 [error] C2 propagation "2020-08-06T02:01:56.548" 
02:01:56.882 [error] Sending find_sub batch [] 
02:01:56.882 [error] Sending find_sub_aq batch [] 
02:01:56.882 [error] batched message propagation "2020-08-06T02:01:56.882" 
02:02:01.159 [error] C1 propagation "2020-08-06T02:02:01.159" 
02:02:06.884 [error] Sending find_sub batch [] 
02:02:06.884 [error] Sending find_sub_aq batch [] 
02:02:06.884 [error] batched message propagation "2020-08-06T02:02:06.884" 
02:02:08.160 [error] C1 propagation "2020-08-06T02:02:08.160" 
02:02:15.161 [error] C1 propagation "2020-08-06T02:02:15.161" 
02:02:16.886 [error] Sending find_sub batch [] 
02:02:16.886 [error] Sending find_sub_aq batch [] 
02:02:16.886 [error] batched message propagation "2020-08-06T02:02:16.886" 
02:02:22.162 [error] C1 propagation "2020-08-06T02:02:22.162" 
02:02:26.888 [error] Sending find_sub batch [] 
02:02:26.888 [error] Sending find_sub_aq batch [] 
02:02:26.888 [error] batched message propagation "2020-08-06T02:02:26.888" 
02:02:29.163 [error] C1 propagation "2020-08-06T02:02:29.163" 
02:02:36.164 [error] C1 propagation "2020-08-06T02:02:36.164" 
02:02:36.549 [error] C2 propagation "2020-08-06T02:02:36.549" 
02:02:36.890 [error] Sending find_sub batch [] 
02:02:36.890 [error] Sending find_sub_aq batch [] 
02:02:36.890 [error] batched message propagation "2020-08-06T02:02:36.890" 
02:02:43.165 [error] C1 propagation "2020-08-06T02:02:43.165" 
02:02:46.892 [error] Sending find_sub batch [] 
02:02:46.892 [error] Sending find_sub_aq batch [] 
02:02:46.892 [error] batched message propagation "2020-08-06T02:02:46.892" 
02:02:50.166 [error] C1 propagation "2020-08-06T02:02:50.166" 
02:02:56.394 [error] C3 propagation "2020-08-06T02:02:56.394" 
02:02:56.894 [error] Sending find_sub batch [] 
02:02:56.894 [error] Sending find_sub_aq batch [] 
02:02:56.894 [error] batched message propagation "2020-08-06T02:02:56.894" 
02:02:57.168 [error] C1 propagation "2020-08-06T02:02:57.168" 
02:03:04.169 [error] C1 propagation "2020-08-06T02:03:04.169" 
02:03:06.896 [error] Sending find_sub batch [] 
02:03:06.896 [error] Sending find_sub_aq batch [] 
02:03:06.896 [error] batched message propagation "2020-08-06T02:03:06.896" 
02:03:11.171 [error] C1 propagation "2020-08-06T02:03:11.171" 
02:03:16.551 [error] C2 propagation "2020-08-06T02:03:16.551" 
02:03:16.898 [error] Sending find_sub batch [] 
02:03:16.898 [error] Sending find_sub_aq batch [] 
02:03:16.898 [error] batched message propagation "2020-08-06T02:03:16.898" 
02:03:18.172 [error] C1 propagation "2020-08-06T02:03:18.172" 
02:03:25.173 [error] C1 propagation "2020-08-06T02:03:25.173" 
02:03:26.899 [error] Sending find_sub batch [] 
02:03:26.899 [error] Sending find_sub_aq batch [] 
02:03:26.899 [error] batched message propagation "2020-08-06T02:03:26.899" 
02:03:32.175 [error] C1 propagation "2020-08-06T02:03:32.175" 
02:03:36.901 [error] Sending find_sub batch [] 
02:03:36.901 [error] Sending find_sub_aq batch [] 
02:03:36.901 [error] batched message propagation "2020-08-06T02:03:36.901" 
02:03:39.177 [error] C1 propagation "2020-08-06T02:03:39.177" 
02:03:46.179 [error] C1 propagation "2020-08-06T02:03:46.179" 
02:03:46.903 [error] Sending find_sub batch [] 
02:03:46.903 [error] Sending find_sub_aq batch [] 
02:03:46.903 [error] batched message propagation "2020-08-06T02:03:46.903" 
02:03:53.181 [error] C1 propagation "2020-08-06T02:03:53.181" 
02:03:56.553 [error] C2 propagation "2020-08-06T02:03:56.553" 
02:03:56.905 [error] Sending find_sub batch [] 
02:03:56.905 [error] Sending find_sub_aq batch [] 
02:03:56.905 [error] batched message propagation "2020-08-06T02:03:56.905" 
02:04:00.182 [error] C1 propagation "2020-08-06T02:04:00.182" 
02:04:06.395 [error] C3 propagation "2020-08-06T02:04:06.395" 
02:04:06.907 [error] Sending find_sub batch [] 
02:04:06.907 [error] Sending find_sub_aq batch [] 
02:04:06.907 [error] batched message propagation "2020-08-06T02:04:06.907" 
02:04:07.184 [error] C1 propagation "2020-08-06T02:04:07.184" 
02:04:14.185 [error] C1 propagation "2020-08-06T02:04:14.185" 
02:04:16.909 [error] Sending find_sub batch [] 
02:04:16.909 [error] Sending find_sub_aq batch [] 
02:04:16.909 [error] batched message propagation "2020-08-06T02:04:16.909" 
02:04:21.187 [error] C1 propagation "2020-08-06T02:04:21.187" 
02:04:26.911 [error] Sending find_sub batch [] 
02:04:26.911 [error] Sending find_sub_aq batch [] 
02:04:26.911 [error] batched message propagation "2020-08-06T02:04:26.911" 
02:04:28.188 [error] C1 propagation "2020-08-06T02:04:28.188" 
02:04:35.190 [error] C1 propagation "2020-08-06T02:04:35.190" 
02:04:36.554 [error] C2 propagation "2020-08-06T02:04:36.554" 
02:04:36.913 [error] Sending find_sub batch [] 
02:04:36.913 [error] Sending find_sub_aq batch [] 
02:04:36.913 [error] batched message propagation "2020-08-06T02:04:36.913" 
02:04:42.192 [error] C1 propagation "2020-08-06T02:04:42.192" 
02:04:46.914 [error] Sending find_sub batch [] 
02:04:46.914 [error] Sending find_sub_aq batch [] 
02:04:46.914 [error] batched message propagation "2020-08-06T02:04:46.914" 
02:04:49.194 [error] C1 propagation "2020-08-06T02:04:49.194" 
02:04:56.195 [error] C1 propagation "2020-08-06T02:04:56.195" 
02:04:56.916 [error] Sending find_sub batch [] 
02:04:56.916 [error] Sending find_sub_aq batch [] 
02:04:56.916 [error] batched message propagation "2020-08-06T02:04:56.916" 
02:05:03.196 [error] C1 propagation "2020-08-06T02:05:03.196" 
02:05:06.918 [error] Sending find_sub batch [] 
02:05:06.918 [error] Sending find_sub_aq batch [] 
02:05:06.918 [error] batched message propagation "2020-08-06T02:05:06.918" 
02:05:10.198 [error] C1 propagation "2020-08-06T02:05:10.198" 
02:05:16.396 [error] C3 propagation "2020-08-06T02:05:16.396" 
02:05:16.555 [error] C2 propagation "2020-08-06T02:05:16.555" 
02:05:16.920 [error] Sending find_sub batch [] 
02:05:16.920 [error] Sending find_sub_aq batch [] 
02:05:16.920 [error] batched message propagation "2020-08-06T02:05:16.920" 
02:05:17.199 [error] C1 propagation "2020-08-06T02:05:17.199" 
02:05:24.201 [error] C1 propagation "2020-08-06T02:05:24.201" 
02:05:26.922 [error] Sending find_sub batch [] 
02:05:26.922 [error] Sending find_sub_aq batch [] 
02:05:26.922 [error] batched message propagation "2020-08-06T02:05:26.922" 
02:05:31.202 [error] C1 propagation "2020-08-06T02:05:31.202" 
02:05:36.924 [error] Sending find_sub batch [] 
02:05:36.924 [error] Sending find_sub_aq batch [] 
02:05:36.924 [error] batched message propagation "2020-08-06T02:05:36.924" 
02:05:38.203 [error] C1 propagation "2020-08-06T02:05:38.203" 
02:05:45.205 [error] C1 propagation "2020-08-06T02:05:45.205" 
02:05:46.926 [error] Sending find_sub batch [] 
02:05:46.926 [error] Sending find_sub_aq batch [] 
02:05:46.926 [error] batched message propagation "2020-08-06T02:05:46.926" 
02:05:52.206 [error] C1 propagation "2020-08-06T02:05:52.206" 
02:05:56.556 [error] C2 propagation "2020-08-06T02:05:56.556" 
02:05:56.928 [error] Sending find_sub batch [] 
02:05:56.928 [error] Sending find_sub_aq batch [] 
02:05:56.928 [error] batched message propagation "2020-08-06T02:05:56.928" 
02:05:59.207 [error] C1 propagation "2020-08-06T02:05:59.207" 
02:06:06.208 [error] C1 propagation "2020-08-06T02:06:06.208" 
02:06:06.930 [error] Sending find_sub batch [] 
02:06:06.930 [error] Sending find_sub_aq batch [] 
02:06:06.930 [error] batched message propagation "2020-08-06T02:06:06.930" 
02:06:13.210 [error] C1 propagation "2020-08-06T02:06:13.210" 
02:06:16.932 [error] Sending find_sub batch [] 
02:06:16.932 [error] Sending find_sub_aq batch [] 
02:06:16.932 [error] batched message propagation "2020-08-06T02:06:16.932" 
02:06:20.211 [error] C1 propagation "2020-08-06T02:06:20.211" 
02:06:26.398 [error] C3 propagation "2020-08-06T02:06:26.398" 
02:06:26.934 [error] Sending find_sub batch [] 
02:06:26.934 [error] Sending find_sub_aq batch [] 
02:06:26.934 [error] batched message propagation "2020-08-06T02:06:26.934" 
02:06:27.212 [error] C1 propagation "2020-08-06T02:06:27.212" 
02:06:34.214 [error] C1 propagation "2020-08-06T02:06:34.214" 
02:06:36.557 [error] C2 propagation "2020-08-06T02:06:36.557" 
02:06:36.936 [error] Sending find_sub batch [] 
02:06:36.936 [error] Sending find_sub_aq batch [] 
02:06:36.936 [error] batched message propagation "2020-08-06T02:06:36.936" 
02:06:41.215 [error] C1 propagation "2020-08-06T02:06:41.215" 
02:06:46.938 [error] Sending find_sub batch [] 
02:06:46.938 [error] Sending find_sub_aq batch [] 
02:06:46.938 [error] batched message propagation "2020-08-06T02:06:46.938" 
02:06:48.216 [error] C1 propagation "2020-08-06T02:06:48.216" 
02:06:55.218 [error] C1 propagation "2020-08-06T02:06:55.218" 
02:06:56.939 [error] Sending find_sub batch [] 
02:06:56.939 [error] Sending find_sub_aq batch [] 
02:06:56.939 [error] batched message propagation "2020-08-06T02:06:56.939" 
02:07:02.219 [error] C1 propagation "2020-08-06T02:07:02.219" 
02:07:06.941 [error] Sending find_sub batch [] 
02:07:06.941 [error] Sending find_sub_aq batch [] 
02:07:06.941 [error] batched message propagation "2020-08-06T02:07:06.941" 
02:07:09.220 [error] C1 propagation "2020-08-06T02:07:09.220" 
02:07:16.221 [error] C1 propagation "2020-08-06T02:07:16.221" 
02:07:16.558 [error] C2 propagation "2020-08-06T02:07:16.558" 
02:07:16.943 [error] Sending find_sub batch [] 
02:07:16.943 [error] Sending find_sub_aq batch [] 
02:07:16.943 [error] batched message propagation "2020-08-06T02:07:16.943" 
02:07:23.222 [error] C1 propagation "2020-08-06T02:07:23.222" 
02:07:26.945 [error] Sending find_sub batch [] 
02:07:26.945 [error] Sending find_sub_aq batch [] 
02:07:26.945 [error] batched message propagation "2020-08-06T02:07:26.945" 
02:07:30.223 [error] C1 propagation "2020-08-06T02:07:30.223" 
02:07:36.399 [error] C3 propagation "2020-08-06T02:07:36.399" 
02:07:36.947 [error] Sending find_sub batch [] 
02:07:36.947 [error] Sending find_sub_aq batch [] 
02:07:36.947 [error] batched message propagation "2020-08-06T02:07:36.947" 
02:07:37.224 [error] C1 propagation "2020-08-06T02:07:37.224" 
02:07:44.225 [error] C1 propagation "2020-08-06T02:07:44.225" 
02:07:46.949 [error] Sending find_sub batch [] 
02:07:46.949 [error] Sending find_sub_aq batch [] 
02:07:46.949 [error] batched message propagation "2020-08-06T02:07:46.949" 
02:07:51.227 [error] C1 propagation "2020-08-06T02:07:51.227" 
02:07:56.560 [error] C2 propagation "2020-08-06T02:07:56.560" 
02:07:56.951 [error] Sending find_sub batch [] 
02:07:56.951 [error] Sending find_sub_aq batch [] 
02:07:56.951 [error] batched message propagation "2020-08-06T02:07:56.951" 
02:07:58.228 [error] C1 propagation "2020-08-06T02:07:58.228" 
02:08:05.230 [error] C1 propagation "2020-08-06T02:08:05.230" 
02:08:06.953 [error] Sending find_sub batch [] 
02:08:06.953 [error] Sending find_sub_aq batch [] 
02:08:06.953 [error] batched message propagation "2020-08-06T02:08:06.953" 
02:08:12.232 [error] C1 propagation "2020-08-06T02:08:12.232" 
02:08:16.955 [error] Sending find_sub batch [] 
02:08:16.955 [error] Sending find_sub_aq batch [] 
02:08:16.955 [error] batched message propagation "2020-08-06T02:08:16.955" 
02:08:19.233 [error] C1 propagation "2020-08-06T02:08:19.233" 
02:08:26.234 [error] C1 propagation "2020-08-06T02:08:26.234" 
02:08:26.957 [error] Sending find_sub batch [] 
02:08:26.957 [error] Sending find_sub_aq batch [] 
02:08:26.957 [error] batched message propagation "2020-08-06T02:08:26.957" 
02:08:33.235 [error] C1 propagation "2020-08-06T02:08:33.235" 
02:08:36.561 [error] C2 propagation "2020-08-06T02:08:36.561" 
02:08:36.959 [error] Sending find_sub batch [] 
02:08:36.959 [error] Sending find_sub_aq batch [] 
02:08:36.959 [error] batched message propagation "2020-08-06T02:08:36.959" 
02:08:40.236 [error] C1 propagation "2020-08-06T02:08:40.236" 
02:08:46.400 [error] C3 propagation "2020-08-06T02:08:46.400" 
02:08:46.961 [error] Sending find_sub batch [] 
02:08:46.961 [error] Sending find_sub_aq batch [] 
02:08:46.961 [error] batched message propagation "2020-08-06T02:08:46.961" 
02:08:47.237 [error] C1 propagation "2020-08-06T02:08:47.237" 
02:08:54.238 [error] C1 propagation "2020-08-06T02:08:54.238" 
02:08:56.963 [error] Sending find_sub batch [] 
02:08:56.963 [error] Sending find_sub_aq batch [] 
02:08:56.963 [error] batched message propagation "2020-08-06T02:08:56.963" 
02:09:01.239 [error] C1 propagation "2020-08-06T02:09:01.239" 
02:09:06.965 [error] Sending find_sub batch [] 
02:09:06.965 [error] Sending find_sub_aq batch [] 
02:09:06.965 [error] batched message propagation "2020-08-06T02:09:06.965" 
02:09:08.240 [error] C1 propagation "2020-08-06T02:09:08.240" 
02:09:11.261 [warning] global: 'h@16.0.0.18' failed to connect to 'a@17.0.0.11'
02:09:11.262 [warning] global: 'h@16.0.0.18' failed to connect to 'a@18.0.0.11'
02:09:11.263 [warning] global: 'h@16.0.0.18' failed to connect to 'a@19.0.0.11'
02:09:11.263 [warning] global: 'h@16.0.0.18' failed to connect to 'a@15.0.0.11'
02:09:11.264 [warning] global: 'h@16.0.0.18' failed to connect to 'a@14.0.0.11'
02:09:11.267 [warning] global: 'h@16.0.0.18' failed to connect to 'a@13.0.0.11'
02:09:11.268 [warning] global: 'h@16.0.0.18' failed to connect to 'a@12.0.0.11'
02:09:11.268 [warning] global: 'h@16.0.0.18' failed to connect to 'a@10.0.0.11'
02:09:11.268 [warning] global: 'h@16.0.0.18' failed to connect to 'a@11.0.0.11'
02:09:15.241 [error] C1 propagation "2020-08-06T02:09:15.241" 
02:09:16.563 [error] C2 propagation "2020-08-06T02:09:16.563" 
02:09:16.966 [error] Sending find_sub batch [] 
02:09:16.966 [error] Sending find_sub_aq batch [] 
02:09:16.966 [error] batched message propagation "2020-08-06T02:09:16.966" 
02:09:22.243 [error] C1 propagation "2020-08-06T02:09:22.243" 
02:09:26.968 [error] Sending find_sub batch [] 
02:09:26.968 [error] Sending find_sub_aq batch [] 
02:09:26.968 [error] batched message propagation "2020-08-06T02:09:26.968" 
02:09:29.245 [error] C1 propagation "2020-08-06T02:09:29.245" 
02:09:36.246 [error] C1 propagation "2020-08-06T02:09:36.246" 
02:09:36.970 [error] Sending find_sub batch [] 
02:09:36.970 [error] Sending find_sub_aq batch [] 
02:09:36.970 [error] batched message propagation "2020-08-06T02:09:36.970" 
02:09:43.247 [error] C1 propagation "2020-08-06T02:09:43.247" 
02:09:46.972 [error] Sending find_sub batch [] 
02:09:46.972 [error] Sending find_sub_aq batch [] 
02:09:46.972 [error] batched message propagation "2020-08-06T02:09:46.972" 
02:09:50.248 [error] C1 propagation "2020-08-06T02:09:50.248" 
02:09:56.402 [error] C3 propagation "2020-08-06T02:09:56.402" 
02:09:56.564 [error] C2 propagation "2020-08-06T02:09:56.564" 
02:09:56.973 [error] Sending find_sub batch [] 
02:09:56.973 [error] Sending find_sub_aq batch [] 
02:09:56.973 [error] batched message propagation "2020-08-06T02:09:56.973" 
02:09:57.249 [error] C1 propagation "2020-08-06T02:09:57.249" 
02:10:04.250 [error] C1 propagation "2020-08-06T02:10:04.250" 
02:10:06.975 [error] Sending find_sub batch [] 
02:10:06.975 [error] Sending find_sub_aq batch [] 
02:10:06.975 [error] batched message propagation "2020-08-06T02:10:06.975" 
02:10:11.251 [error] C1 propagation "2020-08-06T02:10:11.251" 
02:10:16.977 [error] Sending find_sub batch [] 
02:10:16.977 [error] Sending find_sub_aq batch [] 
02:10:16.977 [error] batched message propagation "2020-08-06T02:10:16.977" 
02:10:18.253 [error] C1 propagation "2020-08-06T02:10:18.253" 
02:10:25.255 [error] C1 propagation "2020-08-06T02:10:25.255" 
02:10:26.979 [error] Sending find_sub batch [] 
02:10:26.979 [error] Sending find_sub_aq batch [] 
02:10:26.979 [error] batched message propagation "2020-08-06T02:10:26.979" 
02:10:32.256 [error] C1 propagation "2020-08-06T02:10:32.256" 
02:10:36.565 [error] C2 propagation "2020-08-06T02:10:36.565" 
02:10:36.981 [error] Sending find_sub batch [] 
02:10:36.981 [error] Sending find_sub_aq batch [] 
02:10:36.981 [error] batched message propagation "2020-08-06T02:10:36.981" 
02:10:39.258 [error] C1 propagation "2020-08-06T02:10:39.258" 
02:10:46.260 [error] C1 propagation "2020-08-06T02:10:46.260" 
02:10:46.983 [error] Sending find_sub batch [] 
02:10:46.983 [error] Sending find_sub_aq batch [] 
02:10:46.983 [error] batched message propagation "2020-08-06T02:10:46.983" 
02:10:53.262 [error] C1 propagation "2020-08-06T02:10:53.262" 
02:10:56.985 [error] Sending find_sub batch [] 
02:10:56.985 [error] Sending find_sub_aq batch [] 
02:10:56.985 [error] batched message propagation "2020-08-06T02:10:56.985" 
02:11:00.263 [error] C1 propagation "2020-08-06T02:11:00.263" 
02:11:06.403 [error] C3 propagation "2020-08-06T02:11:06.403" 
02:11:06.987 [error] Sending find_sub batch [] 
02:11:06.987 [error] Sending find_sub_aq batch [] 
02:11:06.987 [error] batched message propagation "2020-08-06T02:11:06.987" 
02:11:07.265 [error] C1 propagation "2020-08-06T02:11:07.265" 
02:11:14.267 [error] C1 propagation "2020-08-06T02:11:14.267" 
02:11:16.566 [error] C2 propagation "2020-08-06T02:11:16.566" 
02:11:16.988 [error] Sending find_sub batch [] 
02:11:16.988 [error] Sending find_sub_aq batch [] 
02:11:16.988 [error] batched message propagation "2020-08-06T02:11:16.988" 
02:11:21.269 [error] C1 propagation "2020-08-06T02:11:21.269" 
02:11:26.990 [error] Sending find_sub batch [] 
02:11:26.990 [error] Sending find_sub_aq batch [] 
02:11:26.990 [error] batched message propagation "2020-08-06T02:11:26.990" 
02:11:28.270 [error] C1 propagation "2020-08-06T02:11:28.270" 
02:11:35.271 [error] C1 propagation "2020-08-06T02:11:35.271" 
02:11:36.991 [error] Sending find_sub batch [] 
02:11:36.991 [error] Sending find_sub_aq batch [] 
02:11:36.991 [error] batched message propagation "2020-08-06T02:11:36.991" 
02:11:42.273 [error] C1 propagation "2020-08-06T02:11:42.273" 
02:11:46.993 [error] Sending find_sub batch [] 
02:11:46.993 [error] Sending find_sub_aq batch [] 
02:11:46.993 [error] batched message propagation "2020-08-06T02:11:46.993" 
02:11:49.274 [error] C1 propagation "2020-08-06T02:11:49.274" 
02:11:56.275 [error] C1 propagation "2020-08-06T02:11:56.275" 
02:11:56.567 [error] C2 propagation "2020-08-06T02:11:56.567" 
02:11:56.995 [error] Sending find_sub batch [] 
02:11:56.995 [error] Sending find_sub_aq batch [] 
02:11:56.995 [error] batched message propagation "2020-08-06T02:11:56.995" 
02:12:03.276 [error] C1 propagation "2020-08-06T02:12:03.276" 
02:12:06.997 [error] Sending find_sub batch [] 
02:12:06.997 [error] Sending find_sub_aq batch [] 
02:12:06.997 [error] batched message propagation "2020-08-06T02:12:06.997" 
02:12:10.278 [error] C1 propagation "2020-08-06T02:12:10.278" 
02:12:16.405 [error] C3 propagation "2020-08-06T02:12:16.405" 
02:12:16.999 [error] Sending find_sub batch [] 
02:12:16.999 [error] Sending find_sub_aq batch [] 
02:12:16.999 [error] batched message propagation "2020-08-06T02:12:16.999" 
02:12:17.279 [error] C1 propagation "2020-08-06T02:12:17.279" 
02:12:24.281 [error] C1 propagation "2020-08-06T02:12:24.281" 
02:12:27.001 [error] Sending find_sub batch [] 
02:12:27.001 [error] Sending find_sub_aq batch [] 
02:12:27.001 [error] batched message propagation "2020-08-06T02:12:27.148" 
02:12:31.282 [error] C1 propagation "2020-08-06T02:12:31.282" 
02:12:36.568 [error] C2 propagation "2020-08-06T02:12:36.568" 
02:12:37.003 [error] Sending find_sub batch [] 
02:12:37.003 [error] Sending find_sub_aq batch [] 
02:12:37.003 [error] batched message propagation "2020-08-06T02:12:37.332" 
02:12:38.284 [error] C1 propagation "2020-08-06T02:12:38.284" 
02:12:45.286 [error] C1 propagation "2020-08-06T02:12:45.286" 
02:12:47.005 [error] Sending find_sub batch [] 
02:12:47.005 [error] Sending find_sub_aq batch [] 
02:12:47.005 [error] batched message propagation "2020-08-06T02:12:47.539" 
02:12:52.287 [error] C1 propagation "2020-08-06T02:12:52.287" 
02:12:57.007 [error] Sending find_sub batch [] 
02:12:57.007 [error] Sending find_sub_aq batch [] 
02:12:57.007 [error] batched message propagation "2020-08-06T02:12:57.739" 
02:12:59.289 [error] C1 propagation "2020-08-06T02:12:59.289" 
02:13:06.290 [error] C1 propagation "2020-08-06T02:13:06.290" 
02:13:07.009 [error] Sending find_sub batch [] 
02:13:07.009 [error] Sending find_sub_aq batch [] 
02:13:07.009 [error] batched message propagation "2020-08-06T02:13:07.934" 
02:13:13.291 [error] C1 propagation "2020-08-06T02:13:13.291" 
02:13:16.569 [error] C2 propagation "2020-08-06T02:13:16.569" 
02:13:17.011 [error] Sending find_sub batch [] 
02:13:17.011 [error] Sending find_sub_aq batch [] 
02:13:17.011 [error] batched message propagation "2020-08-06T02:13:17.114" 
02:13:20.292 [error] C1 propagation "2020-08-06T02:13:20.292" 
02:13:26.407 [error] C3 propagation "2020-08-06T02:13:26.407" 
02:13:27.013 [error] Sending find_sub batch [] 
02:13:27.013 [error] Sending find_sub_aq batch [] 
02:13:27.013 [error] batched message propagation "2020-08-06T02:13:27.133" 
02:13:27.294 [error] C1 propagation "2020-08-06T02:13:27.294" 
02:13:34.295 [error] C1 propagation "2020-08-06T02:13:34.295" 
02:13:37.015 [error] Sending find_sub batch [] 
02:13:37.015 [error] Sending find_sub_aq batch [] 
02:13:37.015 [error] batched message propagation "2020-08-06T02:13:37.153" 
02:13:41.296 [error] C1 propagation "2020-08-06T02:13:41.296" 
02:13:47.016 [error] Sending find_sub batch [] 
02:13:47.016 [error] Sending find_sub_aq batch [] 
02:13:47.016 [error] batched message propagation "2020-08-06T02:13:47.163" 
02:13:48.297 [error] C1 propagation "2020-08-06T02:13:48.297" 
02:13:55.298 [error] C1 propagation "2020-08-06T02:13:55.298" 
02:13:56.571 [error] C2 propagation "2020-08-06T02:13:56.571" 
02:13:57.018 [error] Sending find_sub batch [] 
02:13:57.018 [error] Sending find_sub_aq batch [] 
02:13:57.018 [error] batched message propagation "2020-08-06T02:13:57.182" 
02:14:02.299 [error] C1 propagation "2020-08-06T02:14:02.299" 
02:14:07.020 [error] Sending find_sub batch [] 
02:14:07.020 [error] Sending find_sub_aq batch [] 
02:14:07.020 [error] batched message propagation "2020-08-06T02:14:07.203" 
02:14:09.300 [error] C1 propagation "2020-08-06T02:14:09.300" 
02:14:16.301 [error] C1 propagation "2020-08-06T02:14:16.301" 
02:14:17.022 [error] Sending find_sub batch [] 
02:14:17.022 [error] Sending find_sub_aq batch [] 
02:14:17.022 [error] batched message propagation "2020-08-06T02:14:17.224" 
02:14:23.302 [error] C1 propagation "2020-08-06T02:14:23.302" 
02:14:27.024 [error] Sending find_sub batch [] 
02:14:27.024 [error] Sending find_sub_aq batch [] 
02:14:27.024 [error] batched message propagation "2020-08-06T02:14:27.243" 
02:14:30.303 [error] C1 propagation "2020-08-06T02:14:30.303" 
02:14:36.409 [error] C3 propagation "2020-08-06T02:14:36.409" 
02:14:36.572 [error] C2 propagation "2020-08-06T02:14:36.572" 
02:14:37.026 [error] Sending find_sub batch [] 
02:14:37.026 [error] Sending find_sub_aq batch [] 
02:14:37.026 [error] batched message propagation "2020-08-06T02:14:37.263" 
02:14:37.304 [error] C1 propagation "2020-08-06T02:14:37.304" 
02:14:44.305 [error] C1 propagation "2020-08-06T02:14:44.305" 
02:14:47.027 [error] Sending find_sub batch [] 
02:14:47.027 [error] Sending find_sub_aq batch [] 
02:14:47.027 [error] batched message propagation "2020-08-06T02:14:47.273" 
02:14:51.306 [error] C1 propagation "2020-08-06T02:14:51.306" 
02:14:57.028 [error] Sending find_sub batch [] 
02:14:57.028 [error] Sending find_sub_aq batch [] 
02:14:57.028 [error] batched message propagation "2020-08-06T02:14:57.284" 
02:14:58.307 [error] C1 propagation "2020-08-06T02:14:58.307" 
02:15:05.308 [error] C1 propagation "2020-08-06T02:15:05.308" 
02:15:07.030 [error] Sending find_sub batch [] 
02:15:07.030 [error] Sending find_sub_aq batch [] 
02:15:07.030 [error] batched message propagation "2020-08-06T02:15:07.303" 
02:15:12.309 [error] C1 propagation "2020-08-06T02:15:12.309" 
02:15:16.573 [error] C2 propagation "2020-08-06T02:15:16.573" 
02:15:17.031 [error] Sending find_sub batch [] 
02:15:17.031 [error] Sending find_sub_aq batch [] 
02:15:17.031 [error] batched message propagation "2020-08-06T02:15:17.312" 
02:15:19.311 [error] C1 propagation "2020-08-06T02:15:19.311" 
02:15:26.313 [error] C1 propagation "2020-08-06T02:15:26.313" 
02:15:27.032 [error] Sending find_sub batch [] 
02:15:27.032 [error] Sending find_sub_aq batch [] 
02:15:27.032 [error] batched message propagation "2020-08-06T02:15:27.323" 
02:15:33.315 [error] C1 propagation "2020-08-06T02:15:33.315" 
02:15:37.034 [error] Sending find_sub batch [] 
02:15:37.034 [error] Sending find_sub_aq batch [] 
02:15:37.034 [error] batched message propagation "2020-08-06T02:15:37.342" 
02:15:40.316 [error] C1 propagation "2020-08-06T02:15:40.316" 
02:15:46.410 [error] C3 propagation "2020-08-06T02:15:46.410" 
02:15:47.035 [error] Sending find_sub batch [] 
02:15:47.035 [error] Sending find_sub_aq batch [] 
02:15:47.035 [error] batched message propagation "2020-08-06T02:15:47.352" 
02:15:47.317 [error] C1 propagation "2020-08-06T02:15:47.317" 
02:15:54.318 [error] C1 propagation "2020-08-06T02:15:54.318" 
02:15:56.574 [error] C2 propagation "2020-08-06T02:15:56.574" 
02:15:57.036 [error] Sending find_sub batch [] 
02:15:57.036 [error] Sending find_sub_aq batch [] 
02:15:57.036 [error] batched message propagation "2020-08-06T02:15:57.363" 
02:16:01.319 [error] C1 propagation "2020-08-06T02:16:01.319" 
02:16:07.038 [error] Sending find_sub batch [] 
02:16:07.038 [error] Sending find_sub_aq batch [] 
02:16:07.038 [error] batched message propagation "2020-08-06T02:16:07.382" 
02:16:08.321 [error] C1 propagation "2020-08-06T02:16:08.321" 
02:16:15.322 [error] C1 propagation "2020-08-06T02:16:15.322" 
02:16:17.039 [error] Sending find_sub batch [] 
02:16:17.039 [error] Sending find_sub_aq batch [] 
02:16:17.039 [error] batched message propagation "2020-08-06T02:16:17.394" 
02:16:22.324 [error] C1 propagation "2020-08-06T02:16:22.324" 
02:16:27.041 [error] Sending find_sub batch [] 
02:16:27.041 [error] Sending find_sub_aq batch [] 
02:16:27.041 [error] batched message propagation "2020-08-06T02:16:27.414" 
02:16:29.325 [error] C1 propagation "2020-08-06T02:16:29.325" 
02:16:36.326 [error] C1 propagation "2020-08-06T02:16:36.326" 
02:16:36.576 [error] C2 propagation "2020-08-06T02:16:36.576" 
02:16:37.043 [error] Sending find_sub batch [] 
02:16:37.043 [error] Sending find_sub_aq batch [] 
02:16:37.043 [error] batched message propagation "2020-08-06T02:16:37.432" 
02:16:43.327 [error] C1 propagation "2020-08-06T02:16:43.327" 
02:16:47.044 [error] Sending find_sub batch [] 
02:16:47.044 [error] Sending find_sub_aq batch [] 
02:16:47.044 [error] batched message propagation "2020-08-06T02:16:47.444" 
02:16:50.328 [error] C1 propagation "2020-08-06T02:16:50.328" 
02:16:56.411 [error] C3 propagation "2020-08-06T02:16:56.411" 
02:16:57.045 [error] Sending find_sub batch [] 
02:16:57.045 [error] Sending find_sub_aq batch [] 
02:16:57.045 [error] batched message propagation "2020-08-06T02:16:57.453" 
02:16:57.329 [error] C1 propagation "2020-08-06T02:16:57.329" 
02:17:04.331 [error] C1 propagation "2020-08-06T02:17:04.331" 
02:17:07.047 [error] Sending find_sub batch [] 
02:17:07.047 [error] Sending find_sub_aq batch [] 
02:17:07.047 [error] batched message propagation "2020-08-06T02:17:07.472" 
02:17:11.332 [error] C1 propagation "2020-08-06T02:17:11.332" 
02:17:16.577 [error] C2 propagation "2020-08-06T02:17:16.577" 
02:17:17.048 [error] Sending find_sub batch [] 
02:17:17.048 [error] Sending find_sub_aq batch [] 
02:17:17.048 [error] batched message propagation "2020-08-06T02:17:17.484" 
02:17:18.334 [error] C1 propagation "2020-08-06T02:17:18.334" 
02:17:25.335 [error] C1 propagation "2020-08-06T02:17:25.335" 
02:17:27.050 [error] Sending find_sub batch [] 
02:17:27.050 [error] Sending find_sub_aq batch [] 
02:17:27.050 [error] batched message propagation "2020-08-06T02:17:27.504" 
02:17:32.336 [error] C1 propagation "2020-08-06T02:17:32.336" 
02:17:37.052 [error] Sending find_sub batch [] 
02:17:37.052 [error] Sending find_sub_aq batch [] 
02:17:37.052 [error] batched message propagation "2020-08-06T02:17:37.524" 
02:17:39.337 [error] C1 propagation "2020-08-06T02:17:39.337" 
02:17:46.338 [error] C1 propagation "2020-08-06T02:17:46.338" 
02:17:47.054 [error] Sending find_sub batch [] 
02:17:47.054 [error] Sending find_sub_aq batch [] 
02:17:47.054 [error] batched message propagation "2020-08-06T02:17:47.543" 
02:17:53.340 [error] C1 propagation "2020-08-06T02:17:53.340" 
02:17:56.578 [error] C2 propagation "2020-08-06T02:17:56.578" 
02:17:57.056 [error] Sending find_sub batch [] 
02:17:57.056 [error] Sending find_sub_aq batch [] 
02:17:57.056 [error] batched message propagation "2020-08-06T02:17:57.565" 
02:18:00.341 [error] C1 propagation "2020-08-06T02:18:00.341" 
02:18:06.413 [error] C3 propagation "2020-08-06T02:18:06.413" 
02:18:07.058 [error] Sending find_sub batch [] 
02:18:07.058 [error] Sending find_sub_aq batch [] 
02:18:07.058 [error] batched message propagation "2020-08-06T02:18:07.583" 
02:18:07.343 [error] C1 propagation "2020-08-06T02:18:07.343" 
02:18:14.345 [error] C1 propagation "2020-08-06T02:18:14.345" 
02:18:17.060 [error] Sending find_sub batch [] 
02:18:17.060 [error] Sending find_sub_aq batch [] 
02:18:17.060 [error] batched message propagation "2020-08-06T02:18:17.604" 
02:18:21.346 [error] C1 propagation "2020-08-06T02:18:21.346" 
02:18:27.062 [error] Sending find_sub batch [] 
02:18:27.062 [error] Sending find_sub_aq batch [] 
02:18:27.062 [error] batched message propagation "2020-08-06T02:18:27.624" 
02:18:28.347 [error] C1 propagation "2020-08-06T02:18:28.347" 
02:18:35.348 [error] C1 propagation "2020-08-06T02:18:35.348" 
02:18:36.579 [error] C2 propagation "2020-08-06T02:18:36.579" 
02:18:37.064 [error] Sending find_sub batch [] 
02:18:37.064 [error] Sending find_sub_aq batch [] 
02:18:37.064 [error] batched message propagation "2020-08-06T02:18:37.642" 
02:18:42.349 [error] C1 propagation "2020-08-06T02:18:42.349" 
02:18:47.066 [error] Sending find_sub batch [] 
02:18:47.066 [error] Sending find_sub_aq batch [] 
02:18:47.066 [error] batched message propagation "2020-08-06T02:18:47.664" 
02:18:49.350 [error] C1 propagation "2020-08-06T02:18:49.350" 
02:18:56.351 [error] C1 propagation "2020-08-06T02:18:56.351" 
02:18:57.067 [error] Sending find_sub batch [] 
02:18:57.067 [error] Sending find_sub_aq batch [] 
02:18:57.067 [error] batched message propagation "2020-08-06T02:18:57.674" 
02:19:03.352 [error] C1 propagation "2020-08-06T02:19:03.352" 
02:19:07.069 [error] Sending find_sub batch [] 
02:19:07.069 [error] Sending find_sub_aq batch [] 
02:19:07.069 [error] batched message propagation "2020-08-06T02:19:07.692" 
02:19:10.353 [error] C1 propagation "2020-08-06T02:19:10.353" 
02:19:16.414 [error] C3 propagation "2020-08-06T02:19:16.414" 
02:19:16.580 [error] C2 propagation "2020-08-06T02:19:16.580" 
02:19:17.071 [error] Sending find_sub batch [] 
02:19:17.071 [error] Sending find_sub_aq batch [] 
02:19:17.071 [error] batched message propagation "2020-08-06T02:19:17.714" 
02:19:17.354 [error] C1 propagation "2020-08-06T02:19:17.354" 
02:19:24.355 [error] C1 propagation "2020-08-06T02:19:24.355" 
02:19:27.073 [error] Sending find_sub batch [] 
02:19:27.073 [error] Sending find_sub_aq batch [] 
02:19:27.073 [error] batched message propagation "2020-08-06T02:19:27.734" 
02:19:31.356 [error] C1 propagation "2020-08-06T02:19:31.356" 
02:19:37.075 [error] Sending find_sub batch [] 
02:19:37.075 [error] Sending find_sub_aq batch [] 
02:19:37.075 [error] batched message propagation "2020-08-06T02:19:37.752" 
02:19:38.357 [error] C1 propagation "2020-08-06T02:19:38.357" 
02:19:45.358 [error] C1 propagation "2020-08-06T02:19:45.358" 
02:19:47.077 [error] Sending find_sub batch [] 
02:19:47.077 [error] Sending find_sub_aq batch [] 
02:19:47.077 [error] batched message propagation "2020-08-06T02:19:47.772" 
02:19:52.359 [error] C1 propagation "2020-08-06T02:19:52.359" 
02:19:56.581 [error] C2 propagation "2020-08-06T02:19:56.581" 
02:19:57.079 [error] Sending find_sub batch [] 
02:19:57.079 [error] Sending find_sub_aq batch [] 
02:19:57.079 [error] batched message propagation "2020-08-06T02:19:57.794" 
02:19:59.360 [error] C1 propagation "2020-08-06T02:19:59.360" 
02:20:06.362 [error] C1 propagation "2020-08-06T02:20:06.362" 
02:20:07.081 [error] Sending find_sub batch [] 
02:20:07.081 [error] Sending find_sub_aq batch [] 
02:20:07.081 [error] batched message propagation "2020-08-06T02:20:07.813" 
02:20:13.364 [error] C1 propagation "2020-08-06T02:20:13.364" 
02:20:17.083 [error] Sending find_sub batch [] 
02:20:17.083 [error] Sending find_sub_aq batch [] 
02:20:17.083 [error] batched message propagation "2020-08-06T02:20:17.834" 
02:20:20.365 [error] C1 propagation "2020-08-06T02:20:20.365" 
02:20:26.415 [error] C3 propagation "2020-08-06T02:20:26.415" 
02:20:27.085 [error] Sending find_sub batch [] 
02:20:27.085 [error] Sending find_sub_aq batch [] 
02:20:27.085 [error] batched message propagation "2020-08-06T02:20:27.855" 
02:20:27.366 [error] C1 propagation "2020-08-06T02:20:27.366" 
02:20:34.367 [error] C1 propagation "2020-08-06T02:20:34.367" 
02:20:36.583 [error] C2 propagation "2020-08-06T02:20:36.583" 
02:20:37.087 [error] Sending find_sub batch [] 
02:20:37.087 [error] Sending find_sub_aq batch [] 
02:20:37.087 [error] batched message propagation "2020-08-06T02:20:37.873" 
02:20:41.368 [error] C1 propagation "2020-08-06T02:20:41.368" 
02:20:47.088 [error] Sending find_sub batch [] 
02:20:47.088 [error] Sending find_sub_aq batch [] 
02:20:47.088 [error] batched message propagation "2020-08-06T02:20:47.884" 
02:20:48.369 [error] C1 propagation "2020-08-06T02:20:48.369" 
02:20:55.371 [error] C1 propagation "2020-08-06T02:20:55.371" 
02:20:57.090 [error] Sending find_sub batch [] 
02:20:57.090 [error] Sending find_sub_aq batch [] 
02:20:57.090 [error] batched message propagation "2020-08-06T02:20:57.904" 
02:21:02.373 [error] C1 propagation "2020-08-06T02:21:02.373" 
02:21:07.092 [error] Sending find_sub batch [] 
02:21:07.092 [error] Sending find_sub_aq batch [] 
02:21:07.092 [error] batched message propagation "2020-08-06T02:21:07.924" 
02:21:09.375 [error] C1 propagation "2020-08-06T02:21:09.375" 
02:21:16.376 [error] C1 propagation "2020-08-06T02:21:16.376" 
02:21:16.584 [error] C2 propagation "2020-08-06T02:21:16.584" 
02:21:17.093 [error] Sending find_sub batch [] 
02:21:17.093 [error] Sending find_sub_aq batch [] 
02:21:17.093 [error] batched message propagation "2020-08-06T02:21:17.934" 
02:21:23.377 [error] C1 propagation "2020-08-06T02:21:23.377" 
02:21:27.094 [error] Sending find_sub batch [] 
02:21:27.094 [error] Sending find_sub_aq batch [] 
02:21:27.094 [error] batched message propagation "2020-08-06T02:21:27.943" 
02:21:30.378 [error] C1 propagation "2020-08-06T02:21:30.378" 
02:21:36.416 [error] C3 propagation "2020-08-06T02:21:36.416" 
02:21:37.095 [error] Sending find_sub batch [] 
02:21:37.095 [error] Sending find_sub_aq batch [] 
02:21:37.095 [error] batched message propagation "2020-08-06T02:21:37.953" 
02:21:37.380 [error] C1 propagation "2020-08-06T02:21:37.380" 
02:21:44.382 [error] C1 propagation "2020-08-06T02:21:44.382" 
02:21:47.097 [error] Sending find_sub batch [] 
02:21:47.097 [error] Sending find_sub_aq batch [] 
02:21:47.097 [error] batched message propagation "2020-08-06T02:21:47.973" 
02:21:51.383 [error] C1 propagation "2020-08-06T02:21:51.383" 
02:21:56.586 [error] C2 propagation "2020-08-06T02:21:56.586" 
02:21:57.098 [error] Sending find_sub batch [] 
02:21:57.098 [error] Sending find_sub_aq batch [] 
02:21:57.098 [error] batched message propagation "2020-08-06T02:21:57.984" 
02:21:58.384 [error] C1 propagation "2020-08-06T02:21:58.384" 
02:22:05.385 [error] C1 propagation "2020-08-06T02:22:05.385" 
02:22:07.099 [error] Sending find_sub batch [] 
02:22:07.099 [error] Sending find_sub_aq batch [] 
02:22:07.099 [error] batched message propagation "2020-08-06T02:22:07.993" 
02:22:12.387 [error] C1 propagation "2020-08-06T02:22:12.387" 
02:22:17.100 [error] Sending find_sub batch [] 
02:22:17.100 [error] Sending find_sub_aq batch [] 
02:22:17.100 [error] batched message propagation "2020-08-06T02:22:17.100" 
02:22:19.389 [error] C1 propagation "2020-08-06T02:22:19.389" 
02:22:26.391 [error] C1 propagation "2020-08-06T02:22:26.391" 
02:22:27.101 [error] Sending find_sub batch [] 
02:22:27.101 [error] Sending find_sub_aq batch [] 
02:22:27.101 [error] batched message propagation "2020-08-06T02:22:27.101" 
02:22:33.393 [error] C1 propagation "2020-08-06T02:22:33.393" 
02:22:36.588 [error] C2 propagation "2020-08-06T02:22:36.588" 
02:22:37.102 [error] Sending find_sub batch [] 
02:22:37.102 [error] Sending find_sub_aq batch [] 
02:22:37.102 [error] batched message propagation "2020-08-06T02:22:37.102" 
02:22:40.394 [error] C1 propagation "2020-08-06T02:22:40.394" 
02:22:46.417 [error] C3 propagation "2020-08-06T02:22:46.417" 
02:22:47.103 [error] Sending find_sub batch [] 
02:22:47.103 [error] Sending find_sub_aq batch [] 
02:22:47.103 [error] batched message propagation "2020-08-06T02:22:47.103" 
02:22:47.395 [error] C1 propagation "2020-08-06T02:22:47.395" 
02:22:54.397 [error] C1 propagation "2020-08-06T02:22:54.397" 
02:22:57.104 [error] Sending find_sub batch [] 
02:22:57.104 [error] Sending find_sub_aq batch [] 
02:22:57.104 [error] batched message propagation "2020-08-06T02:22:57.104" 
02:23:01.399 [error] C1 propagation "2020-08-06T02:23:01.399" 
02:23:07.106 [error] Sending find_sub batch [] 
02:23:07.106 [error] Sending find_sub_aq batch [] 
02:23:07.106 [error] batched message propagation "2020-08-06T02:23:07.106" 
02:23:08.401 [error] C1 propagation "2020-08-06T02:23:08.401" 
02:23:15.403 [error] C1 propagation "2020-08-06T02:23:15.403" 
02:23:16.589 [error] C2 propagation "2020-08-06T02:23:16.589" 
02:23:17.107 [error] Sending find_sub batch [] 
02:23:17.107 [error] Sending find_sub_aq batch [] 
02:23:17.107 [error] batched message propagation "2020-08-06T02:23:17.107" 
02:23:22.405 [error] C1 propagation "2020-08-06T02:23:22.405" 
02:23:27.108 [error] Sending find_sub batch [] 
02:23:27.108 [error] Sending find_sub_aq batch [] 
02:23:27.108 [error] batched message propagation "2020-08-06T02:23:27.108" 
02:23:29.406 [error] C1 propagation "2020-08-06T02:23:29.406" 
02:23:36.408 [error] C1 propagation "2020-08-06T02:23:36.408" 
02:23:37.109 [error] Sending find_sub batch [] 
02:23:37.109 [error] Sending find_sub_aq batch [] 
02:23:37.109 [error] batched message propagation "2020-08-06T02:23:37.109" 
02:23:43.410 [error] C1 propagation "2020-08-06T02:23:43.410" 
02:23:47.111 [error] Sending find_sub batch [] 
02:23:47.111 [error] Sending find_sub_aq batch [] 
02:23:47.111 [error] batched message propagation "2020-08-06T02:23:47.111" 
02:23:50.412 [error] C1 propagation "2020-08-06T02:23:50.412" 
02:23:56.419 [error] C3 propagation "2020-08-06T02:23:56.419" 
02:23:56.590 [error] C2 propagation "2020-08-06T02:23:56.590" 
02:23:57.112 [error] Sending find_sub batch [] 
02:23:57.112 [error] Sending find_sub_aq batch [] 
02:23:57.112 [error] batched message propagation "2020-08-06T02:23:57.112" 
02:23:57.413 [error] C1 propagation "2020-08-06T02:23:57.413" 
02:24:04.414 [error] C1 propagation "2020-08-06T02:24:04.414" 
02:24:07.114 [error] Sending find_sub batch [] 
02:24:07.114 [error] Sending find_sub_aq batch [] 
02:24:07.114 [error] batched message propagation "2020-08-06T02:24:07.114" 
02:24:11.415 [error] C1 propagation "2020-08-06T02:24:11.415" 
02:24:17.116 [error] Sending find_sub batch [] 
02:24:17.116 [error] Sending find_sub_aq batch [] 
02:24:17.116 [error] batched message propagation "2020-08-06T02:24:17.116" 
02:24:18.416 [error] C1 propagation "2020-08-06T02:24:18.416" 
02:24:25.417 [error] C1 propagation "2020-08-06T02:24:25.417" 
02:24:27.118 [error] Sending find_sub batch [] 
02:24:27.118 [error] Sending find_sub_aq batch [] 
02:24:27.118 [error] batched message propagation "2020-08-06T02:24:27.118" 
02:24:32.418 [error] C1 propagation "2020-08-06T02:24:32.418" 
02:24:36.591 [error] C2 propagation "2020-08-06T02:24:36.591" 
02:24:37.120 [error] Sending find_sub batch [] 
02:24:37.120 [error] Sending find_sub_aq batch [] 
02:24:37.120 [error] batched message propagation "2020-08-06T02:24:37.120" 
02:24:39.419 [error] C1 propagation "2020-08-06T02:24:39.419" 
02:24:46.420 [error] C1 propagation "2020-08-06T02:24:46.420" 
02:24:47.121 [error] Sending find_sub batch [] 
02:24:47.121 [error] Sending find_sub_aq batch [] 
02:24:47.121 [error] batched message propagation "2020-08-06T02:24:47.121" 
02:24:53.421 [error] C1 propagation "2020-08-06T02:24:53.421" 
02:24:57.123 [error] Sending find_sub batch [] 
02:24:57.123 [error] Sending find_sub_aq batch [] 
02:24:57.123 [error] batched message propagation "2020-08-06T02:24:57.123" 
02:25:00.422 [error] C1 propagation "2020-08-06T02:25:00.422" 
02:25:06.420 [error] C3 propagation "2020-08-06T02:25:06.420" 
02:25:07.125 [error] Sending find_sub batch [] 
02:25:07.125 [error] Sending find_sub_aq batch [] 
02:25:07.125 [error] batched message propagation "2020-08-06T02:25:07.125" 
02:25:07.423 [error] C1 propagation "2020-08-06T02:25:07.423" 
02:25:14.424 [error] C1 propagation "2020-08-06T02:25:14.424" 
02:25:16.592 [error] C2 propagation "2020-08-06T02:25:16.592" 
02:25:17.127 [error] Sending find_sub batch [] 
02:25:17.127 [error] Sending find_sub_aq batch [] 
02:25:17.127 [error] batched message propagation "2020-08-06T02:25:17.127" 
02:25:21.426 [error] C1 propagation "2020-08-06T02:25:21.426" 
02:25:27.129 [error] Sending find_sub batch [] 
02:25:27.129 [error] Sending find_sub_aq batch [] 
02:25:27.129 [error] batched message propagation "2020-08-06T02:25:27.129" 
02:25:28.427 [error] C1 propagation "2020-08-06T02:25:28.427" 
02:25:35.428 [error] C1 propagation "2020-08-06T02:25:35.428" 
02:25:37.131 [error] Sending find_sub batch [] 
02:25:37.131 [error] Sending find_sub_aq batch [] 
02:25:37.131 [error] batched message propagation "2020-08-06T02:25:37.131" 
02:25:42.429 [error] C1 propagation "2020-08-06T02:25:42.429" 
02:25:47.133 [error] Sending find_sub batch [] 
02:25:47.133 [error] Sending find_sub_aq batch [] 
02:25:47.133 [error] batched message propagation "2020-08-06T02:25:47.133" 
02:25:49.431 [error] C1 propagation "2020-08-06T02:25:49.431" 
02:25:56.432 [error] C1 propagation "2020-08-06T02:25:56.432" 
02:25:56.593 [error] C2 propagation "2020-08-06T02:25:56.593" 
02:25:57.135 [error] Sending find_sub batch [] 
02:25:57.135 [error] Sending find_sub_aq batch [] 
02:25:57.135 [error] batched message propagation "2020-08-06T02:25:57.135" 
02:26:03.433 [error] C1 propagation "2020-08-06T02:26:03.433" 
02:26:07.137 [error] Sending find_sub batch [] 
02:26:07.137 [error] Sending find_sub_aq batch [] 
02:26:07.137 [error] batched message propagation "2020-08-06T02:26:07.137" 
02:26:10.434 [error] C1 propagation "2020-08-06T02:26:10.434" 
02:26:16.421 [error] C3 propagation "2020-08-06T02:26:16.421" 
02:26:17.139 [error] Sending find_sub batch [] 
02:26:17.139 [error] Sending find_sub_aq batch [] 
02:26:17.139 [error] batched message propagation "2020-08-06T02:26:17.139" 
02:26:17.435 [error] C1 propagation "2020-08-06T02:26:17.435" 
02:26:24.437 [error] C1 propagation "2020-08-06T02:26:24.437" 
02:26:27.141 [error] Sending find_sub batch [] 
02:26:27.141 [error] Sending find_sub_aq batch [] 
02:26:27.141 [error] batched message propagation "2020-08-06T02:26:27.141" 
02:26:31.438 [error] C1 propagation "2020-08-06T02:26:31.438" 
02:26:36.595 [error] C2 propagation "2020-08-06T02:26:36.595" 
02:26:37.143 [error] Sending find_sub batch [] 
02:26:37.143 [error] Sending find_sub_aq batch [] 
02:26:37.143 [error] batched message propagation "2020-08-06T02:26:37.143" 
02:26:38.439 [error] C1 propagation "2020-08-06T02:26:38.439" 
02:26:45.440 [error] C1 propagation "2020-08-06T02:26:45.440" 
02:26:47.144 [error] Sending find_sub batch [] 
02:26:47.144 [error] Sending find_sub_aq batch [] 
02:26:47.144 [error] batched message propagation "2020-08-06T02:26:47.144" 
02:26:52.441 [error] C1 propagation "2020-08-06T02:26:52.441" 
02:26:57.146 [error] Sending find_sub batch [] 
02:26:57.146 [error] Sending find_sub_aq batch [] 
02:26:57.146 [error] batched message propagation "2020-08-06T02:26:57.146" 
02:26:59.443 [error] C1 propagation "2020-08-06T02:26:59.443" 
02:27:06.444 [error] C1 propagation "2020-08-06T02:27:06.444" 
02:27:07.148 [error] Sending find_sub batch [] 
02:27:07.148 [error] Sending find_sub_aq batch [] 
02:27:07.148 [error] batched message propagation "2020-08-06T02:27:07.148" 
02:27:13.445 [error] C1 propagation "2020-08-06T02:27:13.445" 
02:27:16.596 [error] C2 propagation "2020-08-06T02:27:16.596" 
02:27:17.150 [error] Sending find_sub batch [] 
02:27:17.150 [error] Sending find_sub_aq batch [] 
02:27:17.150 [error] batched message propagation "2020-08-06T02:27:17.150" 
02:27:20.446 [error] C1 propagation "2020-08-06T02:27:20.446" 
02:27:26.422 [error] C3 propagation "2020-08-06T02:27:26.422" 
02:27:27.152 [error] Sending find_sub batch [] 
02:27:27.152 [error] Sending find_sub_aq batch [] 
02:27:27.152 [error] batched message propagation "2020-08-06T02:27:27.152" 
02:27:27.447 [error] C1 propagation "2020-08-06T02:27:27.447" 
02:27:34.448 [error] C1 propagation "2020-08-06T02:27:34.448" 
02:27:37.154 [error] Sending find_sub batch [] 
02:27:37.154 [error] Sending find_sub_aq batch [] 
02:27:37.154 [error] batched message propagation "2020-08-06T02:27:37.154" 
02:27:41.449 [error] C1 propagation "2020-08-06T02:27:41.449" 
02:27:47.156 [error] Sending find_sub batch [] 
02:27:47.156 [error] Sending find_sub_aq batch [] 
02:27:47.156 [error] batched message propagation "2020-08-06T02:27:47.156" 
02:27:48.451 [error] C1 propagation "2020-08-06T02:27:48.451" 
02:27:55.452 [error] C1 propagation "2020-08-06T02:27:55.452" 
02:27:56.597 [error] C2 propagation "2020-08-06T02:27:56.597" 
02:27:57.158 [error] Sending find_sub batch [] 
02:27:57.158 [error] Sending find_sub_aq batch [] 
02:27:57.158 [error] batched message propagation "2020-08-06T02:27:57.158" 
02:28:02.454 [error] C1 propagation "2020-08-06T02:28:02.454" 
02:28:07.160 [error] Sending find_sub batch [] 
02:28:07.160 [error] Sending find_sub_aq batch [] 
02:28:07.160 [error] batched message propagation "2020-08-06T02:28:07.160" 
02:28:09.456 [error] C1 propagation "2020-08-06T02:28:09.456" 
02:28:16.457 [error] C1 propagation "2020-08-06T02:28:16.457" 
02:28:17.162 [error] Sending find_sub batch [] 
02:28:17.162 [error] Sending find_sub_aq batch [] 
02:28:17.162 [error] batched message propagation "2020-08-06T02:28:17.162" 
02:28:23.458 [error] C1 propagation "2020-08-06T02:28:23.458" 
02:28:27.164 [error] Sending find_sub batch [] 
02:28:27.164 [error] Sending find_sub_aq batch [] 
02:28:27.164 [error] batched message propagation "2020-08-06T02:28:27.164" 
02:28:30.459 [error] C1 propagation "2020-08-06T02:28:30.459" 
02:28:36.424 [error] C3 propagation "2020-08-06T02:28:36.424" 
02:28:36.598 [error] C2 propagation "2020-08-06T02:28:36.598" 
02:28:37.166 [error] Sending find_sub batch [] 
02:28:37.166 [error] Sending find_sub_aq batch [] 
02:28:37.166 [error] batched message propagation "2020-08-06T02:28:37.166" 
02:28:37.461 [error] C1 propagation "2020-08-06T02:28:37.461" 
02:28:44.462 [error] C1 propagation "2020-08-06T02:28:44.462" 
02:28:47.168 [error] Sending find_sub batch [] 
02:28:47.168 [error] Sending find_sub_aq batch [] 
02:28:47.168 [error] batched message propagation "2020-08-06T02:28:47.168" 
02:28:51.463 [error] C1 propagation "2020-08-06T02:28:51.463" 
02:28:57.170 [error] Sending find_sub batch [] 
02:28:57.170 [error] Sending find_sub_aq batch [] 
02:28:57.170 [error] batched message propagation "2020-08-06T02:28:57.170" 
02:28:58.464 [error] C1 propagation "2020-08-06T02:28:58.464" 
02:29:05.466 [error] C1 propagation "2020-08-06T02:29:05.466" 
02:29:07.172 [error] Sending find_sub batch [] 
02:29:07.172 [error] Sending find_sub_aq batch [] 
02:29:07.172 [error] batched message propagation "2020-08-06T02:29:07.172" 
02:29:12.468 [error] C1 propagation "2020-08-06T02:29:12.468" 
02:29:16.599 [error] C2 propagation "2020-08-06T02:29:16.599" 
02:29:17.174 [error] Sending find_sub batch [] 
02:29:17.174 [error] Sending find_sub_aq batch [] 
02:29:17.174 [error] batched message propagation "2020-08-06T02:29:17.174" 
02:29:19.470 [error] C1 propagation "2020-08-06T02:29:19.470" 
02:29:26.471 [error] C1 propagation "2020-08-06T02:29:26.471" 
02:29:27.176 [error] Sending find_sub batch [] 
02:29:27.176 [error] Sending find_sub_aq batch [] 
02:29:27.176 [error] batched message propagation "2020-08-06T02:29:27.176" 
02:29:33.472 [error] C1 propagation "2020-08-06T02:29:33.472" 
02:29:37.178 [error] Sending find_sub batch [] 
02:29:37.178 [error] Sending find_sub_aq batch [] 
02:29:37.178 [error] batched message propagation "2020-08-06T02:29:37.178" 
02:29:40.473 [error] C1 propagation "2020-08-06T02:29:40.473" 
02:29:46.425 [error] C3 propagation "2020-08-06T02:29:46.425" 
02:29:47.180 [error] Sending find_sub batch [] 
02:29:47.180 [error] Sending find_sub_aq batch [] 
02:29:47.180 [error] batched message propagation "2020-08-06T02:29:47.180" 
02:29:47.475 [error] C1 propagation "2020-08-06T02:29:47.475" 
02:29:54.476 [error] C1 propagation "2020-08-06T02:29:54.476" 
02:29:56.600 [error] C2 propagation "2020-08-06T02:29:56.600" 
02:29:57.182 [error] Sending find_sub batch [] 
02:29:57.182 [error] Sending find_sub_aq batch [] 
02:29:57.182 [error] batched message propagation "2020-08-06T02:29:57.182" 
02:30:01.477 [error] C1 propagation "2020-08-06T02:30:01.477" 
02:30:07.184 [error] Sending find_sub batch [] 
02:30:07.184 [error] Sending find_sub_aq batch [] 
02:30:07.184 [error] batched message propagation "2020-08-06T02:30:07.184" 
02:30:08.478 [error] C1 propagation "2020-08-06T02:30:08.478" 
02:30:15.479 [error] C1 propagation "2020-08-06T02:30:15.479" 
02:30:17.186 [error] Sending find_sub batch [] 
02:30:17.186 [error] Sending find_sub_aq batch [] 
02:30:17.186 [error] batched message propagation "2020-08-06T02:30:17.186" 
02:30:22.480 [error] C1 propagation "2020-08-06T02:30:22.480" 
02:30:27.188 [error] Sending find_sub batch [] 
02:30:27.188 [error] Sending find_sub_aq batch [] 
02:30:27.188 [error] batched message propagation "2020-08-06T02:30:27.188" 
02:30:29.481 [error] C1 propagation "2020-08-06T02:30:29.481" 
02:30:36.483 [error] C1 propagation "2020-08-06T02:30:36.483" 
02:30:36.601 [error] C2 propagation "2020-08-06T02:30:36.601" 
02:30:37.190 [error] Sending find_sub batch [] 
02:30:37.190 [error] Sending find_sub_aq batch [] 
02:30:37.190 [error] batched message propagation "2020-08-06T02:30:37.190" 
02:30:43.485 [error] C1 propagation "2020-08-06T02:30:43.485" 
02:30:47.191 [error] Sending find_sub batch [] 
02:30:47.191 [error] Sending find_sub_aq batch [] 
02:30:47.191 [error] batched message propagation "2020-08-06T02:30:47.191" 
02:30:50.487 [error] C1 propagation "2020-08-06T02:30:50.487" 
02:30:56.427 [error] C3 propagation "2020-08-06T02:30:56.427" 
02:30:57.193 [error] Sending find_sub batch [] 
02:30:57.193 [error] Sending find_sub_aq batch [] 
02:30:57.193 [error] batched message propagation "2020-08-06T02:30:57.193" 
02:30:57.488 [error] C1 propagation "2020-08-06T02:30:57.488" 
02:31:04.491 [error] C1 propagation "2020-08-06T02:31:04.491" 
02:31:07.194 [error] Sending find_sub batch [] 
02:31:07.194 [error] Sending find_sub_aq batch [] 
02:31:07.194 [error] batched message propagation "2020-08-06T02:31:07.194" 
02:31:11.493 [error] C1 propagation "2020-08-06T02:31:11.493" 
02:31:16.603 [error] C2 propagation "2020-08-06T02:31:16.603" 
02:31:17.196 [error] Sending find_sub batch [] 
02:31:17.196 [error] Sending find_sub_aq batch [] 
02:31:17.196 [error] batched message propagation "2020-08-06T02:31:17.196" 
02:31:18.495 [error] C1 propagation "2020-08-06T02:31:18.495" 
02:31:25.497 [error] C1 propagation "2020-08-06T02:31:25.497" 
02:31:27.197 [error] Sending find_sub batch [] 
02:31:27.197 [error] Sending find_sub_aq batch [] 
02:31:27.197 [error] batched message propagation "2020-08-06T02:31:27.197" 
02:31:32.499 [error] C1 propagation "2020-08-06T02:31:32.499" 
02:31:37.199 [error] Sending find_sub batch [] 
02:31:37.199 [error] Sending find_sub_aq batch [] 
02:31:37.199 [error] batched message propagation "2020-08-06T02:31:37.199" 
02:31:39.501 [error] C1 propagation "2020-08-06T02:31:39.501" 
02:31:46.503 [error] C1 propagation "2020-08-06T02:31:46.503" 
02:31:47.200 [error] Sending find_sub batch [] 
02:31:47.200 [error] Sending find_sub_aq batch [] 
02:31:47.200 [error] batched message propagation "2020-08-06T02:31:47.200" 
02:31:53.504 [error] C1 propagation "2020-08-06T02:31:53.504" 
