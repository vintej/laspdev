root@9aecc818060f:/# cd /opt/lasp
cd /opt/lasp
root@9aecc818060f:/opt/lasp# rebar3 shell --name a@172.17.0.2
[Kroot@9aecc818060f:/opt/lasp# rebar3 shell --name a@172.17.0.2
[0;32m===> Verifying dependencies...
[0m[0;32m===> Compiling lasp
[0mErlang/OTP 19 [erts-8.3] [source] [64-bit] [smp:2:2] [ds:2:2:10] [async-threads:0] [hipe] [kernel-poll:false]

Eshell V8.3  (abort with ^G)
(a@172.17.0.2)1> [0;35m===> The rebar3 shell is a development tool; to deploy applications in production, consider using releases (http://www.rebar3.org/docs/releases)
[0m16:01:35.235 [info] Application lager started on node 'a@172.17.0.2'

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,sasl_safe_sup}
             started: [{pid,<0.253.0>},
                       {id,alarm_handler},
                       {mfargs,{alarm_handler,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,2000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,sasl_sup}
             started: [{pid,<0.252.0>},
                       {id,sasl_safe_sup},
                       {mfargs,
                           {supervisor,start_link,
                               [{local,sasl_safe_sup},sasl,safe]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,sasl_sup}
             started: [{pid,<0.254.0>},
                       {id,release_handler},
                       {mfargs,{release_handler,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,2000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
         application: sasl
          started_at: 'a@172.17.0.2'
16:01:35.264 [info] Application sasl started on node 'a@172.17.0.2'

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
         application: lasp_support
          started_at: 'a@172.17.0.2'
16:01:35.265 [info] Application lasp_support started on node 'a@172.17.0.2'

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
         application: acceptor_pool
          started_at: 'a@172.17.0.2'
16:01:35.265 [info] Application acceptor_pool started on node 'a@172.17.0.2'

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
         application: quickrand
          started_at: 'a@172.17.0.2'

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
         application: uuid
          started_at: 'a@172.17.0.2'
16:01:35.266 [info] Application quickrand started on node 'a@172.17.0.2'
16:01:35.266 [info] Application uuid started on node 'a@172.17.0.2'
16:01:35.270 [info] Using node name: 'a@172.17.0.2'
16:01:35.274 [info] Resolving "172.17.0.2"...

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,kernel_safe_sup}
             started: [{pid,<0.266.0>},
                       {id,timer_server},
                       {mfargs,{timer,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,1000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,inet_gethost_native_sup}
             started: [{pid,<0.268.0>},{mfa,{inet_gethost_native,init,[[]]}}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,kernel_safe_sup}
             started: [{pid,<0.267.0>},
                       {id,inet_gethost_native_sup},
                       {mfargs,{inet_gethost_native,start_link,[]}},
                       {restart_type,temporary},
                       {shutdown,1000},
                       {child_type,worker}]
16:01:35.276 [info] Resolved "a@172.17.0.2" to {172,17,0,2}
16:01:35.276 [info] Resolved "172.17.0.2" to {172,17,0,2}
16:01:35.357 [info] Partisan listening on {172,17,0,2}:54499 listen_addrs: [#{ip => {172,17,0,2},port => 54499}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.313.0>},
                       {id,partisan_rpc_backend},
                       {mfargs,{partisan_rpc_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.314.0>},
                       {id,partisan_acknowledgement_backend},
                       {mfargs,
                           {partisan_acknowledgement_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
16:01:35.379 [info] Not using container orchestration; disabling.

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.315.0>},
                       {id,partisan_orchestration_backend},
                       {mfargs,{partisan_orchestration_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
16:01:35.413 [info] node 'a@172.17.0.2' choosing random seed: {108563987,-576460748863963423,-576460752303423470}

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.316.0>},
                       {id,partisan_pluggable_peer_service_manager},
                       {mfargs,
                           {partisan_pluggable_peer_service_manager,
                               start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.318.0>},
                       {id,partisan_peer_service_events},
                       {mfargs,{partisan_peer_service_events,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
16:01:35.507 [info] node 'a@172.17.0.2' choosing random seed: {108563987,-576460748863963423,-576460752303423470}

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.319.0>},
                       {id,partisan_plumtree_backend},
                       {mfargs,{partisan_plumtree_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.320.0>},
                       {id,partisan_plumtree_broadcast},
                       {mfargs,{partisan_plumtree_broadcast,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.321.0>},
                       {id,partisan_monitor},
                       {mfargs,{partisan_monitor,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,partisan_pool_sup}
             started: [{pid,<0.323.0>},
                       {id,partisan_pool},
                       {mfargs,{partisan_pool,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,partisan_pool_sup}
             started: [{pid,<0.324.0>},
                       {id,{partisan_socket,{172,17,0,2},54499}},
                       {mfargs,
                           {partisan_socket,start_link,[{172,17,0,2},54499]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,partisan_sup}
             started: [{pid,<0.322.0>},
                       {id,partisan_pool_sup},
                       {mfargs,{partisan_pool_sup,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,20000},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
         application: partisan
          started_at: 'a@172.17.0.2'
16:01:35.578 [info] Application partisan started on node 'a@172.17.0.2'

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,plumtree_sup}
             started: [{pid,<0.339.0>},
                       {id,plumtree_broadcast},
                       {mfargs,{plumtree_broadcast,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
         application: plumtree
          started_at: 'a@172.17.0.2'

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
         application: gen_fsm_compat
          started_at: 'a@172.17.0.2'
16:01:35.587 [info] Application plumtree started on node 'a@172.17.0.2'
16:01:35.588 [info] Application gen_fsm_compat started on node 'a@172.17.0.2'
16:01:35.591 [info] Setting jitter: false
16:01:35.593 [info] Setting jitter percent: 1
16:01:35.594 [info] Setting event interval: 0
16:01:35.596 [info] Setting max events: 1000
16:01:35.598 [info] Setting extended logging: false
16:01:35.599 [info] Setting mailbox logging: false
16:01:35.600 [info] Setting operation mode: delta_based
16:01:35.602 [info] Setting set type: orset
16:01:35.604 [info] Setting broadcast: false
16:01:35.633 [info] Membership: false
16:01:35.635 [info] Workflow: false
16:01:35.639 [info] AdClientEnabled: false
16:01:35.641 [info] AdServerEnabled: false
16:01:35.642 [info] TournClientEnabled: false
16:01:35.644 [info] TournServerEnabled: false
16:01:35.645 [info] ThroughputType: gset
16:01:35.646 [info] ThroughputClientEnabled: false
16:01:35.648 [info] ThroughputServerEnabled: false
16:01:35.649 [info] DivergenceType: gcounter
16:01:35.650 [info] DivergenceClientEnabled: false
16:01:35.651 [info] DivergenceServerEnabled: false

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.386.0>},
                       {id,lasp_unique},
                       {mfargs,{lasp_unique,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.387.0>},
                       {id,lasp_plumtree_backend},
                       {mfargs,{lasp_plumtree_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.388.0>},
                       {id,lasp_plumtree_memory_report},
                       {mfargs,{lasp_plumtree_memory_report,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.389.0>},
                       {id,lasp_memory_utilization_report},
                       {mfargs,{lasp_memory_utilization_report,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]
16:01:35.682 [info] Backend initialized with pid: <0.393.0>
16:01:35.682 [info] Backend lasp_ets_storage_backend initialized: <0.393.0>
16:01:35.682 [error] Set to delta_based

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.390.0>},
                       {id,lasp_distribution_backend},
                       {mfargs,{lasp_distribution_backend,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,5000},
                       {child_type,worker}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
          supervisor: {local,lasp_sup}
             started: [{pid,<0.395.0>},
                       {id,lasp_process_sup},
                       {mfargs,{lasp_process_sup,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,supervisor}]

=PROGRESS REPORT==== 22-Mar-2020::16:01:35 ===
         application: lasp
          started_at: 'a@172.17.0.2'
16:01:35.709 [info] Application lasp started on node 'a@172.17.0.2'
[0;32m===> Booted types
[0m
[0;32m===> Booted gen_flow
[0m[0;32m===> Booted syntax_tools
[0m[0;32m===> Booted compiler
[0m[0;32m===> Booted goldrush
[0m[0;32m===> Booted lager
[0m[0;32m===> Booted sasl
[0m[0;32m===> Booted lasp_support
[0m[0;32m===> Booted acceptor_pool
[0m[0;32m===> Booted quickrand
[0m[0;32m===> Booted uuid
[0m[0;32m===> Booted partisan
[0m[0;32m===> Booted plumtree
[0m[0;32m===> Booted gen_fsm_compat
[0m[0;32m===> Booted lasp
[0m
(a@172.17.0.2)1> erlang:set_cookie(node(),'RPJVCXYDYULBNZFEFPHJ').
erlang:set_cookie(node(),'RPJVCXYDYULBNZFEFPHJ').
true
(a@172.17.0.2)2> lasp_peer_service:join('b@172.17.0.3').
lasp_peer_service:join('b@172.17.0.3').
ok
(a@172.17.0.2)3> lasp_config:set(mode, delta_based).
lasp_config:set(mode, delta_based).
ok
(a@172.17.0.2)4> f().
f().
ok
(a@172.17.0.2)5> Key1 = <<"key1">>.
Key1 = <<"key1">>.
<<"key1">>
(a@172.17.0.2)6> Key2 = <<"key2">>.
Key2 = <<"key2">>.
<<"key2">>
(a@172.17.0.2)7> Timestamp = fun () -> erlang:unique_integer([monotonic, positive]) end.
Timestamp = fun () -> erlang:unique_integer([monotonic, positiv e]) end.
#Fun<erl_eval.20.118419387>
(a@172.17.0.2)8> AwMapType = {state_awmap, [state_mvregister]}.
AwMapType = {state_awmap, [state_mvregister]}.
{state_awmap,[state_mvregister]}
(a@172.17.0.2)9> AwMapVarName = <<"awmap">>.
AwMapVarName = <<"awmap">>.
<<"awmap">>
(a@172.17.0.2)10> AwMapVal = #{what => i_am_111111111110000000000000101111111111101111111111010111111011111111}.
AwMapVal = #{what => i_am_111111111110000000000000101111111111 101111111111010111111011111111}.
#{what =>
      i_am_111111111110000000000000101111111111101111111111010111111011111111}
(a@172.17.0.2)11> AwMapVal2 = #{what => i_am_1000000000010000001010000000011111111111010100000000000100000000011}.
AwMapVal2 = #{what => i_am_10000000000100000010100000000111111 11111010100000000000100000000011}.
#{what =>
      i_am_1000000000010000001010000000011111111111010100000000000100000000011}
(a@172.17.0.2)12> {ok, {AwMap, _, _, _}} = lasp:declare({AwMapVarName, AwMapType}, AwMapType).
{ok, {AwMap, _, _, _}} = lasp:declare({AwMapVarName, AwMapType }, AwMapType).
{ok,{{<<"awmap">>,{state_awmap,[state_mvregister]}},
     {state_awmap,[state_mvregister]},
     [{clock,[{<<21,123,91,225,226,196,42,217,117,49,9,176,2,
                 237,249,140,80,194,185,...>>,
               1}]}],
     {state_awmap,{state_mvregister,{[],{[],[]}}}}}}
(a@172.17.0.2)13> {ok, {AwMap1, _, _, _}} = lasp:update(AwMap, {apply, Key1, {set, Timestamp(), AwMapVal}}, self()).
{ok, {AwMap1, _, _, _}} = lasp:update(AwMap, {apply, Key1, {se t, Timestamp(), AwMapVal}}, self()).
16:01:47.673 [error] LASPVIN PROPOGATION COUNTER:1
{ok,{{<<"awmap">>,{state_awmap,[state_mvregister]}},
     {state_awmap,[state_mvregister]},
     [{clock,[{<<21,123,91,225,226,196,42,217,117,49,9,176,2,
                 237,249,140,80,194,185,...>>,
               2}]}],
     {state_awmap,{state_mvregister,{[{<<"key1">>,
                                       [{{<0.209.0>,1},
                                         #{what =>
                                               i_am_111111111110000000000000101111111111101111111111010111111011111111}}]}],
                                     {[{<0.209.0>,1}],[]}}}}}}
(a@172.17.0.2)14> {ok, AwMapRes} = lasp:query(AwMap1).
{ok, AwMapRes} = lasp:query(AwMap1).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what =>
                    i_am_111111111110000000000000101111111111101111111111010111111011111111}],
             [],[],...}}}}]}
(a@172.17.0.2)15> AwMapRes.
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what =>
                i_am_111111111110000000000000101111111111101111111111010111111011111111}],
         [],[],[],[]}}}}]
(a@172.17.0.2)16> {ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal}}, self()).
{ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal }}, self()).
16:02:27.897 [error] LASPVIN PROPOGATION COUNTER:1
{ok,{{<<"awmap">>,{state_awmap,[state_mvregister]}},
     {state_awmap,[state_mvregister]},
     [{clock,[{<<21,123,91,225,226,196,42,217,117,49,9,176,2,
                 237,249,140,80,194,185,...>>,
               4}]}],
     {state_awmap,{state_mvregister,{[{<<"key1">>,
                                       [{{<0.209.0>,2},
                                         #{what =>
                                               i_am_111111111110000000000000101111111111101111111111010111111011111111}}]}],
                                     {[{<0.209.0>,2}],[]}}}}}}
(a@172.17.0.2)17> f(AwMapRes).
f(AwMapRes).
ok
(a@172.17.0.2)18> {ok, AwMapRes} = lasp:query(AwMap1).
{ok, AwMapRes} = lasp:query(AwMap1).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what =>
                    i_am_111111111110000000000000101111111111101111111111010111111011111111}],
             [],[],...}}}}]}
(a@172.17.0.2)19> AwMapRes.
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what =>
                i_am_111111111110000000000000101111111111101111111111010111111011111111}],
         [],[],[],[]}}}}]
(a@172.17.0.2)20> {ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal2}}, self()).
{ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal 2}}, self()).
16:03:08.169 [error] LASPVIN PROPOGATION COUNTER:1
{ok,{{<<"awmap">>,{state_awmap,[state_mvregister]}},
     {state_awmap,[state_mvregister]},
     [{clock,[{<<21,123,91,225,226,196,42,217,117,49,9,176,2,
                 237,249,140,80,194,185,...>>,
               6}]}],
     {state_awmap,{state_mvregister,{[{<<"key1">>,
                                       [{{<0.209.0>,3},
                                         #{what =>
                                               i_am_1000000000010000001010000000011111111111010100000000000100000000011}}]}],
                                     {[{<0.209.0>,3}],[]}}}}}}
(a@172.17.0.2)21> f(AwMapRes).
f(AwMapRes).
ok
(a@172.17.0.2)22> {ok, AwMapRes} = lasp:query(AwMap1).
{ok, AwMapRes} = lasp:query(AwMap1).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what =>
                    i_am_1000000000010000001010000000011111111111010100000000000100000000011}],
             [],[],...}}}}]}
(a@172.17.0.2)23> AwMapRes.
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what =>
                i_am_1000000000010000001010000000011111111111010100000000000100000000011}],
         [],[],[],[]}}}}]
(a@172.17.0.2)24> {ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal}}, self()).
{ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal }}, self()).
16:03:48.481 [error] LASPVIN PROPOGATION COUNTER:1
{ok,{{<<"awmap">>,{state_awmap,[state_mvregister]}},
     {state_awmap,[state_mvregister]},
     [{clock,[{<<21,123,91,225,226,196,42,217,117,49,9,176,2,
                 237,249,140,80,194,185,...>>,
               8}]}],
     {state_awmap,{state_mvregister,{[{<<"key1">>,
                                       [{{<0.209.0>,4},
                                         #{what =>
                                               i_am_111111111110000000000000101111111111101111111111010111111011111111}}]}],
                                     {[{<0.209.0>,4}],[]}}}}}}
(a@172.17.0.2)25> f(AwMapRes).
f(AwMapRes).
ok
(a@172.17.0.2)26> {ok, AwMapRes} = lasp:query(AwMap1).
{ok, AwMapRes} = lasp:query(AwMap1).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what =>
                    i_am_111111111110000000000000101111111111101111111111010111111011111111}],
             [],[],...}}}}]}
(a@172.17.0.2)27> AwMapRes.
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what =>
                i_am_111111111110000000000000101111111111101111111111010111111011111111}],
         [],[],[],[]}}}}]
(a@172.17.0.2)28> {ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal2}}, self()).
{ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal 2}}, self()).
16:04:08.772 [error] LASPVIN PROPOGATION COUNTER:1
{ok,{{<<"awmap">>,{state_awmap,[state_mvregister]}},
     {state_awmap,[state_mvregister]},
     [{clock,[{<<21,123,91,225,226,196,42,217,117,49,9,176,2,
                 237,249,140,80,194,185,...>>,
               10}]}],
     {state_awmap,{state_mvregister,{[{<<"key1">>,
                                       [{{<0.209.0>,5},
                                         #{what =>
                                               i_am_1000000000010000001010000000011111111111010100000000000100000000011}}]}],
                                     {[{<0.209.0>,5}],[]}}}}}}
(a@172.17.0.2)29> f(AwMapRes).
f(AwMapRes).
ok
(a@172.17.0.2)30> {ok, AwMapRes} = lasp:query(AwMap1).
{ok, AwMapRes} = lasp:query(AwMap1).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what =>
                    i_am_1000000000010000001010000000011111111111010100000000000100000000011}],
             [],[],...}}}}]}
(a@172.17.0.2)31> AwMapRes.
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what =>
                i_am_1000000000010000001010000000011111111111010100000000000100000000011}],
         [],[],[],[]}}}}]
(a@172.17.0.2)32> {ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal}}, self()).
{ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal }}, self()).
16:04:49.082 [error] LASPVIN PROPOGATION COUNTER:1
{ok,{{<<"awmap">>,{state_awmap,[state_mvregister]}},
     {state_awmap,[state_mvregister]},
     [{clock,[{<<21,123,91,225,226,196,42,217,117,49,9,176,2,
                 237,249,140,80,194,185,...>>,
               12}]}],
     {state_awmap,{state_mvregister,{[{<<"key1">>,
                                       [{{<0.209.0>,6},
                                         #{what =>
                                               i_am_111111111110000000000000101111111111101111111111010111111011111111}}]}],
                                     {[{<0.209.0>,6}],[]}}}}}}
(a@172.17.0.2)33> f(AwMapRes).
f(AwMapRes).
ok
(a@172.17.0.2)34> {ok, AwMapRes} = lasp:query(AwMap1).
{ok, AwMapRes} = lasp:query(AwMap1).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what =>
                    i_am_111111111110000000000000101111111111101111111111010111111011111111}],
             [],[],...}}}}]}
(a@172.17.0.2)35> AwMapRes.
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what =>
                i_am_111111111110000000000000101111111111101111111111010111111011111111}],
         [],[],[],[]}}}}]
(a@172.17.0.2)36> {ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal2}}, self()).
{ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal 2}}, self()).
16:05:29.372 [error] LASPVIN PROPOGATION COUNTER:1
{ok,{{<<"awmap">>,{state_awmap,[state_mvregister]}},
     {state_awmap,[state_mvregister]},
     [{clock,[{<<21,123,91,225,226,196,42,217,117,49,9,176,2,
                 237,249,140,80,194,185,...>>,
               14}]}],
     {state_awmap,{state_mvregister,{[{<<"key1">>,
                                       [{{<0.209.0>,7},
                                         #{what =>
                                               i_am_1000000000010000001010000000011111111111010100000000000100000000011}}]}],
                                     {[{<0.209.0>,7}],[]}}}}}}
(a@172.17.0.2)37> f(AwMapRes).
f(AwMapRes).
ok
(a@172.17.0.2)38> {ok, AwMapRes} = lasp:query(AwMap1).
{ok, AwMapRes} = lasp:query(AwMap1).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what =>
                    i_am_1000000000010000001010000000011111111111010100000000000100000000011}],
             [],[],...}}}}]}
(a@172.17.0.2)39> AwMapRes.
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what =>
                i_am_1000000000010000001010000000011111111111010100000000000100000000011}],
         [],[],[],[]}}}}]
(a@172.17.0.2)40> {ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal}}, self()).
{ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal }}, self()).
16:05:49.653 [error] LASPVIN PROPOGATION COUNTER:1
{ok,{{<<"awmap">>,{state_awmap,[state_mvregister]}},
     {state_awmap,[state_mvregister]},
     [{clock,[{<<21,123,91,225,226,196,42,217,117,49,9,176,2,
                 237,249,140,80,194,185,...>>,
               16}]}],
     {state_awmap,{state_mvregister,{[{<<"key1">>,
                                       [{{<0.209.0>,8},
                                         #{what =>
                                               i_am_111111111110000000000000101111111111101111111111010111111011111111}}]}],
                                     {[{<0.209.0>,8}],[]}}}}}}
(a@172.17.0.2)41> f(AwMapRes).
f(AwMapRes).
ok
(a@172.17.0.2)42> {ok, AwMapRes} = lasp:query(AwMap1).
{ok, AwMapRes} = lasp:query(AwMap1).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what =>
                    i_am_111111111110000000000000101111111111101111111111010111111011111111}],
             [],[],...}}}}]}
(a@172.17.0.2)43> AwMapRes.
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what =>
                i_am_111111111110000000000000101111111111101111111111010111111011111111}],
         [],[],[],[]}}}}]
(a@172.17.0.2)44> {ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal2}}, self()).
{ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal 2}}, self()).
16:06:29.937 [error] LASPVIN PROPOGATION COUNTER:1
{ok,{{<<"awmap">>,{state_awmap,[state_mvregister]}},
     {state_awmap,[state_mvregister]},
     [{clock,[{<<21,123,91,225,226,196,42,217,117,49,9,176,2,
                 237,249,140,80,194,185,...>>,
               18}]}],
     {state_awmap,{state_mvregister,{[{<<"key1">>,
                                       [{{<0.209.0>,9},
                                         #{what =>
                                               i_am_1000000000010000001010000000011111111111010100000000000100000000011}}]}],
                                     {[{<0.209.0>,9}],[]}}}}}}
(a@172.17.0.2)45> f(AwMapRes).
f(AwMapRes).
ok
(a@172.17.0.2)46> {ok, AwMapRes} = lasp:query(AwMap1).
{ok, AwMapRes} = lasp:query(AwMap1).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what =>
                    i_am_1000000000010000001010000000011111111111010100000000000100000000011}],
             [],[],...}}}}]}
(a@172.17.0.2)47> AwMapRes.
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what =>
                i_am_1000000000010000001010000000011111111111010100000000000100000000011}],
         [],[],[],[]}}}}]
(a@172.17.0.2)48> {ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal}}, self()).
{ok, _} = lasp:update(AwMap, {apply, Key1, {set, nil, AwMapVal }}, self()).
16:07:10.219 [error] LASPVIN PROPOGATION COUNTER:1
{ok,{{<<"awmap">>,{state_awmap,[state_mvregister]}},
     {state_awmap,[state_mvregister]},
     [{clock,[{<<21,123,91,225,226,196,42,217,117,49,9,176,2,
                 237,249,140,80,194,185,...>>,
               20}]}],
     {state_awmap,{state_mvregister,{[{<<"key1">>,
                                       [{{<0.209.0>,10},
                                         #{what =>
                                               i_am_111111111110000000000000101111111111101111111111010111111011111111}}]}],
                                     {[{<0.209.0>,10}],[]}}}}}}
(a@172.17.0.2)49> f(AwMapRes).
16:07:15.883 [info] Connection cache miss for node: 'b@172.17.0.3'
f(AwMapRes).
ok
(a@172.17.0.2)50> {ok, AwMapRes} = lasp:query(AwMap1).
{ok, AwMapRes} = lasp:query(AwMap1).
{ok,[{<<"key1">>,
      {set,1,16,16,8,80,48,
           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
           {{[],[],[],[],[],[],[],[],[],[],[],
             [#{what =>
                    i_am_111111111110000000000000101111111111101111111111010111111011111111}],
             [],[],...}}}}]}
(a@172.17.0.2)51> AwMapRes.
AwMapRes.
[{<<"key1">>,
  {set,1,16,16,8,80,48,
       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
       {{[],[],[],[],[],[],[],[],[],[],[],
         [#{what =>
                i_am_111111111110000000000000101111111111101111111111010111111011111111}],
         [],[],[],[]}}}}]
(a@172.17.0.2)52> lasp_peer_service:stop().
lasp_peer_service:stop().
16:07:25.470 [notice] "received stop request"
ok
(a@172.17.0.2)53> exit
