
mn --clean
*** Removing excess controllers/ofprotocols/ofdatapaths/pings/noxes
killall controller ofprotocol ofdatapath ping nox_corelt-nox_core ovs-openflowd ovs-controllerovs-testcontroller udpbwtest mnexec ivs ryu-manager 2> /dev/null
killall -9 controller ofprotocol ofdatapath ping nox_corelt-nox_core ovs-openflowd ovs-controllerovs-testcontroller udpbwtest mnexec ivs ryu-manager 2> /dev/null
pkill -9 -f "sudo mnexec"
*** Removing junk from /tmp
rm -f /tmp/vconn* /tmp/vlogs* /tmp/*.out /tmp/*.log
*** Removing old X11 tunnels
*** Removing excess kernel datapaths
ps ax | egrep -o 'dp[0-9]+' | sed 's/dp/nl:/'
***  Removing OVS datapaths
ovs-vsctl --timeout=1 list-br
ovs-vsctl --timeout=1 list-br
*** Removing all links of the pattern foo-ethX
ip link show | egrep -o '([-_.[:alnum:]]+-eth[[:digit:]]+)'
ip link show
*** Killing stale mininet node processes
pkill -9 -f mininet:
*** Shutting down stale tunnels
pkill -9 -f Tunnel=Ethernet
pkill -9 -f .ssh/mn
rm -f ~/.ssh/mn/*
***  Removing SAP NAT rules
*** Cleanup complete.
root@csst-06:/home/ubuntu/laspdev# python3 build_topo.py
*** Adding controller
*** Adding docker containers
node_objects[d6] = net.addDocker(d6, ip=11.0.0.11, dimage=chosen_image)
1: 
d6: kwargs {'ip': '11.0.0.11'}
d6: update resources {'cpu_quota': -1}
node_objects[d7] = net.addDocker(d7, ip=11.0.0.12, dimage=chosen_image)
1: 
d7: kwargs {'ip': '11.0.0.12'}
d7: update resources {'cpu_quota': -1}
node_objects[d10] = net.addDocker(d10, ip=11.0.0.15, dimage=chosen_image)
1: 
d10: kwargs {'ip': '11.0.0.15'}
d10: update resources {'cpu_quota': -1}
node_objects[d8] = net.addDocker(d8, ip=11.0.0.13, dimage=chosen_image)
1: 
d8: kwargs {'ip': '11.0.0.13'}
d8: update resources {'cpu_quota': -1}
node_objects[d9] = net.addDocker(d9, ip=11.0.0.14, dimage=chosen_image)
1: 
d9: kwargs {'ip': '11.0.0.14'}
d9: update resources {'cpu_quota': -1}
node_objects[d14] = net.addDocker(d14, ip=12.0.0.14, dimage=chosen_image)
1: 
d14: kwargs {'ip': '12.0.0.14'}
d14: update resources {'cpu_quota': -1}
node_objects[d15] = net.addDocker(d15, ip=12.0.0.15, dimage=chosen_image)
1: 
d15: kwargs {'ip': '12.0.0.15'}
d15: update resources {'cpu_quota': -1}
node_objects[d11] = net.addDocker(d11, ip=12.0.0.11, dimage=chosen_image)
1: 
d11: kwargs {'ip': '12.0.0.11'}
d11: update resources {'cpu_quota': -1}
node_objects[d12] = net.addDocker(d12, ip=12.0.0.12, dimage=chosen_image)
1: 
d12: kwargs {'ip': '12.0.0.12'}
d12: update resources {'cpu_quota': -1}
node_objects[d13] = net.addDocker(d13, ip=12.0.0.13, dimage=chosen_image)
1: 
d13: kwargs {'ip': '12.0.0.13'}
d13: update resources {'cpu_quota': -1}
node_objects[d4] = net.addDocker(d4, ip=10.0.0.14, dimage=chosen_image)
1: 
d4: kwargs {'ip': '10.0.0.14'}
d4: update resources {'cpu_quota': -1}
node_objects[d5] = net.addDocker(d5, ip=10.0.0.15, dimage=chosen_image)
1: 
d5: kwargs {'ip': '10.0.0.15'}
d5: update resources {'cpu_quota': -1}
node_objects[d2] = net.addDocker(d2, ip=10.0.0.12, dimage=chosen_image)
1: 
d2: kwargs {'ip': '10.0.0.12'}
d2: update resources {'cpu_quota': -1}
node_objects[d3] = net.addDocker(d3, ip=10.0.0.13, dimage=chosen_image)
1: 
d3: kwargs {'ip': '10.0.0.13'}
d3: update resources {'cpu_quota': -1}
node_objects[d1] = net.addDocker(d1, ip=10.0.0.11, dimage=chosen_image)
1: 
d1: kwargs {'ip': '10.0.0.11'}
d1: update resources {'cpu_quota': -1}
node_objects[d29] = net.addDocker(d29, ip=15.0.0.14, dimage=chosen_image)
1: 
d29: kwargs {'ip': '15.0.0.14'}
d29: update resources {'cpu_quota': -1}
node_objects[d28] = net.addDocker(d28, ip=15.0.0.13, dimage=chosen_image)
1: 
d28: kwargs {'ip': '15.0.0.13'}
d28: update resources {'cpu_quota': -1}
node_objects[d30] = net.addDocker(d30, ip=15.0.0.15, dimage=chosen_image)
1: 
d30: kwargs {'ip': '15.0.0.15'}
d30: update resources {'cpu_quota': -1}
node_objects[d27] = net.addDocker(d27, ip=15.0.0.12, dimage=chosen_image)
1: 
d27: kwargs {'ip': '15.0.0.12'}
d27: update resources {'cpu_quota': -1}
node_objects[d26] = net.addDocker(d26, ip=15.0.0.11, dimage=chosen_image)
1: 
d26: kwargs {'ip': '15.0.0.11'}
d26: update resources {'cpu_quota': -1}
node_objects[d20] = net.addDocker(d20, ip=13.0.0.15, dimage=chosen_image)
1: 
d20: kwargs {'ip': '13.0.0.15'}
d20: update resources {'cpu_quota': -1}
node_objects[d16] = net.addDocker(d16, ip=13.0.0.11, dimage=chosen_image)
1: 
d16: kwargs {'ip': '13.0.0.11'}
d16: update resources {'cpu_quota': -1}
node_objects[d17] = net.addDocker(d17, ip=13.0.0.12, dimage=chosen_image)
1: 
d17: kwargs {'ip': '13.0.0.12'}
d17: update resources {'cpu_quota': -1}
node_objects[d18] = net.addDocker(d18, ip=13.0.0.13, dimage=chosen_image)
1: 
d18: kwargs {'ip': '13.0.0.13'}
d18: update resources {'cpu_quota': -1}
node_objects[d19] = net.addDocker(d19, ip=13.0.0.14, dimage=chosen_image)
1: 
d19: kwargs {'ip': '13.0.0.14'}
d19: update resources {'cpu_quota': -1}
node_objects[d21] = net.addDocker(d21, ip=14.0.0.11, dimage=chosen_image)
1: 
d21: kwargs {'ip': '14.0.0.11'}
d21: update resources {'cpu_quota': -1}
node_objects[d23] = net.addDocker(d23, ip=14.0.0.13, dimage=chosen_image)
1: 
d23: kwargs {'ip': '14.0.0.13'}
d23: update resources {'cpu_quota': -1}
node_objects[d22] = net.addDocker(d22, ip=14.0.0.12, dimage=chosen_image)
1: 
d22: kwargs {'ip': '14.0.0.12'}
d22: update resources {'cpu_quota': -1}
node_objects[d25] = net.addDocker(d25, ip=14.0.0.15, dimage=chosen_image)
1: 
d25: kwargs {'ip': '14.0.0.15'}
d25: update resources {'cpu_quota': -1}
node_objects[d24] = net.addDocker(d24, ip=14.0.0.14, dimage=chosen_image)
1: 
d24: kwargs {'ip': '14.0.0.14'}
d24: update resources {'cpu_quota': -1}
*** Adding switches
cluster_swithc[cluster2] = net.addSwitch(s2
cluster_swithc[cluster3] = net.addSwitch(s3
cluster_swithc[cluster1] = net.addSwitch(s1
cluster_swithc[cluster6] = net.addSwitch(s6
cluster_swithc[cluster4] = net.addSwitch(s4
cluster_swithc[cluster5] = net.addSwitch(s5
*** Creating links
cluster_switch['cluster1'] =s1 r0-eth1 ip:10.0.0.10/8
net.addLink cluster_switch[cluster1]),router, intfName2= 'r0-eth1, params2={'ip':'10.0.0.10/8
cluster_switch['cluster2'] =s2 r0-eth2 ip:11.0.0.10/8
net.addLink cluster_switch[cluster2]),router, intfName2= 'r0-eth2, params2={'ip':'11.0.0.10/8
cluster_switch['cluster3'] =s3 r0-eth3 ip:12.0.0.10/8
net.addLink cluster_switch[cluster3]),router, intfName2= 'r0-eth3, params2={'ip':'12.0.0.10/8
cluster_switch['cluster4'] =s4 r0-eth4 ip:13.0.0.10/8
net.addLink cluster_switch[cluster4]),router, intfName2= 'r0-eth4, params2={'ip':'13.0.0.10/8
cluster_switch['cluster5'] =s5 r0-eth5 ip:14.0.0.10/8
net.addLink cluster_switch[cluster5]),router, intfName2= 'r0-eth5, params2={'ip':'14.0.0.10/8
cluster_switch['cluster6'] =s6 r0-eth6 ip:15.0.0.10/8
net.addLink cluster_switch[cluster6]),router, intfName2= 'r0-eth6, params2={'ip':'15.0.0.10/8
net.addLink(node_objectsd6__d6, s2, delay='50ms', bw=1)
net.addLink(node_objectsd7__d7, s2, delay='50ms', bw=1)
net.addLink(node_objectsd10__d10, s2, delay='50ms', bw=1)
net.addLink(node_objectsd8__d8, s2, delay='50ms', bw=1)
net.addLink(node_objectsd9__d9, s2, delay='50ms', bw=1)
net.addLink(node_objectsd14__d14, s3, delay='50ms', bw=1)
net.addLink(node_objectsd15__d15, s3, delay='50ms', bw=1)
net.addLink(node_objectsd11__d11, s3, delay='50ms', bw=1)
net.addLink(node_objectsd12__d12, s3, delay='50ms', bw=1)
net.addLink(node_objectsd13__d13, s3, delay='50ms', bw=1)
net.addLink(node_objectsd4__d4, s1, delay='50ms', bw=1)
net.addLink(node_objectsd5__d5, s1, delay='50ms', bw=1)
net.addLink(node_objectsd2__d2, s1, delay='50ms', bw=1)
net.addLink(node_objectsd3__d3, s1, delay='50ms', bw=1)
net.addLink(node_objectsd1__d1, s1, delay='50ms', bw=1)
net.addLink(node_objectsd29__d29, s6, delay='50ms', bw=1)
net.addLink(node_objectsd28__d28, s6, delay='50ms', bw=1)
net.addLink(node_objectsd30__d30, s6, delay='50ms', bw=1)
net.addLink(node_objectsd27__d27, s6, delay='50ms', bw=1)
net.addLink(node_objectsd26__d26, s6, delay='50ms', bw=1)
net.addLink(node_objectsd20__d20, s4, delay='50ms', bw=1)
net.addLink(node_objectsd16__d16, s4, delay='50ms', bw=1)
net.addLink(node_objectsd17__d17, s4, delay='50ms', bw=1)
net.addLink(node_objectsd18__d18, s4, delay='50ms', bw=1)
net.addLink(node_objectsd19__d19, s4, delay='50ms', bw=1)
net.addLink(node_objectsd21__d21, s5, delay='50ms', bw=1)
net.addLink(node_objectsd23__d23, s5, delay='50ms', bw=1)
net.addLink(node_objectsd22__d22, s5, delay='50ms', bw=1)
net.addLink(node_objectsd25__d25, s5, delay='50ms', bw=1)
net.addLink(node_objectsd24__d24, s5, delay='50ms', bw=1)
*** Starting network
*** Configuring hosts
d6 d7 d10 d8 d9 d14 d15 d11 d12 d13 d4 d5 d2 d3 d1 d29 d28 d30 d27 d26 d20 d16 d17 d18 d19 d21 d23 d22 d25 d24 r0 
*** Starting controller
c0 
*** Starting 6 switches
s2 s3 s1 s6 s4 s5 ...
*** Testing connectivity
net.ping([<Docker d6: d6-eth0:11.0.0.11 pid=32533> , <Docker d7: d7-eth0:11.0.0.12 pid=32715> , <Docker d10: d10-eth0:11.0.0.15 pid=455> , <Docker d8: d8-eth0:11.0.0.13 pid=677> , <Docker d9: d9-eth0:11.0.0.14 pid=869> ])
d6 -> d7 d10 d8 d9 
d7 -> d6 d10 d8 d9 
d10 -> d6 d7 d8 d9 
d8 -> d6 d7 d10 d9 
d9 -> d6 d7 d10 d8 
*** Results: 0% dropped (20/20 received)
net.ping([<Docker d14: d14-eth0:12.0.0.14 pid=1065> , <Docker d15: d15-eth0:12.0.0.15 pid=1277> , <Docker d11: d11-eth0:12.0.0.11 pid=1477> , <Docker d12: d12-eth0:12.0.0.12 pid=1663> , <Docker d13: d13-eth0:12.0.0.13 pid=1868> ])
d14 -> d15 d11 d12 d13 
d15 -> d14 d11 d12 d13 
d11 -> d14 d15 d12 d13 
d12 -> d14 d15 d11 d13 
d13 -> d14 d15 d11 d12 
*** Results: 0% dropped (20/20 received)
net.ping([<Docker d4: d4-eth0:10.0.0.14 pid=2058> , <Docker d5: d5-eth0:10.0.0.15 pid=2257> , <Docker d2: d2-eth0:10.0.0.12 pid=2451> , <Docker d3: d3-eth0:10.0.0.13 pid=2639> , <Docker d1: d1-eth0:10.0.0.11 pid=2832> ])
d4 -> d5 d2 d3 d1 
d5 -> d4 d2 d3 d1 
d2 -> d4 d5 d3 d1 
d3 -> d4 d5 d2 d1 
d1 -> d4 d5 d2 d3 
*** Results: 0% dropped (20/20 received)
net.ping([<Docker d29: d29-eth0:15.0.0.14 pid=3032> , <Docker d28: d28-eth0:15.0.0.13 pid=3226> , <Docker d30: d30-eth0:15.0.0.15 pid=3420> , <Docker d27: d27-eth0:15.0.0.12 pid=3616> , <Docker d26: d26-eth0:15.0.0.11 pid=3800> ])
d29 -> d28 d30 d27 d26 
d28 -> d29 d30 d27 d26 
d30 -> d29 d28 d27 d26 
d27 -> d29 d28 d30 d26 
d26 -> d29 d28 d30 d27 
*** Results: 0% dropped (20/20 received)
net.ping([<Docker d20: d20-eth0:13.0.0.15 pid=3989> , <Docker d16: d16-eth0:13.0.0.11 pid=4177> , <Docker d17: d17-eth0:13.0.0.12 pid=4366> , <Docker d18: d18-eth0:13.0.0.13 pid=4555> , <Docker d19: d19-eth0:13.0.0.14 pid=4742> ])
d20 -> d16 d17 d18 d19 
d16 -> d20 d17 d18 d19 
d17 -> d20 d16 d18 d19 
d18 -> d20 d16 d17 d19 
d19 -> d20 d16 d17 d18 
*** Results: 0% dropped (20/20 received)
net.ping([<Docker d21: d21-eth0:14.0.0.11 pid=4936> , <Docker d23: d23-eth0:14.0.0.13 pid=5127> , <Docker d22: d22-eth0:14.0.0.12 pid=5312> , <Docker d25: d25-eth0:14.0.0.15 pid=5498> , <Docker d24: d24-eth0:14.0.0.14 pid=5692> ])
d21 -> d23 d22 d25 d24 
d23 -> d21 d22 d25 d24 
d22 -> d21 d23 d25 d24 
d25 -> d21 d23 d22 d24 
d24 -> d21 d23 d22 d25 
*** Results: 0% dropped (20/20 received)
d6 -> d11 d1 d26 d16 d21 
d11 -> d6 d1 d26 d16 d21 
d1 -> d6 d11 d26 d16 d21 
d26 -> d6 d11 d1 d16 d21 
d16 -> d6 d11 d1 d26 d21 
d21 -> d6 d11 d1 d26 d16 
*** Results: 0% dropped (30/30 received)
*** Starting Screen Sessions 
screen -t command cluster2 for node d6
screen -t command cluster2 for node d7
screen -t command cluster2 for node d10
screen -t command cluster2 for node d8
screen -t command cluster2 for node d9
screen -t command cluster3 for node d14
screen -t command cluster3 for node d15
screen -t command cluster3 for node d11
screen -t command cluster3 for node d12
screen -t command cluster3 for node d13
screen -t command cluster1 for node d4
screen -t command cluster1 for node d5
screen -t command cluster1 for node d2
screen -t command cluster1 for node d3
screen -t command cluster1 for node d1
screen -t command cluster6 for node d29
screen -t command cluster6 for node d28
screen -t command cluster6 for node d30
screen -t command cluster6 for node d27
screen -t command cluster6 for node d26
screen -t command cluster4 for node d20
screen -t command cluster4 for node d16
screen -t command cluster4 for node d17
screen -t command cluster4 for node d18
screen -t command cluster4 for node d19
screen -t command cluster5 for node d21
screen -t command cluster5 for node d23
screen -t command cluster5 for node d22
screen -t command cluster5 for node d25
screen -t command cluster5 for node d24
*** Running CLI
*** Starting CLI:
containernet> exit
*** Stopping network
*** Stopping 1 controllers
c0 
*** Stopping 36 links
....................................
*** Stopping 6 switches
s2 s3 s1 s6 s4 s5 
*** Stopping 31 hosts
d6 d7 d10 d8 d9 d14 d15 d11 d12 d13 d4 d5 d2 d3 d1 d29 d28 d30 d27 d26 d20 d16 d17 d18 d19 d21 d23 d22 d25 d24 r0 
*** Done
*** Removing NAT rules of 0 SAPs

*** Stopping Screen Sessions 
root@csst-06:/home/ubuntu/laspdev# 